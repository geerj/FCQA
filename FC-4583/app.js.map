{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/process/browser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js","src/app.js","src/components/cmp-add-edit-cred/add-edit-cred.js","src/components/cmp-add-edit-issuer/add-edit-issuer.js","src/components/cmp-add-edit-subject/add-edit-subject.js","src/components/cmp-grid-group/grid-group.js","src/components/cmp-infographic-svg/infographic-svg.js","src/components/cmp-job-type-detail/job-type-detail.js","src/components/cmp-manage-credentials/manage-credentials.js","src/components/cmp-manage-issuers/manage-issuers.js","src/components/cmp-manage-subjects/manage-subjects.js","src/components/cmp-nav-list-item/nav-list-item.js","src/components/cmp-nav-list/nav-list.js","src/components/cmp-pay-schedule/pay-schedule.js","src/components/cmp-profile-table/profile-table.js","src/components/cmp-profile-table/profile-table.logic.js","src/components/cmp-protected-resource/protected-resource.js","src/components/cmp-security-scope/security-scope.js","src/components/cmp-tag/tag.js","src/components/cmp-user-access-return/user-access-return.js","src/config/base-component.js","src/config/base-segment.js","src/config/base-state.js","src/config/load-config.js","src/config/router.js","src/helpers/createPermissionsHlp/create-permissions.js","src/helpers/securityScopeHlp/security-scope.js","src/includes.js","src/module.js","src/partials.compiled.js","src/routes/general-config/credentials/credentials.state.js","src/routes/general-config/credentials/segment-credential-content/credential-content.js","src/routes/general-config/credentials/segment-credential-content/credential-content.logic.js","src/routes/general-config/departments/departments.state.js","src/routes/general-config/departments/segment-departments-content/departments-content.js","src/routes/general-config/departments/segment-departments-content/departments-content.logic.js","src/routes/general-config/drivers-license/drivers-license.state.js","src/routes/general-config/drivers-license/segment-drivers-license-content/drivers-license-content.js","src/routes/general-config/drivers-license/segment-drivers-license-content/drivers-license-content.logic.js","src/routes/general-config/employment-groups/employment-groups.state.js","src/routes/general-config/employment-groups/segment-employment-groups/employment-groups.js","src/routes/general-config/employment-groups/segment-employment-groups/employment-groups.logic.js","src/routes/general-config/general-config.state.js","src/routes/general-config/job-types/job-type-detail/job-type-detail.state.js","src/routes/general-config/job-types/job-type-detail/segment-job-type-detail/job-type-detail.js","src/routes/general-config/job-types/job-type-detail/segment-job-type-detail/job-type-detail.logic.js","src/routes/general-config/job-types/job-types.state.js","src/routes/general-config/job-types/segment-job-types-content/job-types-content.js","src/routes/general-config/job-types/segment-job-types-content/job-types-content.logic.js","src/routes/general-config/locations/locations.state.js","src/routes/general-config/locations/segment-locations-content/locations-content.js","src/routes/general-config/locations/segment-locations-content/locations-content.logic.js","src/routes/general-config/positions/positions.state.js","src/routes/general-config/positions/segment-positions-content/positions-content.js","src/routes/general-config/positions/segment-positions-content/positions-content.logic.js","src/routes/general-config/segment-content/content.js","src/routes/general-config/segment-content/content.logic.js","src/routes/general-config/segment-sidebar/sidebar.js","src/routes/general-config/segment-sidebar/sidebar.logic.js","src/routes/general-config/signatures/segment-signatures-content/signatures-content.js","src/routes/general-config/signatures/segment-signatures-content/signatures-content.logic.js","src/routes/general-config/signatures/signatures.state.js","src/routes/general-config/status-reasons/segment-status-reasons-content/status-reasons-content.js","src/routes/general-config/status-reasons/segment-status-reasons-content/status-reasons-content.logic.js","src/routes/general-config/status-reasons/status-reasons.state.js","src/routes/index/index.state.js","src/routes/permissions/groups/group-all/group-all.state.js","src/routes/permissions/groups/group-all/segment-content/content.js","src/routes/permissions/groups/group-all/segment-content/content.logic.js","src/routes/permissions/groups/group-detail/group-detail.state.js","src/routes/permissions/groups/group-detail/group-members/group-members.state.js","src/routes/permissions/groups/group-detail/group-members/segment-content/content.js","src/routes/permissions/groups/group-detail/group-members/segment-content/content.logic.js","src/routes/permissions/groups/group-detail/profile-and-scope/profile-and-scope.state.js","src/routes/permissions/groups/group-detail/profile-and-scope/segment-content/content.js","src/routes/permissions/groups/group-detail/profile-and-scope/segment-content/content.logic.js","src/routes/permissions/groups/group-detail/segment-content/content.js","src/routes/permissions/groups/group-detail/segment-content/content.logic.js","src/routes/permissions/groups/groups.state.js","src/routes/permissions/groups/segment-content/content.js","src/routes/permissions/groups/segment-content/content.logic.js","src/routes/permissions/permissions.state.js","src/routes/permissions/profiles/profile-all/profile-all.state.js","src/routes/permissions/profiles/profile-all/segment-content/content.js","src/routes/permissions/profiles/profile-all/segment-content/content.logic.js","src/routes/permissions/profiles/profile-detail/profile-detail.state.js","src/routes/permissions/profiles/profile-detail/segment-content/content.js","src/routes/permissions/profiles/profile-detail/segment-content/content.logic.js","src/routes/permissions/profiles/profile-detail/tab/segment-tab-content/tab-content.js","src/routes/permissions/profiles/profile-detail/tab/segment-tab-content/tab-content.logic.js","src/routes/permissions/profiles/profile-detail/tab/tab.state.js","src/routes/permissions/profiles/profiles.state.js","src/routes/permissions/profiles/segment-content/content.js","src/routes/permissions/profiles/segment-content/content.logic.js","src/routes/permissions/segment-content/content.js","src/routes/permissions/segment-content/content.logic.js","src/routes/permissions/segment-header/header.js","src/routes/permissions/segment-header/header.logic.js","src/routes/permissions/users/index/index.state.js","src/routes/permissions/users/index/segment-content/content.js","src/routes/permissions/users/index/segment-content/content.logic.js","src/routes/permissions/users/user-detail/segment-content/content.js","src/routes/permissions/users/user-detail/segment-content/content.logic.js","src/routes/permissions/users/user-detail/user-detail.state.js","src/routes/permissions/users/users.state.js","src/routes/user-accounts/segment-content-old/content-old.js","src/routes/user-accounts/segment-content-old/content-old.logic.js","src/routes/user-accounts/segment-content/content.js","src/routes/user-accounts/segment-content/content.logic.js","src/routes/user-accounts/user-accounts.state.js","src/services/messagingSvc/messaging.js","src/services/propertyActionLabelSvc/property-action-label.js"],"names":[],"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import './partials.compiled';\nimport './module';\nimport './includes';\n\nvar _win = (0,eval)('this'); // jshint ignore:line\nif (_win.registerUiModule) { _win.registerUiModule('ec-settings'); }\n","import { Component } from 'base-component';\n// #---------------------------------------# //\n// #---- Component (cmp-add-edit-cred) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tcredential: '=',\n\tonNewCancel: '&',\n\tonAdd: '&',\n\tonDelete: '&',\n\tonSave: '&',\n\tsingleEditing: '=', // used to only allow editing one credential at a given time\n};\n\nclass AddEditCred extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssAsync, ssCredentialsApi, ssToastHlp, ssValidationHlp, ssModalSvc, messagingSvc) {\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tisNew: $scope.credential.id == null,\n\t\t\tisSaving: false,\n\t\t\tcanAddEdit: !routeVm.isStateNational\n\t\t};\n\n\t\t$scope.validator = {\n\t\t\tname: ssValidationHlp.string({ minLength: 1, maxLength: 100, required: true }, [\n\t\t\t\t(val, field) => {\n\t\t\t\t\tlet ret = true;\n\t\t\t\t\t','.split('').forEach(c => {\n\t\t\t\t\t\tif (ret !== true) { return; }\n\t\t\t\t\t\tif (val.indexOf(c) >= 0) { ret = `${field} cannot contain the '${c}' character`; }\n\t\t\t\t\t});\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(val, field) => {\n\t\t\t\t\tif (val.trim().length === 0) { return `${field} is required`; }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t])\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tedit() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: messagingSvc.getPlaceholderMessage('credentials', 'editConfirmationTitle', ['Credential']),\n\t\t\t\t\tcontent: messagingSvc.getPlaceholderMessage('credentials', 'editConfirmationMessage', ['credential']),\n\t\t\t\t\tprimaryText: messagingSvc.getMessage('general', 'continueEditing'),\n\t\t\t\t\tsecondaryText: messagingSvc.getMessage('general', 'cancel'),\n\t\t\t\t}).then(() => {\n\t\t\t\t\t$scope.singleEditing.value = true;\n\t\t\t\t\t$scope.credential.isEditing = true;\n\t\t\t\t});\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t$scope.onNewCancel();\n\t\t\t\t} else {\n\t\t\t\t\t$scope.credential.$revert();\n\t\t\t\t}\n\t\t\t\t$scope.singleEditing.value = false;\n\t\t\t\t$scope.credential.isEditing = false;\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: messagingSvc.getPlaceholderMessage('credentials', 'deleteConfirmationTitle', ['Credential']),\n\t\t\t\t\tcontent: messagingSvc.getPlaceholderMessage('credentials', 'deleteConfirmationMessage', ['credential']),\n\t\t\t\t\tprimaryText: messagingSvc.getMessage('general', 'delete'),\n\t\t\t\t\tsecondaryText: messagingSvc.getMessage('general', 'cancel'),\n\t\t\t\t}).then(() => {\n\t\t\t\t\tif (vm.isSaving) { return; }\n\t\t\t\t\tvm.isSaving = true;\n\t\t\t\t\tssAsync(function*() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet res = yield $scope.credential.$remove();\n\t\t\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\t\t\tssToastHlp.success('', `Credential \"${$scope.credential._name}\" Removed`, false);\n\t\t\t\t\t\t\t\t$scope.onDelete({ $credential: $scope.credential });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t});\n\t\t\t},\n\t\t\tsave() {\n\t\t\t\tif (vm.isSaving) { return; }\n\t\t\t\tvm.isSaving = true;\n\t\t\t\tssAsync(function*() {\n\t\t\t\t\t$scope.credential._name = $scope.credential._name.trim();\n\t\t\t\t\tlet res;\n\t\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t\tres = yield ssCredentialsApi.addCredential({}, $scope.credential);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = yield $scope.credential.$save();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t\t\tres.isEditing = false;\n\t\t\t\t\t\t\t// this calls the parent component to add the new credential to the list\n\t\t\t\t\t\t\t// and null the newCred ref to remove this component\n\t\t\t\t\t\t\t$scope.onAdd({ $newCred: res });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.credential.isEditing = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($scope.onSave) { $scope.onSave(); }\n\t\t\t\t\t\tssToastHlp.success('', `Credential \"${$scope.credential._name}\" Saved`, false);\n\t\t\t\t\t}\n\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t})();\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-add-edit-cred) --# //\n// #---------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpAddEditCred', () => new AddEditCred(props, 'add-edit-cred'));\n","import { Component } from 'base-component';\n// #-----------------------------------------# //\n// #---- Component (cmp-add-edit-issuer) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tissuer: '=',\n\tonNewCancel: '&',\n\tonAdd: '&',\n\tonDelete: '&',\n\tonSave: '&',\n\tsingleEditing: '=', // used to only allow editing one issuer at a given time\n};\n\nclass AddEditIssuer extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssAsync, ssCredentialsApi, ssToastHlp, ssValidationHlp, ssDateByOrgHlp, ssModalSvc, messagingSvc) {\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tvar org = routeVm.org;\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tisNew: $scope.issuer.id == null,\n\t\t\tupdatedUtcTxt: $scope.issuer._updatedUtc != null ? ssDateByOrgHlp.utcIsoToRelativeMoment($scope.issuer._updatedUtc, org).format('MM/DD/YYYY') : null,\n\t\t\tisSaving: false,\n\t\t\tcanAddEdit: !routeVm.isStateNational,\n\t\t};\n\n\t\t$scope.validator = {\n\t\t\tname: ssValidationHlp.string({ minLength: 1, maxLength: 100, required: true }, [\n\t\t\t\t(val, field) => {\n\t\t\t\t\tlet ret = true;\n\t\t\t\t\t','.split('').forEach(c => {\n\t\t\t\t\t\tif (ret !== true) { return; }\n\t\t\t\t\t\tif (val.indexOf(c) >= 0) { ret = `${field} cannot contain the '${c}' character`; }\n\t\t\t\t\t});\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(val, field) => {\n\t\t\t\t\tif (val.trim().length === 0) { return `${field} is required`; }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t])\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tedit() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: messagingSvc.getPlaceholderMessage('credentials', 'editConfirmationTitle', ['Issuer']),\n\t\t\t\t\tcontent: messagingSvc.getPlaceholderMessage('credentials', 'editConfirmationMessage', ['issuer']),\n\t\t\t\t\tprimaryText: messagingSvc.getMessage('general', 'continueEditing'),\n\t\t\t\t\tsecondaryText: messagingSvc.getMessage('general', 'cancel'),\n\t\t\t\t}).then(() => {\n\t\t\t\t\t$scope.singleEditing = true;\n\t\t\t\t\t$scope.issuer.isEditing = true;\n\t\t\t\t});\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t$scope.onNewCancel();\n\t\t\t\t} else {\n\t\t\t\t\t$scope.issuer.$revert();\n\t\t\t\t}\n\t\t\t\t$scope.singleEditing = false;\n\t\t\t\t$scope.issuer.isEditing = false;\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: messagingSvc.getPlaceholderMessage('credentials', 'deleteConfirmationTitle', ['Issuer']),\n\t\t\t\t\tcontent: messagingSvc.getPlaceholderMessage('credentials', 'deleteConfirmationMessage', ['issuer']),\n\t\t\t\t\tprimaryText: messagingSvc.getMessage('general', 'delete'),\n\t\t\t\t\tsecondaryText: messagingSvc.getMessage('general', 'cancel'),\n\t\t\t\t}).then(() => {\n\t\t\t\t\tif (vm.isSaving) { return; }\n\t\t\t\t\tvm.isSaving = true;\n\t\t\t\t\tssAsync(function*() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet res = yield $scope.issuer.$remove();\n\t\t\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\t\t\tssToastHlp.success('', `Issuer \"${$scope.issuer._name}\" Removed`, false);\n\t\t\t\t\t\t\t\t$scope.onDelete({ $issuer: $scope.issuer });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t});\n\t\t\t},\n\t\t\tsave() {\n\t\t\t\tif (vm.isSaving) { return; }\n\t\t\t\tvm.isSaving = true;\n\t\t\t\tssAsync(function*() {\n\t\t\t\t\t$scope.issuer._name = $scope.issuer._name.trim();\n\t\t\t\t\tlet res;\n\t\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t\t$scope.issuer._organizationId = org.id;\n\t\t\t\t\t\tres = yield ssCredentialsApi.addIssuer({}, $scope.issuer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = yield $scope.issuer.$save();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t\t\tres.isEditing = false;\n\t\t\t\t\t\t\t// this calls the parent component to add the new issuer to the list\n\t\t\t\t\t\t\t// and null the newIssuer ref to remove this component\n\t\t\t\t\t\t\t$scope.onAdd({ $newIssuer: res });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvm.updatedUtcTxt = ssDateByOrgHlp.utcIsoToRelativeMoment($scope.issuer._updatedUtc, org).format('MM/DD/YYYY');\n\t\t\t\t\t\t\t$scope.issuer.isEditing = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($scope.onSave) { $scope.onSave(); }\n\t\t\t\t\t\tssToastHlp.success('', `Issuer \"${$scope.issuer._name}\" Saved`, false);\n\t\t\t\t\t}\n\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t})();\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-add-edit-issuer) --# //\n// #-----------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpAddEditIssuer', () => new AddEditIssuer(props, 'add-edit-issuer'));\n","import { Component } from 'base-component';\n// #------------------------------------------# //\n// #---- Component (cmp-add-edit-subject) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tsubject: '=',\n\torg: '=',\n\tonNewCancel: '&',\n\tonAdd: '&',\n\tonDelete: '&',\n\tonSave: '&',\n\tsingleEditing: '=', // used to only allow editing one subject at a given time\n};\n\nclass AddEditSubject extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssAsync, ssCredentialsApi, ssToastHlp, ssValidationHlp, ssModalSvc, ssDateByOrgHlp, messagingSvc) {\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tvar org = routeVm.org;\n\t\t\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tisNew: $scope.subject.id == null,\n\t\t\tupdatedUtcTxt: $scope.subject._updatedUtc != null ? ssDateByOrgHlp.utcIsoToRelativeMoment($scope.subject._updatedUtc, org).format('MM/DD/YYYY') : null,\n\t\t\tisSaving: false,\n\t\t\tcanAddEdit: !routeVm.isStateNational\n\t\t};\n\n\t\t$scope.validator = {\n\t\t\tname: ssValidationHlp.string({ minLength: 1, maxLength: 100, required: true }, [\n\t\t\t\t(val, field) => {\n\t\t\t\t\tlet ret = true;\n\t\t\t\t\t','.split('').forEach(c => {\n\t\t\t\t\t\tif (ret !== true) { return; }\n\t\t\t\t\t\tif (val.indexOf(c) >= 0) { ret = `${field} cannot contain the '${c}' character`; }\n\t\t\t\t\t});\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(val, field) => {\n\t\t\t\t\tif (val.trim().length === 0) { return `${field} is required`; }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t])\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tedit() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: messagingSvc.getPlaceholderMessage('credentials', 'editConfirmationTitle', ['Subject']),\n\t\t\t\t\tcontent: messagingSvc.getPlaceholderMessage('credentials', 'editConfirmationMessage', ['subject']),\n\t\t\t\t\tprimaryText: messagingSvc.getMessage('general', 'continueEditing'),\n\t\t\t\t\tsecondaryText: messagingSvc.getMessage('general', 'cancel'),\n\t\t\t\t}).then(() => {\n\t\t\t\t\t$scope.singleEditing.value = true;\n\t\t\t\t\t$scope.subject.isEditing = true;\n\t\t\t\t});\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t$scope.onNewCancel();\n\t\t\t\t} else {\n\t\t\t\t\t$scope.subject.$revert();\n\t\t\t\t}\n\t\t\t\t$scope.singleEditing.value = false;\n\t\t\t\t$scope.subject.isEditing = false;\n\t\t\t},\n\t\t\tremove() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: messagingSvc.getPlaceholderMessage('credentials', 'deleteConfirmationTitle', ['Subject']),\n\t\t\t\t\tcontent: messagingSvc.getPlaceholderMessage('credentials', 'deleteConfirmationMessage', ['subject']),\n\t\t\t\t\tprimaryText: messagingSvc.getMessage('general', 'delete'),\n\t\t\t\t\tsecondaryText: messagingSvc.getMessage('general', 'cancel'),\n\t\t\t\t}).then(() => {\n\t\t\t\t\tif (vm.isSaving) { return; }\n\t\t\t\t\tvm.isSaving = true;\n\t\t\t\t\tssAsync(function*() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet res = yield $scope.subject.$remove();\n\t\t\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\t\t\tssToastHlp.success('', `Subject \"${$scope.subject._name}\" Removed`, false);\n\t\t\t\t\t\t\t\t$scope.onDelete({ $subject: $scope.subject });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t});\n\t\t\t},\n\t\t\tsave() {\n\t\t\t\tif (vm.isSaving) { return; }\n\t\t\t\tvm.isSaving = true;\n\t\t\t\tssAsync(function*() {\n\t\t\t\t\t$scope.subject._name = $scope.subject._name.trim();\n\t\t\t\t\tlet res;\n\t\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t\tres = yield ssCredentialsApi.addSubject({}, $scope.subject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = yield $scope.subject.$save();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\tif (vm.isNew) {\n\t\t\t\t\t\t\tres.isEditing = false;\n\t\t\t\t\t\t\t// this calls the parent component to add the new subject to the list\n\t\t\t\t\t\t\t// and null the newSubject ref to remove this component\n\t\t\t\t\t\t\t$scope.onAdd({ $newSubject: res });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvm.updatedUtcTxt = ssDateByOrgHlp.utcIsoToRelativeMoment($scope.subject._updatedUtc, org).format('MM/DD/YYYY');\n\t\t\t\t\t\t\t$scope.subject.isEditing = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($scope.onSave) { $scope.onSave(); }\n\t\t\t\t\t\tssToastHlp.success('', `Subject \"${$scope.subject._name}\" Saved`, false);\n\t\t\t\t\t}\n\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t})();\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-add-edit-subject) --# //\n// #------------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpAddEditSubject', () => new AddEditSubject(props, 'add-edit-subject'));\n","import { Component } from 'base-component';\n// #------------------------------------# //\n// #---- Component (cmp-grid-group) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\titemType: '@',\n\tendpoint: '&',\n\tconfig: '=',\n\tpermissions: '=',\n\tonBeforeSave: '&', // Function which should return an object {bool: success, string: errorMessage}\n\tonBeforeCancel: '&'\n};\n\nclass GridGroup extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, $state, $q, $log, ssAsync, ssDebounce, ssEnum, ssToastHlp, ssStringHlp, ssValidationHlp, ssStorage, ssMultiInitiativeFeatureDetectorSvc) {\n\n\t\t$scope.validation = { // jshint ignore:line\n\t\t\trequired: ssValidationHlp.required(),\n\t\t\temail: ssValidationHlp.email(),\n\t\t\texternalId: ssValidationHlp.string({ required: !ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled(), maxLength: 100 }),\n\t\t\tzip: ssValidationHlp.zip(),\n\t\t\tfilteredItems: []\n\t\t};\n\n\t\tconst pageSize = 50;\n\t\tlet currentRequest = null;\n\n\t\tlet sortOptions = null;\n\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t\tselected: [],\n\t\t\tloading: false,\n\t\t\tdisableEdit: false,\n\t\t\tisEditOrAdd: false,\n\t\t\tpermissions: $scope.permissions,\n\t\t\tpages: 0,\n\t\t\tuiFilter: {\n\t\t\t\tfilterActive: false,\n\t\t\t\tfilterValue: ''\n\t\t\t},\n\t\t\tuiSort: {\n\t\t\t\tsortActive: false,\n\t\t\t\tsortValue: '+_name'\n\t\t\t}\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\n\t\t\teditItem(item) {\n\t\t\t\titem.isEditing = true;\n\t\t\t\tsetDisabledState();\n\t\t\t},\n\n\t\t\tcancel(item) {\n\t\t\t\t$scope.onBeforeCancel({item: item})\n\n\t\t\t\titem.isEditing = false;\n\t\t\t\tif (item.isAdding) {\n\t\t\t\t\tlet index = vm.allItems.indexOf(item);\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tvm.allItems.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\titem.$revert();\n\t\t\t\t}\n\t\t\t\tsetDisabledState();\n\t\t\t},\n\n\t\t\taddNewItem() {\n\t\t\t\tvm.allItems.unshift({ isEditing: true, isAdding: true });\n\t\t\t\tsetDisabledState();\n\t\t\t},\n\n\t\t\tsaveItem(item) {\n\t\t\t\tif (!item.isAdding && item.$save) {\n\n\t\t\t\t\titem.isSaving = true;\n\t\t\t\t\t\n\t\t\t\t\tlet onBeforeSaveResult = $scope.onBeforeSave({item: item});\n\t\t\t\t\t\n\t\t\t\t\tif (onBeforeSaveResult) {\n\t\t\t\t\t\t// If there was an error stop the save process.\n\t\t\t\t\t\tif (!onBeforeSaveResult.success){\n\t\t\t\t\t\t\titem.isSaving = false;\n\t\t\t\t\t\t\tssToastHlp.error(``, `${onBeforeSaveResult.errorMessage}`, false);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\titem.$save().then(() => {\n\t\t\t\t\t\tssToastHlp.success(``, `${ssStringHlp.toTitleCase($scope.itemType)} \"${item._name}\" Saved`, false);\n\t\t\t\t\t\titem.isEditing = false;\n\t\t\t\t\t\tsetDisabledState();\n\n\t\t\t\t\t\titem.isSaving = false;\n\t\t\t\t\t\tssStorage.clear($scope.config.cacheKey);\n\t\t\t\t\t\t$state.reload();\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t// ssToastHlp.error(``,`error while saving ${$scope.itemType} \"${item._name}\"`, false);\n\t\t\t\t\t\t$log.error(`error while saving ${$scope.itemType} \"${item._name}\"`, error);\n\t\t\t\t\t\titem.isSaving = false;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar onBeforeSaveResult = $scope.onBeforeSave({item: item})\n\t\t\t\t\t\n\t\t\t\t\tif (onBeforeSaveResult) {\n\t\t\t\t\t\t// If there was an error stop the save process.\n\t\t\t\t\t\tif (!onBeforeSaveResult.success){\n\t\t\t\t\t\t\titem.isSaving = false;\n\t\t\t\t\t\t\tssToastHlp.error(``, `${onBeforeSaveResult.errorMessage}`, false);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvm.allItems.$save(false).then(() => {\n\t\t\t\t\t\tssToastHlp.success(``, `New ${ssStringHlp.toTitleCase($scope.itemType)} \"${item._name}\" Added`, false);\n\t\t\t\t\t\tfetchData({ currentPage: 1 });\n\n\t\t\t\t\t\t// reset the cache and reload the state to get out of edit mode\n\t\t\t\t\t\tssStorage.clear($scope.config.cacheKey);\n\t\t\t\t\t\t$state.reload();\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t// ssToastHlp.error(``,`error while saving ${$scope.itemType} \"${item._name}\"`, false);\n\t\t\t\t\t\t$log.error(`error while saving ${$scope.itemType} \"${item._name}\"`, error);\n\n\t\t\t\t\t\titem.isSaving = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tremoveItem(target) {\n\t\t\t\tvar toastMsg;\n\t\t\t\tvar totalCount = 0;\n\t\t\t\tvar successCount = 0;\n\t\t\t\tvar itemsRemoved = [];\n\n\t\t\t\t//\tMake sure the targets are an array\n\t\t\t\tif (!angular.isArray(target)) {\n\t\t\t\t\ttarget = [target];\n\t\t\t\t}\n\n\t\t\t\t//\tmethod to loop through the target array and attempt to remove each item\n\t\t\t\tfunction remove() {\n\t\t\t\t\tvar deferred = $q.defer();\n\n\t\t\t\t\ttarget.forEach((item) => {\n\n\t\t\t\t\t\t//\tmake sure the individual item is found in the collection\n\t\t\t\t\t\tlet foundItem = vm.allItems.find((f) => {\n\t\t\t\t\t\t\treturn f.id === item.id;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//\tattempt removal of items and resolve after all have run\n\t\t\t\t\t\tif (foundItem) {\n\t\t\t\t\t\t\tfoundItem.$remove().then((res) => {\n\t\t\t\t\t\t\t\titemsRemoved.push(item);\n\t\t\t\t\t\t\t\tsuccessCount++;\n\t\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\t\t// ssToastHlp.error(``,`error while removing ${item._name._name}`, false);\n\t\t\t\t\t\t\t\t$log.error(`error while deleting \"${item._name}\"`, error);\n\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\ttotalCount++;\n\t\t\t\t\t\t\t\tif (target.length === totalCount) {\n\t\t\t\t\t\t\t\t\tdeferred.resolve(successCount);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\n\t\t\t\tremove().then((successCount) => {\n\t\t\t\t\ttoastMsg = successCount > 1 ? `${successCount} ${$scope.itemType}s` : `\"${itemsRemoved[0]._name}\"`;\n\t\t\t\t\tssToastHlp.success(``, `${toastMsg} deleted`, false);\n\t\t\t\t\t$state.reload();\n\t\t\t\t\tfetchData({ currentPage: 1 });\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tfetchData,\n\n\t\t\tsort({sortBy, sortDirection}) {\n\t\t\t\tif ($scope.config.useUiFilter){\n\t\t\t\t\tvm.uiSort.sortActive = true\n\t\t\t\t\tvm.uiSort.sortValue = (sortDirection == 'asc') ? '+_name' : '-_name'\n\t\t\t\t}else {\n\t\t\t\t\tsortOptions = {\n\t\t\t\t\t\tfield: sortBy,\n\t\t\t\t\t\tdir: sortDirection\n\t\t\t\t\t};\n\t\t\t\t\tfetchData({ currentPage: 1 });\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t},\n\t\t};\n\n\t\tconst debounce = ssDebounce(() => {\n\t\t\tfetchData({ currentPage: 1 });\n\t\t}, 350);\n\n\t\t//\treference $scope.go in order to pass its methods to other scopes\n\t\t$scope.actions = $scope.go;\n\t\t\n\t\t// watch the search input and filter out the results\n\t\tdebounce()\n\n\t\t$scope.$watch('vm.search', (nv, ov) => {\n\t\t\tif ($scope.config.useUiFilter){\n\t\t\t\tvm.uiFilter.filterActive = true\n\t\t\t\tvm.uiFilter.filterValue\t= vm.search\n\t\t\t}else {\n\t\t\t\tdebounce()\n\t\t\t}\n\t\t});\n\n\t\t// watch the selected length and disable all edit functionality if any are selected\n\t\t$scope.$watch('vm.selected.length', function(nv, ov) {\n\t\t\tif (nv === ov) { return; }\n\t\t\tvm.disableEdit = nv > 0;\n\t\t});\n\n\t\tfunction extendModel() {\n\n\t\t\tif (!vm.allItems.length) { return; }\n\n\t\t\tangular.forEach(vm.allItems, function(item) {\n\n\t\t\t\titem.isEditing = false;\n\t\t\t\titem.isSaving = false;\n\n\t\t\t\t// check to see if there is a '_dataCategory' property and set another property on the object with a value of the corresponding '_dataCategory' enum\n\t\t\t\tif (item._dataCategory != null) {\n\t\t\t\t\tif (!$scope.config.hasOwnProperty('dataCategoryEnum')) { throw 'No data category found.' }\n\t\t\t\t\tconst enumType = $scope.config.dataCategoryEnum;\n\t\t\t\t\titem.selectedDataCategory = ssEnum[enumType].byValue(item._dataCategory);\n\t\t\t\t}\n\n\t\t\t\tif (item['name']) {\n\t\t\t\t\titem['_name'] = item['name'];\n\t\t\t\t\tdelete item['name'];\n\t\t\t\t}\n\n\t\t\t\t// adds any additional properties to the item\n\t\t\t\tif ($scope.config.customExtend) {\n\t\t\t\t\titem = $scope.config.customExtend(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// disables the add & select functionality if any items are either currently being added or edited and runs the fetchData function only when that value is false (no items currently being added or edited)\n\t\tfunction setDisabledState() {\n\t\t\t// set a state value based on whether or not any of the items are currently being added or edited\n\t\t\tvm.isEditOrAdd = vm.allItems.some(i => i.isAdding || i.isEditing);\n\t\t}\n\n\t\tfunction fetchData(event) {\n\t\t\tvm.loading = true;\n\n\t\t\tvm.currentPage = event.currentPage;\n\t\t\tif (currentRequest != null) {\n\t\t\t\tcurrentRequest.$abort();\n\t\t\t\tcurrentRequest = null;\n\t\t\t}\n\n\t\t\treturn ssAsync(function*() {\n\t\t\t\ttry {\n\t\t\t\t\tlet filter = Object.assign({}, {\n\t\t\t\t\t\t\toffset: (vm.currentPage - 1) * pageSize,\n\t\t\t\t\t\t\tlimit: pageSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsearchFilter(vm.search, 'name'),\n\t\t\t\t\t\tsortOrNull(sortOptions || {field: 'name', dir: 'asc'})\n\t\t\t\t\t);\n\n\t\t\t\t\tvm.allItems = yield $scope.endpoint({ filter });\n\n\t\t\t\t\tif (vm.allItems != null) {\n\t\t\t\t\t\t// set up pagination fields\n\t\t\t\t\t\tvm.totalResults = parseInt(vm.allItems.$headers['total-results'], 10);\n\t\t\t\t\t\tvm.totalResults = isNaN(vm.totalResults) ? 0 : vm.totalResults;\n\t\t\t\t\t\tvm.pages = Math.ceil(vm.totalResults / pageSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvm.totalResults = 0;\n\t\t\t\t\t\tvm.pages = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\textendModel();\n\n\t\t\t\t} catch (error) {\n\t\t\t\t\tssToastHlp.error('', `Error Retrieving ${$scope.itemType}s`, false);\n\t\t\t\t\tconsole.error(`Error Retrieving ${$scope.itemType}s:`, error);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t\tsetDisabledState();\n\t\t\t\t\tvm.selected = [];\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {string} val - the value so search for\n\t\t * @param {string} type - the field name that the val is mapped to\n\t\t * @returns {object?} - the search object that will be sent to the filter request (OR NULL)\n\t\t */\n\t\tfunction searchFilter(val, type) {\n\t\t\tvar o = {};\n\n\t\t\tif (val != null) {\n\t\t\t\to['filter[' + type + ']'] = val;\n\t\t\t\treturn o;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * sortOrNull - Sets the sort object for a filter request\n\t\t * @param {object} sort - object describing a sort field and direction\n\t\t * @returns {object} - the sort object for a filter request\n\t\t */\n\t\tfunction sortOrNull(sort) {\n\t\t\tif (sort == null) { return; }\n\t\t\tvar o = {};\n\t\t\to['sort[' + sort.field + ']'] = sort.dir;\n\t\t\treturn o;\n\t\t}\n\t}\n}\n\n// #-- END Component (cmp-grid-group) --# //\n// #------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpGridGroup', () => new GridGroup(props, 'grid-group'));\n","import {Component} from 'base-component';\n// #-----------------------------------------# //\n// #---- Component (cmp-infographic-svg) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tforceLoad: '@?'\n};\n\nclass InfographicSvg extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssStorage) {\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t\tinfographic: true\n\t\t};\n\n\t\tif ($scope.forceLoad !== 'true') {\n\t\t\tvm.infographic = ssStorage.load('permissions_infographic') ? !ssStorage.load('permissions_infographic').displayed : true;\n\t\t}\n\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tdismiss() {\n\t\t\t\tssStorage.save('permissions_infographic', {\n\t\t\t\t\tdisplayed: true\n\t\t\t\t}, {\n\t\t\t\t\tpersistent: true,\n\t\t\t\t\texpires: null\n\t\t\t\t});\n\t\t\t\tvm.infographic = !ssStorage.load('permissions_infographic').displayed;\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-infographic-svg) --# //\n// #-----------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpInfographicSvg', () => new InfographicSvg(props, 'infographic-svg'));\n","import {Component} from 'base-component';\n// #-----------------------------------------# //\n// #---- Component (cmp-job-type-detail) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tjobtypeDetail: '=',\n\torg: '='\n};\n\nclass JobTypeDetail extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssOrganizationSvc, ssValidationHlp, ssDateHlp, ssAsync, moment, ssModalSvc, ssToastHlp, $log, ssDateByOrgHlp) {\n\t\t// view model for tracking state\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tvar jobtypeDetail = $scope.jobtypeDetail;\n\t\tconst org = $scope.org;\n\t\tjobtypeDetail.isProcessing = false;\n\t\tjobtypeDetail.editMode = (jobtypeDetail.editMode) ? jobtypeDetail.editMode : false;\n\t\tjobtypeDetail.expanded = jobtypeDetail.expanded ? jobtypeDetail.expanded : (jobtypeDetail.isCurrent || jobtypeDetail.isPast);\n\t\tconst validation = $scope.validation = {\n\t\t\tminZero: ssValidationHlp.numeric({ required: true, min: 0 }),\n\t\t\trequired: ssValidationHlp.required()\n\t\t};\n\n\t\tvar cols = [\n\t\t\t[{\n\t\t\t\tprop: '_fTE',\n\t\t\t\tdisplayText: 'FTE'\n\t\t\t},{\n\t\t\t\tprop: '_hoursPerDay',\n\t\t\t\tdisplayText: 'Hours Per Day'\n\t\t\t},{\n\t\t\t\tprop: '_workDaysPerYear',\n\t\t\t\tdisplayText: 'Work Days Per Year'\n\t\t\t},{\n\t\t\t\tprop: '_payPeriodsPerYear',\n\t\t\t\tdisplayText: 'Pays Per Year'\n\t\t\t}],[{\n\t\t\t\tprop: '_paidHolidaysPerSchoolYear',\n\t\t\t\tdisplayText: 'Paid Holidays Per Year'\n\t\t\t},{\n\t\t\t\tprop: '_sickDaysPerSchoolYear',\n\t\t\t\tdisplayText: 'Sick Days Per Year'\n\t\t\t},{\n\t\t\t\tprop: '_personalDaysPerSchoolYear',\n\t\t\t\tdisplayText: 'Personal Days Per Year'\n\t\t\t},{\n\t\t\t\tprop: '_vacationDaysPerSchoolYear',\n\t\t\t\tdisplayText: 'Vacation Days Per Year'\n\t\t\t}]\n\t\t];\n\n\t\tconst vm = $scope.vm = {\n\t\t\tcols,\n\t\t\tstartDateTxt: ssDateByOrgHlp.utcIsoToRelativeMoment(jobtypeDetail._fromDateUtc, org).format('MM/DD/YYYY'),\n\t\t\tendDateTxt: ssDateHlp.isForeverFuture(jobtypeDetail._toDateUtc) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(jobtypeDetail._toDateUtc,org).format('MM/DD/YYYY'),\n\t\t\thasForeverPast: false\n\t\t};\n\n\n\t\t$scope.$watch('jobtypeDetail', function(nv, ov){\n\t\t\tif(nv === ov) { return; }\n\t\t\tevaluateModel(nv, { editMode: jobtypeDetail.editMode, expanded: jobtypeDetail.expanded });\n\t\t});\n\n\n\t\t$scope.$watch('vm.startDateTxt', (nv, ov) => {\n\t\t\tif(nv === ov) { return; }\n\t\t\tif((nv instanceof Date) && !vm.hasForeverPast){\n\t\t\t\tjobtypeDetail._fromDateUtc = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), org);;\n\t\t\t}\n\t\t});\n\n\t\tfunction evaluateModel(m, override = null){\n\t\t\tjobtypeDetail = $scope.jobtypeDetail = m;\n\t\t\tif(override !== null){\n\t\t\t\tObject.assign(jobtypeDetail, override);\n\t\t\t}\n\t\t\tif(m != null){\n\t\t\t\tvm.hasForeverPast = ssDateHlp.isForeverPast(m._fromDateUtc);\n\t\t\t\tvm.startDateTxt = vm.hasForeverPast ? ssDateByOrgHlp.utcIsoToRelativeMoment(org._createdUtc, org).format('MM/DD/YYYY') : ssDateByOrgHlp.utcIsoToRelativeMoment(m._fromDateUtc, org).format('MM/DD/YYYY');\n\t\t\t\tvm.endDateTxt = ssDateHlp.isForeverFuture(m._toDateUtc) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(m._toDateUtc, org).format('MM/DD/YYYY');\n\t\t\t}\n\t\t}\n\n\n\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { //jshint ignore:line\n\t\t\ttoggle() {\n\t\t\t\tjobtypeDetail.expanded = !jobtypeDetail.expanded;\n\t\t\t},\n\t\t\tdelete() {\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: `<h2>Are you sure you want to delete this Job type detail?</h2>`,\n\t\t\t\t\tprimaryText: 'Delete',\n\t\t\t\t\tsecondaryText: 'Cancel',\n\t\t\t\t}).then(() => {\n\t\t\t\t\tjobtypeDetail.isProcessing = true;\n\t\t\t\t\tssAsync(function* () {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet index = routeVm.jobType._jobTypeDetails.indexOf(jobtypeDetail);\n\t\t\t\t\t\t\trouteVm.jobType._jobTypeDetails.splice(index,1);\n\t\t\t\t\t\t\tyield routeVm.jobType._jobTypeDetails.$save();\n\t\t\t\t\t\t\trouteVm.fetchJobType(true, false);\n\t\t\t\t\t\t\tssToastHlp.success(``, `Job Type Deleted`, false);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tssToastHlp.error(``,`Error while deleting Job Type detail`, false);\n\t\t\t\t\t\t\t$log.error(`Error while deleting Job Type detail`, e);\n\t\t\t\t\t\t} finally{\n\t\t\t\t\t\t\tjobtypeDetail.isProcessing = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t});\n\n\t\t\t},\n\t\t\tedit(){\n\t\t\t\tjobtypeDetail.editMode = !jobtypeDetail.editMode;\n\t\t\t\tif(!jobtypeDetail.expanded) { jobtypeDetail.expanded = true; }\n\t\t\t},\n\t\t\tcancel(){\n\t\t\t\tif(jobtypeDetail.id <= 0) {\n\t\t\t\t\tjobtypeDetail = null;\n\t\t\t\t}else{\n\t\t\t\t\tjobtypeDetail.editMode = !jobtypeDetail.editMode;\n\t\t\t\t\tjobtypeDetail.expanded = jobtypeDetail.isCurrent;\n\t\t\t\t\tjobtypeDetail.$revert();\n\t\t\t\t}\n\t\t\t\tevaluateModel(jobtypeDetail);\n\t\t\t\t$scope.$emit('ss-validate-reset');\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-job-type-detail) --# //\n// #-----------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpJobTypeDetail', () => new JobTypeDetail(props, 'job-type-detail') );\n","import { Component } from 'base-component';\n// #--------------------------------------------# //\n// #---- Component (cmp-manage-credentials) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n};\n\nclass ManageCredentials extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, $window, ssAsync, ssObjectHlp, ssCredentialDataAccessSvc, ssCredentialBusinessEngineSvc, ssDateHlp, ssDateByOrgHlp, ssToastHlp, ssOrganizationSvc) {\n\t\tconst { credentialConstants } = ssCredentialBusinessEngineSvc;\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tvar org = {};\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tissuers: [],\n\t\t\tissuer: null,\n\t\t\tcreds: [],\n\t\t\tisEditing: { value: false },\n\t\t\tisExporting: false,\n\t\t\tloading: false,\n\t\t\tissuer: -1,\n\t\t\tcanAddEdit: !routeVm.isStateNational,\n\t\t};\n\n\t\t// Get the issuers for the page\n\t\tssAsync(function* () {\n\t\t\ttry {\n\t\t\t\torg = yield ssOrganizationSvc.getActiveOrg();\n\t\t\t\tlet type = routeVm.isStateNational ? credentialConstants.STATE_NATIONAL : credentialConstants.DISTRICT_CUSTOM;\n\n\t\t\t\tvm.issuers = {};\n\t\t\t\tvm.loading = true;\n\n\t\t\t\tif (routeVm.isStateNational) {\n\t\t\t\t\tif (routeVm.credentialType === 'certificate-licenses') {\n\t\t\t\t\t\t// **** CERTIFICATES & LICENSES ****\n\t\t\t\t\t\tvm.issuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// **** CLEARANCES ****\n\t\t\t\t\t\tvm.issuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// **** CUSTOM ****\n\t\t\t\t\tvm.issuers = yield ssCredentialDataAccessSvc.getIssuers(type);\n\t\t\t\t}\n\n\t\t\t\t// If we have an org with a state, find the first matching issuer and pre-select it\n\t\t\t\t//\twe don't need to worry about something coming in pre-selected as this isn't \n\t\t\t\t//\tan option for this view\n\t\t\t\tvm.issuer = vm.issuers[0];\n\t\t\t\tif (org && ssObjectHlp.glean(org, _=>_._address.state.length, false)) {\n\t\t\t\t\t// find the first matching issuer\n\t\t\t\t\tlet i = vm.issuers.find((issr) => issr._stateId === org._address.state);\n\t\t\t\t\tvm.issuer = i || vm.issuers[0];\n\t\t\t\t\tvm.updatedUtcTxt = getIssuerText();\n\t\t\t\t}\n\n\t\t\t\tsort(vm.issuers);\n\n\t\t\t} catch (error) {\n\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t} finally {\n\t\t\t\tvm.loading = false;\n\t\t\t}\n\t\t})();\n\n\t\t$scope.$watch('vm.issuer', nv => {\n\t\t\t// if the issuer name is a single character skip (we have alphabetical)\n\t\t\tif (nv == null || nv === -1) { return; }\n\n\t\t\tvm.updatedUtcTxt = getIssuerText();\n\t\t\tssAsync(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvm.loading = true;\n\t\t\t\t\tvm.creds = yield ssCredentialDataAccessSvc.getCredentialsByIssuer(vm.issuer.id);\n\t\t\t\t\tvm.creds.forEach(cred => cred.isEditing = false);\n\t\t\t\t\tsort(vm.creds);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\n\t\t/**\n\t\t * Saves a local data stream as a file\n\t\t * @param {string} dataUri - The data/url of the API response\n\t\t * @param {*} filename  - The name to assign to the file should the browser support the download attribute\n\t\t */\n\t\tfunction saveLocalExport(dataUri, filename) {\n\t\t\tif (!filename) filename = 'export.csv';\n\t\t\tif (!dataUri) throw new Error(\"The dataUri is null and the export cannot continue.\");\n\n\t\t\t// Create the dummy anchor and click it to start the download.  This is only doable because\n\t\t\t//\twe are able to base64 encode the API result into a string and save that using the browser FileReader API\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\ta.style = \"display: none\";\n\t\t\ta.href = dataUri;\n\t\t\ta.download = filename;\n\n\t\t\tdocument.body.appendChild(a);\n\t\t\ta.click();\n\t\t\tdocument.body.removeChild(a);\n\t\t}\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\texportCredentials() {\n\t\t\t\t// Export Credentials to CSV\n\t\t\t\tssCredentialDataAccessSvc.downloadCredentialsCsv(vm.issuer.id).then(response => {\n\t\t\t\t\tif (response && response.data) {\n\t\t\t\t\t\t// Create the dummy anchor and click it to start the download.\n\t\t\t\t\t\tvar a = document.createElement(\"a\");\n\t\t\t\t\t\ta.style.display = 'none';\n\t\t\t\t\t\ta.href = response.data.data.attributes.string;\n\n\t\t\t\t\t\tdocument.body.appendChild(a);\n\t\t\t\t\t\ta.click();\n\t\t\t\t\t\tdocument.body.removeChild(a);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole && console.error && console.error('invalid response from employee credential endpoint. Unable to save to csv.');\n\t\t\t\t\t\tssToastHlp.error('Unable to save export.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t\tvm.isExporting = false;\n\t\t\t\t});\n\t\t\t},\n\t\t\texportSubjects() {\n\t\t\t\t// Export Subjects to CSV\n\t\t\t\tvm.isExporting = true;\n\n\t\t\t\t// Get the CSV as post data and push it into a FileReader\n\t\t\t\tssCredentialDataAccessSvc.downloadSubjectsCsv(vm.issuer.id).then(response => {\n\t\t\t\t\tif (response && response.data) {\n\t\t\t\t\t\t// Create the dummy anchor and click it to start the download.\n\t\t\t\t\t\tvar a = document.createElement(\"a\");\n\t\t\t\t\t\ta.style.display = 'none';\n\t\t\t\t\t\ta.href = response.data.data.attributes.string;\n\n\t\t\t\t\t\tdocument.body.appendChild(a);\n\t\t\t\t\t\ta.click();\n\t\t\t\t\t\tdocument.body.removeChild(a);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole && console.error && console.error('invalid response from employee credential endpoint. Unable to save to csv.');\n\t\t\t\t\t\tssToastHlp.error('Unable to save export.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t\tvm.isExporting = false;\n\t\t\t\t});\n\t\t\t},\n\t\t\tadd() {\n\t\t\t\tvm.newCred = {\n\t\t\t\t\t_name: '',\n\t\t\t\t\t_issuerId: vm.issuer.id,\n\t\t\t\t\t_credentialTypeId: credentialConstants.OTHERS,\n\t\t\t\t\tisEditing: true\n\t\t\t\t};\n\t\t\t\tvm.isEditing.value = true;\n\t\t\t},\n\t\t\tonNewCancel() {\n\t\t\t\tvm.newCred = null;\n\t\t\t\tvm.isEditing.value = false;\n\t\t\t},\n\t\t\tonAdd(newCred) {\n\t\t\t\tvm.creds.push(newCred);\n\t\t\t\tvm.newCred = null;\n\t\t\t},\n\t\t\tonDelete(credential) {\n\t\t\t\tvm.creds = vm.creds.filter(cred => cred.id !== credential.id);\n\t\t\t\tvm.isEditing.value = false;\n\t\t\t},\n\t\t\tonSave() {\n\t\t\t\tvm.isEditing.value = false;\n\t\t\t\tsort(vm.creds);\n\t\t\t},\n\t\t};\n\t\t\n\t\tfunction getIssuerText() {\n\t\t\tif (vm.issuer == null || vm.issuer === -1) { return ''; }\n\t\t\tlet orgName = routeVm.isStateNational ? 'Frontline Education' : org._name;\n\t\t\tlet d = ssDateHlp.isForeverFuture(vm.issuer._updatedUtc) ?\n\t\t\t\t`Added ${ssDateByOrgHlp.utcIsoToRelativeMoment(vm.issuer._createdUtc, org).format('MM/DD/YYYY')}` :\n\t\t\t\t`Updated ${ssDateByOrgHlp.utcIsoToRelativeMoment(vm.issuer._updatedUtc, org).format('MM/DD/YYYY')}`;\n\t\t\treturn `${d} by ${orgName}`;\n\t\t}\n\n\t\tfunction sort(items) {\n\t\t\titems.sort((a, b) => {\n\t\t\t\t// ignore case\n\t\t\t\tvar nameA = a._name.toUpperCase();\n\t\t\t\tvar nameB = b._name.toUpperCase();\n\t\t\t\tif (nameA < nameB) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (nameA > nameB) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\t// names must be equal\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n}\n\n// #-- END Component (cmp-manage-credentials) --# //\n// #--------------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpManageCredentials', () => new ManageCredentials(props, 'manage-credentials'));\n","import { Component } from 'base-component';\n// #----------------------------------------# //\n// #---- Component (cmp-manage-issuers) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n};\n\nclass ManageIssuers extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssAsync, ssToastHlp, ssCredentialDataAccessSvc, ssCredentialBusinessEngineSvc, ssDateByOrgHlp) {\n\t\tconst { credentialConstants } = ssCredentialBusinessEngineSvc;\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tvar org = routeVm.org; \n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tloading: true,\n\t\t\titems: [],\n\t\t\tnewIssuer: null,\n\t\t\tsearchText: {},\n\t\t\tisEditing: false,\n\t\t\tcanAddEdit: !routeVm.isStateNational,\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tlet type = routeVm.isStateNational ? credentialConstants.STATE_NATIONAL : credentialConstants.DISTRICT_CUSTOM;\n\t\t\t\tvm.items = yield ssCredentialDataAccessSvc.getIssuers(type);\n\t\t\t\tvm.items.forEach(item => item.isEditing = false);\n\t\t\t\tsort();\n\t\t\t} catch (error) {\n\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t} finally {\n\t\t\t\tvm.loading = false;\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tadd() {\n\t\t\t\tvm.newIssuer = { \n\t\t\t\t\t_name: '',\n\t\t\t\t\t_updatedUtc: ssDateByOrgHlp.utcIsoToRelativeMoment(new Date().toISOString(), org).toISOString(),\n\t\t\t\t\tisEditing: true\n\t\t\t\t};\n\t\t\t\tvm.isEditing = true;\n\t\t\t},\n\t\t\tonNewCancel() {\n\t\t\t\tvm.newIssuer = null;\n\t\t\t\tvm.isEditing = false;\n\t\t\t},\n\t\t\tonAdd(newIssuer) {\n\t\t\t\tvm.items.push(newIssuer);\n\t\t\t\tvm.newIssuer = null;\n\t\t\t},\n\t\t\tonDelete(issuer) {\n\t\t\t\tvm.items = vm.items.filter(item => item.id !== issuer.id);\n\t\t\t\tvm.isEditing = false;\n\t\t\t},\n\t\t\tonSave() {\n\t\t\t\tvm.isEditing = false;\n\t\t\t\tsort();\n\t\t\t},\n\t\t};\n\n\t\tfunction sort() {\n\t\t\tvm.items.sort((a, b) => {\n\t\t\t\t// ignore case\n\t\t\t\tvar nameA = a._name.toUpperCase();\n\t\t\t\tvar nameB = b._name.toUpperCase();\n\t\t\t\tif (nameA < nameB) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (nameA > nameB) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\t// names must be equal\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n}\n\n// #-- END Component (cmp-manage-issuers) --# //\n// #----------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpManageIssuers', () => new ManageIssuers(props, 'manage-issuers'));\n","import { Component } from 'base-component';\n// #-----------------------------------------# //\n// #---- Component (cmp-manage-subjects) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tissuer: '=',\n\tsingleEditing: '=',\n};\n\nclass ManageSubjects extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssAsync, ssCredentialDataAccessSvc, ssDateByOrgHlp, ssToastHlp) {\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tvar org = routeVm.org; \n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tsubjects: [],\n\t\t\tloading: false,\n\t\t\tcanAddEdit: !routeVm.isStateNational\n\t\t};\n\t\t\n\t\t$scope.$watch('issuer', nv => {\n\t\t\tif (nv == null) { return; }\n\t\t\tssAsync(function*() {\n\t\t\t\ttry {\n\t\t\t\t\tvm.loading = true;\n\t\t\t\t\tvm.subjects = yield ssCredentialDataAccessSvc.getSubjectsByIssuer(nv.id);\n\t\t\t\t\tvm.subjects.forEach(s => s.isEditing = false);\n\t\t\t\t\tsort(vm.subjects);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tadd() {\n\t\t\t\tvm.newSubject = {\n\t\t\t\t\t_name: '',\n\t\t\t\t\t_issuerId: $scope.issuer.id,\n\t\t\t\t\t_updatedUtc: ssDateByOrgHlp.utcIsoToRelativeMoment(new Date().toISOString(), org).toISOString(),\n\t\t\t\t\tisEditing: true\n\t\t\t\t};\n\t\t\t\t$scope.singleEditing.value = true;\n\t\t\t},\n\t\t\tonNewCancel() {\n\t\t\t\tvm.newSubject = null;\n\t\t\t\t$scope.singleEditing.value = false;\n\t\t\t},\n\t\t\tonAdd(newSubject) {\n\t\t\t\tvm.subjects.push(newSubject);\n\t\t\t\tvm.newSubject = null;\n\t\t\t},\n\t\t\tonDelete(subject) {\n\t\t\t\tvm.subjects = vm.subjects.filter(s => s.id !== subject.id);\n\t\t\t\t$scope.singleEditing.value = false;\n\t\t\t},\n\t\t\tonSave() {\n\t\t\t\t$scope.singleEditing.value = false;\n\t\t\t\tsort(vm.subjects);\n\t\t\t},\n\t\t};\n\n\t\tfunction sort(items) {\n\t\t\titems.sort((a, b) => {\n\t\t\t\t// ignore case\n\t\t\t\tvar nameA = a._name.toUpperCase();\n\t\t\t\tvar nameB = b._name.toUpperCase();\n\t\t\t\tif (nameA < nameB) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (nameA > nameB) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\t// names must be equal\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n}\n\n// #-- END Component (cmp-manage-subjects) --# //\n// #-----------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpManageSubjects', () => new ManageSubjects(props, 'manage-subjects'));\n","import {Component} from 'base-component';\n// #---------------------------------------# //\n// #---- Component (cmp-nav-list-item) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tlabel: '@',\n\tlink: '@',\n\tparams: '=?'\n};\n\n// directive definition object overrides\nconst config = {};\n\nclass NavListItem extends Component {\n\n\t/*@ngInject*/\n\tcontroller($scope, $rootScope) {\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-nav-list-item) --# //\n// #---------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpNavListItem', () => new NavListItem(props, 'nav-list-item', config));\n","import {Component} from 'base-component';\n// #----------------------------------# //\n// #---- Component (cmp-nav-list) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n};\n\n// directive definition object overrides\nconst config = {\n\ttransclude: true\n};\n\nclass NavList extends Component {\n\t/*@ngInject*/\n\tcontroller($scope) {\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-nav-list) --# //\n// #----------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpNavList', () => new NavList(props, 'nav-list', config) );\n","import {Component} from 'base-component';\n// #--------------------------------------# //\n// #---- Component (cmp-pay-schedule) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tschedule: '=',\n\torg: '='\n};\n\nclass PaySchedule extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, $element, ssModalSvc, ssToastHlp, $log, ssValidationHlp, ssEnum, rAF, ssDateByOrgHlp, messagingSvc) {\n\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope); // jshint ignore:line\n\t\tconst validation = {\n\t\t\tminZero: ssValidationHlp.numeric({ required: true, min: 0 }),\n\t\t\trequired: ssValidationHlp.required()\n\t\t};\n\n\t\tconst org = $scope.org;\n\t\tconst MAX_LANES_VISIBLE = 6;\n\t\tconst MAX_LANES = 175;\n\t\tconst MAX_STEPS = 175;\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t\tpayRateOptions: ssEnum.salaryType.getEnums(),\n\t\t\tvalidation: validation,\n\t\t\tfromDateUtc: ssDateByOrgHlp.utcIsoToRelativeMoment($scope.schedule._fromDateUtc, org).format('MM/DD/YYYY'),\n\t\t\ttoDateUtc: ssDateByOrgHlp.utcIsoToRelativeMoment($scope.schedule._toDateUtc, org).format('MM/DD/YYYY'),\n\t\t\tmessages: {\n\t\t\t\tperformanceWarning: messagingSvc.getMessage('settings', 'performanceWarning')\n\t\t\t}\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {  // jshint ignore:line\n\n\t\t\tcalculateWidth(schedule){\n\n\t\t\t\tvar cols;\n\n\t\t\t\tif (schedule._payLanes.length > MAX_LANES_VISIBLE) {\n\n\t\t\t\t\tif(schedule.id) {\n\t\t\t\t\t\tcols = angular.element(document.getElementById(`grid-values-${schedule.id}`).getElementsByClassName('grid-col'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcols = angular.element(document.getElementById('grid-values-00000').getElementsByClassName('grid-col'));\n\t\t\t\t\t}\n\n\t\t\t\t\tif(cols.length) {\n\t\t\t\t\t\tlet colWidth = cols[0].offsetWidth;\n\t\t\t\t\t\tlet amount = parseFloat(colWidth) * (schedule._payLanes.length - MAX_LANES_VISIBLE);\n\t\t\t\t\t\treturn {'width': 'calc(100% + ' + amount + 'px)'};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {};\n\t\t\t},\n\n\t\t\taddLane(schedule) {\n\n\t\t\t\tif (schedule._payLanes.length === MAX_LANES) { return; }\n\n\t\t\t\tvar newLane = {\n\t\t\t\t\t'name': `Lane ${schedule._payLanes.length + 1}`,\n\t\t\t\t\t'paySteps': []\n\t\t\t\t};\n\n\t\t\t\tschedule._payLanes[schedule._payLanes.length - 1].paySteps.forEach(step => {\n\t\t\t\t\tvar psObj = {};\n\t\t\t\t\tpsObj['name'] = step.name;\n\t\t\t\t\tpsObj['active'] = step.active;\n\t\t\t\t\tpsObj['payRate'] = step.payRate;\n\t\t\t\t\tnewLane['paySteps'].push(psObj);\n\t\t\t\t});\n\n\t\t\t\tvar lanes = schedule._payLanes.slice();\n\t\t\t\tlanes.push(newLane);\n\t\t\t\tschedule._payLanes = lanes;\n\n\t\t\t\trouteVm.updateLaneWidths(schedule);\n\t\t\t},\n\n\t\t\tremoveLane(schedule) {\n\t\t\t\tif (schedule._payLanes.length <= schedule.minLanes) { return; }\n\t\t\t\tschedule._payLanes.splice(-1, 1);\n\t\t\t\trouteVm.updateLaneWidths(schedule);\n\t\t\t},\n\n\t\t\taddStep(schedule) {\n\n\t\t\t\tif (schedule._payLanes[0].paySteps.length === MAX_STEPS) { return; }\n\n\t\t\t\tschedule._payLanes.forEach(lane => {\n\t\t\t\t\tvar psObj = {};\n\t\t\t\t\tpsObj['name'] = `Step ${lane.paySteps.length + 1}`;\n\t\t\t\t\tpsObj['active'] = true;\n\t\t\t\t\tpsObj['payRate'] = lane.paySteps[lane.paySteps.length - 1].payRate;\n\t\t\t\t\tlane['paySteps'].push(psObj);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tremoveStep(schedule) {\n\t\t\t\tif (schedule._payLanes[0].paySteps.length <= schedule.minSteps) { return; }\n\n\t\t\t\tschedule._payLanes.forEach(lane => {\n\t\t\t\t\tlane.paySteps.splice(-1, 1);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\teditSchedule(schedule) {\n\t\t\t\tschedule.isEditing = true;\n\t\t\t\tschedule.showDetails = true;\n\n\t\t\t\tdisableEdit();\n\t\t\t\tresizeTitle();\n\n\t\t\t//\twatches a date change and resets the minimum # of lanes and steps based on the schedule that comes immediately before it\n\t\t\t\t$scope.$watch('schedule._fromDateUtc', function(nv,ov){\n\t\t\t\t\tif(nv === ov) { return; }\n\t\t\t\t\tsetMinLanesAndSteps();\n\t\t\t\t}, $scope);\n\t\t\t},\n\n\t\t\tcancelEditSchedule(schedule) {\n\t\t\t\tif(schedule.isTemp) {\n\t\t\t\t\tlet ind = routeVm.paySchedules.indexOf(schedule);\n\t\t\t\t\trouteVm.paySchedules.splice(ind,1);\n\t\t\t\t\trouteVm.addingPS = false;\n\t\t\t\t\tdelete schedule.isTemp;\n\t\t\t\t} else {\n\t\t\t\t\trouteVm.forceChangeToPayLanes(schedule);\n\t\t\t\t\tschedule.$revert();\n\n\t\t\t\t\t/*\n\t\t\t\t\t\tReverting the vm.fromDateUtc because this prop is part of component and $revert revert the changes to JSON API\n\t\t\t\t\t\ton revert we have to specifically revert the vm value.\n\t\t\t\t\t*/\n\t\t\t\t\tif(schedule === $scope.schedule) {\n\t\t\t\t\t\tvm.fromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(schedule._fromDateUtc, org).format('MM/DD/YYYY')\n\t\t\t\t\t}\n\t\t\t\t\tschedule.isEditing = false;\n\t\t\t\t\tschedule.showDetails = schedule.isCurrent;\n\t\t\t\t}\n\t\t\t\t$scope.$emit('ss-validate-reset');\n\t\t\t\trouteVm.updateLaneWidths(schedule);\n\t\t\t},\n\n\t\t\tremovePaySchedule: function(ps){\n\t\t\t\tssModalSvc.showDestructive({\n\t\t\t\t\ttitle: `<h2>Are you sure you want to delete this pay schedule?</h2>`,\n\t\t\t\t\tprimaryText: 'Delete',\n\t\t\t\t\tsecondaryText: 'Cancel',\n\t\t\t\t}).then(() => {\n\t\t\t\t\tps.isSaving = true;\n\t\t\t\t\tlet ind = routeVm.paySchedules.indexOf(ps);\n\t\t\t\t\trouteVm.paySchedules.splice(ind,1);\n\t\t\t\t\trouteVm.paySchedules.$save().then(() => {\n\t\t\t\t\t\tssToastHlp.success(``, `Pay Schedule \"${ps._name}\" Deleted`, false);\n\t\t\t\t\t\trouteVm.fetchJobType(false, true);\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tssToastHlp.error(``,`Error while deleting Pay Schedule \"${ps._name}\"`, false);\n\t\t\t\t\t\t$log.error(`Error while deleting Pay Schedule \"${ps._name}\"`, error);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch('vm.fromDateUtc', (newVal, oldVal) => {\n\t\t\tif (newVal && newVal === oldVal) { return; }\n\t\t\tif(newVal instanceof Date) {\n\t\t\t\t$scope.schedule._fromDateUtc = ssDateByOrgHlp.startOfDayRelativeTo(moment(newVal), org);\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watch('schedule._toDateUtc', (newVal, oldVal) => {\n\t\t\tif (newVal && newVal === oldVal) { return; }\n\t\t\tvm.toDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(newVal, org).format('MM/DD/YYYY');\n\t\t});\n\n\t\t$scope.$watch('schedule._name', (newVal, oldVal) => {\n\t\t\tif (newVal && newVal === oldVal) { return; }\n\t\t\tresizeTitle();\n\t\t});\n\n\t\tfunction resizeTitle() {\n\t\t\trAF.raw(function () {\n\t\t\t\tvar titleLength;\n\t\t\t\tvar titleEl = $element[0].querySelectorAll('.pay-schedule-title');\n\t\t\t\tvar titleInput = angular.element(titleEl[0]).find('input');\n\n\t\t\t\tif (titleInput.val()) {\n\t\t\t\t\ttitleLength = titleInput.val().length;\n\t\t\t\t\ttitleInput.attr('size', titleLength);\n\t\t\t\t} else {\n\t\t\t\t\ttitleInput.attr('size', 30);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t//\tmethod to only allow one schedule to be edited at a time\n\t\tfunction disableEdit() {\n\t\t\trouteVm.paySchedules.forEach((ps) => {\n\t\t\t\tif(ps !== $scope.schedule) {\n\t\t\t\t\tgo.cancelEditSchedule(ps);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t//\tFind the closest previously dated schedule of the target schedule\n\t\tfunction getPreviousSchedule(schedule) {\n\t\t\tlet start = ssDateByOrgHlp.utcIsoToRelativeMoment(schedule._fromDateUtc, org);\n\t\t\treturn routeVm.paySchedules.filter((ps) => {\n\t\t\t\tlet psTime = ssDateByOrgHlp.utcIsoToRelativeMoment(ps._fromDateUtc, org);\n\t\t\t\treturn !ps.isDefault && psTime.isBefore(start);\n\t\t\t}).reduce((prev, curr) => {\n\t\t\t\tif(prev === 0) { return curr; }\n\t\t\t\tlet prevFromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(prev._fromDateUtc, org);\n\t\t\t\tlet currentFromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(curr._fromDateUtc, org)\n\t\t\t\treturn prevFromDateUtc.isAfter(currentFromDateUtc) ? prev : curr;\n\t\t\t}, 0);\n\t\t}\n\n\t//\tSet the minimum # of lanes and steps based on the schedule that comes immediately before it\n\t\tfunction setMinLanesAndSteps() {\n\t\t\tlet prevSchedule = getPreviousSchedule($scope.schedule);\n\t\t\t$scope.schedule.minLanes = prevSchedule ? prevSchedule._payLanes.length : 1;\n\t\t\t$scope.schedule.minSteps = prevSchedule ? prevSchedule._payLanes[0].paySteps.length : 1;\n\t\t}\n\n\t}\n}\n\n// #-- END Component (cmp-pay-schedule) --# //\n// #--------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpPaySchedule', () => new PaySchedule(props, 'pay-schedule') );\n","import { Component } from 'base-component';\n// #---------------------------------------# //\n// #---- Component (cmp-profile-table) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tpermissions: '=',\n\tregistration: '=',\n\tdimMatching: '=',\n\tminColumnDisplay: '@?',\n};\n\nclass ProfileTable extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, $stateParams, enumPropertyAction, createPermissionsHlp, ssObjectHlp, propertyActionLabelSvc, cmpProfileTableLogic) {\n\t\tlet deregWatchActions = null;\n\n\t\tconst isIdmAdmin = ssObjectHlp.glean($scope, _ => _.$root.isPermitted.activeUser.idmAdministrator, false);\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\teditMode: $stateParams.action === 'edit',\n\t\t\tisViewSelf: ssObjectHlp.glean($scope, _ => _.$root.utils.findInParentScope('profile', $scope)._isViewSelf, false),\n\t\t\tproperties: [],\n\t\t\tselectedActions: {},\n\t\t\tpermissions: [],\n\t\t\tfullPropertyAction: enumPropertyAction.getEnums(),\n\t\t\teditResourceActionIsNowAllowed: false,\n\t\t\tviewResourceActionIsNowAllowed: false,\n\t\t\tisIdmAdmin: isIdmAdmin,\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\tshouldDimTheAction(action) {\n\t\t\t\treturn vm.isViewSelf && action.isPrivileged;\n\t\t\t},\n\t\t\tcalculateLabel(thesePermissions, permissionId) {\n\t\t\t\treturn propertyActionLabelSvc.getNumberToValueDictionary()[thesePermissions[permissionId].value];\n\t\t\t},\n\t\t\tisDim(row) {\n\t\t\t\t// nothing to match unless we have more than 1 row\n\t\t\t\tif ($scope.permissions.length < 2) { return false; }\n\n\t\t\t\tlet id = row.id;\n\t\t\t\tlet val = $scope.permissions[0][id].value;\n\n\t\t\t\t// returns a count of permissions that don't have the same val as the first\n\t\t\t\tlet count = $scope.permissions.filter(p => p[id].value !== val).length;\n\n\t\t\t\t// return true if we don't have any permissions with a different value\n\t\t\t\treturn count === 0;\n\t\t\t},\n\t\t\ttriggerChange() {\n\t\t\t\t// this just triggers a json api change\n\t\t\t\tlet perm = $scope.permissions[0];\n\n\t\t\t\tperm.propertyActions = [...perm.propertyActions];\n\t\t\t},\n\t\t};\n\n\t\t$scope.$watch('permissions.length', () => {\n\t\t\tvm.totalColumns = Math.max($scope.permissions.length, ($scope.minColumnDisplay == null ? 1 : parseInt($scope.minColumnDisplay, 10)));\n\n\t\t\tloadResource($scope.registration);\n\t\t});\n\n\t\tfunction loadResource(registration) {\n\t\t\t// Pull off Action Permissions as name value pair\n\t\t\tvm.actions = registration.actions.map(a => {\n\t\t\t\tvm.selectedActions[a.id] = false;\n\t\t\t\treturn {\n\t\t\t\t\tid: a.id,\n\t\t\t\t\tname: a.description,\n\t\t\t\t\tisPrivileged: a.isPrivileged\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tfunction determineSelectableActions(property) {\n\t\t\t\tlet actions = cmpProfileTableLogic.isARedactablePermission(property.id) ? enumPropertyAction.getEnums() : cmpProfileTableLogic.filterActionsByAlwaysAndNever(property);\n\n\t\t\t\tif (property.allowedActions != null) {\n\t\t\t\t\t// this supercedes anything else allowed in the above calls\n\t\t\t\t\tactions = actions.filter(action => property.allowedActions.includes(action.value));\n\t\t\t\t}\n\n\t\t\t\treturn actions;\n\t\t\t}\n\t\t\t// Calculate various presentation/UI concerns\n\t\t\tvm.properties = registration.properties\n\t\t\t\t.map(aProperty => {\n\t\t\t\t\tconst actionsToShow = determineSelectableActions(aProperty);\n\t\t\t\t\tactionsToShow.forEach(anAction => anAction.label = propertyActionLabelSvc.getNumberToValueDictionary()[anAction.value]);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: aProperty.id,\n\t\t\t\t\t\tname: aProperty.description,\n\t\t\t\t\t\tactions: actionsToShow\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t$scope.permissions.forEach((permission, i) => {\n\n\t\t\t\tvm.actions.forEach(row => {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tvm.selectedActions[row.id] = permission.objectActions.indexOf(row.id) >= 0;\n\t\t\t\t\t}\n\t\t\t\t\t// See if we're trying to safeguard the user from doing things that are unbefitting of a view-self scenario\n\t\t\t\t\tif (vm.isViewSelf) {\n\t\t\t\t\t\tif (row.id.endsWith('_Action_Edit') && row.isPrivileged === true) {\n\t\t\t\t\t\t\tvm.editResourceActionIsNowAllowed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (row.id.endsWith('_Action_View') && row.isPrivileged === true) {\n\t\t\t\t\t\t\tvm.viewResourceActionIsNowAllowed = true;\n\t\t\t\t\t\t\t// If you can't view something, then you certainly shouldn't be able to edit it\n\t\t\t\t\t\t\tvm.editResourceActionIsNowAllowed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpermission[row.id] = permission.objectActions.indexOf(row.id) >= 0;\n\t\t\t\t});\n\n\t\t\t\tvm.properties.forEach(property => {\n\t\t\t\t\tlet prop = permission.propertyActions.find(a => a.key === property.id);\n\n\t\t\t\t\t// Do some safeguarding\n\t\t\t\t\tif (prop == null) {\n\t\t\t\t\t\tprop = {\n\t\t\t\t\t\t\tkey: property.id,\n\t\t\t\t\t\t\tvalue: enumPropertyAction.notVisible\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// use the spread operator to update the array reference so $save will pick it up\n\t\t\t\t\t\tpermission.propertyActions = [...permission.propertyActions, prop];\n\t\t\t\t\t}\n\n\t\t\t\t\tproperty.actions.forEach(anAction => {\n\t\t\t\t\t\tanAction.disableDueToViewSelf = cmpProfileTableLogic.shouldDimBasedOnViewSelf({\n\t\t\t\t\t\t\tareOnAViewSelfPage: vm.isViewSelf,\n\t\t\t\t\t\t\teditResourceActionIsNowAllowed: vm.editResourceActionIsNowAllowed,\n\t\t\t\t\t\t\tviewResourceActionIsNowAllowed: vm.viewResourceActionIsNowAllowed,\n\t\t\t\t\t\t\tactionLevelEnumValue: anAction.value\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tpermission[property.id] = prop;\n\t\t\t\t});\n\n\t\t\t\tif (vm.editMode) {\n\t\t\t\t\tif (deregWatchActions != null) {\n\t\t\t\t\t\tderegWatchActions();\n\t\t\t\t\t\tderegWatchActions = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tderegWatchActions = $scope.$watchCollection('vm.selectedActions', (nv, ov) => {\n\t\t\t\t\t\tif (nv === ov) { return; }\n\n\t\t\t\t\t\t// clear the array\n\t\t\t\t\t\tpermission.objectActions = [];\n\n\t\t\t\t\t\tlet keys = Object.keys(vm.selectedActions);\n\t\t\t\t\t\tkeys.forEach(key => {\n\t\t\t\t\t\t\tif (vm.selectedActions[key]) {\n\t\t\t\t\t\t\t\tpermission.objectActions = [...permission.objectActions, key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// create children permission objects\n\t\t\tvm.permissions = [];\n\t\t\t$scope.registration.nestedResources.forEach(nestedReg => {\n\t\t\t\tvar regPermissions = [];\n\t\t\t\t$scope.permissions.forEach(permission => {\n\t\t\t\t\tvar chosenPermission = permission.nestedResources.find(s => s.resourceName === nestedReg.resourceName);\n\t\t\t\t\tif (chosenPermission == null) {\n\t\t\t\t\t\tchosenPermission = createPermissionsHlp.permission();\n\t\t\t\t\t\tchosenPermission.resourceName = nestedReg.resourceName;\n\t\t\t\t\t\tpermission.nestedResources = [...permission.nestedResources, chosenPermission];\n\t\t\t\t\t}\n\n\t\t\t\t\tregPermissions.push(chosenPermission);\n\t\t\t\t});\n\t\t\t\tvm.permissions.push({\n\t\t\t\t\tregistration: nestedReg,\n\t\t\t\t\tpermissions: regPermissions\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\n// #-- END Component (cmp-profile-table) --# //\n// #---------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpProfileTable', () => new ProfileTable(props, 'profile-table'));\n","/*@ngInject*/\nfunction logic(ssFlagSvc, enumPropertyAction, propertyActionLabelSvc) {\n    /**\n     *\n     * @param {boolean} input.areOnAViewSelfPage\n     * @param {boolean} input.editResourceActionIsNowAllowed\n     * @param {boolean} input.viewResourceActionIsNowAllowed\n     * @param {number} input.actionLevelEnumValue\n     */\n    function shouldDimBasedOnViewSelf({areOnAViewSelfPage, editResourceActionIsNowAllowed, viewResourceActionIsNowAllowed, actionLevelEnumValue} = input){\n        let result = false;\n        // Guard condition\n        if(!areOnAViewSelfPage){\n            return false\n        }\n        // END Guard condition\n        if(viewResourceActionIsNowAllowed && propertyActionLabelSvc.isAtLeastViewable(actionLevelEnumValue)){\n            result = true;\n        }\n        if(editResourceActionIsNowAllowed && propertyActionLabelSvc.isAtLeastEditable(actionLevelEnumValue)){\n            result = true;\n        }\n        return result;\n    }\n\n    /**\n     *\n     * @param {*} property - a permission object. See the tests for the shape of the data\n     */\n    function filterActionsByAlwaysAndNever(property){\n        if(!property){\n            throw new Error(\"forgot the input\");\n        }\n        /*\n            ALWAYS\tNEVER\tOUTCOME\n            T\t\tT\t\tINVALID (Throw exception server is sending wrong prop config)\n            T\t\tF\t\tT (Action available)\n            F\t\tT\t\tF (Action not available)\n            F\t\tF\t\tT (Action available)\n        */\n        let allowedActions = [enumPropertyAction.enumByValue(enumPropertyAction.notVisible)];\n        if(property.alwaysEditable && property.neverEditable) { throw new Error('Invalid server property combination') }\n        else if(property.alwaysEditable && !property.neverEditable) { allowedActions.push(enumPropertyAction.enumByValue(enumPropertyAction.edit)); }\n        else if(!property.alwaysEditable && !property.neverEditable) { allowedActions.push(enumPropertyAction.enumByValue(enumPropertyAction.edit)); }\n        else { /* nothing */ }\n\n        if(property.alwaysVisible && property.neverVisible) { throw new Error('Invalid server property combination') }\n        else if(property.alwaysVisible && !property.neverVisible) { allowedActions.push(enumPropertyAction.enumByValue(enumPropertyAction.view)); }\n        else if(!property.alwaysVisible && !property.neverVisible) { allowedActions.push(enumPropertyAction.enumByValue(enumPropertyAction.view)); }\n        else { /* nothing */ }\n\n        return allowedActions;\n    }\n\n    function isARedactablePermission(permissionIdStr){\n        // list of row ids where we should show redacted property action options\n\t\tlet redactablePermissionIds = [\n\t\t\t'Employee_Property_DriversLicense',\n\t\t\t'Employee_Property_Age',\n\t\t\t'Employee_Property_BirthDate',\n\t\t\t'Employee_Property_SeniorityDate',\n\t\t\t'Employee_Property_TenureDate'\n        ];\n\n        if (!ssFlagSvc.checkState('fc-emp-ui-secure-ssn')) {\n            // push ssn to redactable if we are not using the new secure ssn feature\n            redactablePermissionIds.push('Employee_Property_SocialSecurityNumber');\n        }\n\n        return redactablePermissionIds.includes(permissionIdStr);\n    }\n\n\t// logic api\n\treturn {\n        shouldDimBasedOnViewSelf: shouldDimBasedOnViewSelf,\n        filterActionsByAlwaysAndNever: filterActionsByAlwaysAndNever,\n        isARedactablePermission: isARedactablePermission,\n\t};\n}\nangular.module('ec-settings-components-logic').factory('cmpProfileTableLogic', logic);\n","import {Component} from 'base-component';\n// #--------------------------------------------# //\n// #---- Component (cmp-protected-resource) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tresource: '='\n};\n\nclass ProtectedResource extends Component {\n\t/*@ngInject*/\n\tcontroller($scope) {\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-protected-resource) --# //\n// #--------------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpProtectedResource', () => new ProtectedResource(props, 'protected-resource') );\n","import { Component } from 'base-component';\n// #----------------------------------------# //\n// #---- Component (cmp-security-scope) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tmodel: '=?',\n\tprofiles: '=',\n\tonRemove: '&',\n\tonUpdate: '&',\n\tgroup: '='\n};\n\nclass SecurityScope extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, ssAsync, enumSecurityGroupScope, securityScopeHlp, createPermissionsHlp, ssSecurityScopeApi, ssToastHlp, ssLocationSvc, ssJobTypeSvc, ssDepartmentSvc, ssEmployeeApi, ssArrayHlp, ssModalSvc, ssValidationHlp) {\n\t\tconst vm = $scope.vm = { // eslint-disable-line\n\t\t\teditMode: !$scope.model.id,\n\t\t\tlocationSecurityGroupScope: securityScopeHlp.location(),\n\t\t\tdepartmentSecurityGroupScope: securityScopeHlp.department(),\n\t\t\tjobTypeSecurityGroupScope: securityScopeHlp.jobType(),\n\t\t\temployeeSecurityGroupScope: securityScopeHlp.employee(),\n\t\t\temployeeSecurityDisabledScopes: [],\n\t\t\tselectedLocations: [],\n\t\t\tselectedJobTypes: [],\n\t\t\tselectedDepartments: [],\n\t\t\tselectedEmployees: [],\n\t\t\tprofileOptions: [],\n\t\t\tisSaving: false,\n\t\t\tintended: {}\n\t\t};\n\n\t\tconst validation = $scope.validation = {\n\t\t\trequired: ssValidationHlp.required(),\n\t\t\texternalId: ssValidationHlp.string({ maxLength: 100 })\n\t\t}\n\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\n\n\t\tvar currentScope,\n\t\t\tsaveContext,\n\t\t\tassignedLocations,\n\t\t\tassignedDepartments,\n\t\t\tassignedJobTypes,\n\t\t\tassignedEmployees\n\n\t\t//\tsave a copy of the current security scope model so we can revert to it upon edit cancellation\n\t\tcurrentScope = Object.assign({}, $scope.model);\n\n\t\tvm.intended = updateIntendedValues();\n\n\t\t//\tdetermine which profiles should be seen in the options menu and assign then to view\n\t\tvm.profileOptions = $scope.profiles.filter(p => !p._locked);\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\tselectProfile(profile) {\n\t\t\t\t$scope.$emit('ss-validate-reset');\n\t\t\t\tvm.intended.profile = profile;\n\t\t\t\t$scope.$emit('ss-menu-close');\n\t\t\t},\n\n\t\t\tedit() {\n\t\t\t\tvm.editMode = true;\n\t\t\t},\n\n\t\t\tcancel() {\n\n\t\t\t\t//\tIf this is a newly added scope, defer cancel functionality to the parent controller & return\n\t\t\t\tif (!$scope.model.id && $scope.onRemove) {\n\t\t\t\t\t$scope.onRemove({ $securityScope: $scope.model });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//\treset any validation errors\n\t\t\t\t$scope.$emit('ss-validate-reset');\n\n\t\t\t\t//\treset the bound permission profile & scope control values\n\t\t\t\tvm.intended = updateIntendedValues();\n\n\t\t\t\tvm.selectedLocations = angular.copy(assignedLocations) || [];\n\t\t\t\tvm.selectedDepartments = angular.copy(assignedDepartments) || [];\n\t\t\t\tvm.selectedJobTypes = angular.copy(assignedJobTypes) || [];\n\t\t\t\tvm.selectedEmployees = angular.copy(assignedEmployees) || [];\n\n\t\t\t\t//\tswitch to view mode\n\t\t\t\tvm.editMode = false;\n\n\t\t\t\t//\tclose the profile menu\n\t\t\t\t$scope.$emit('ss-menu-close');\n\t\t\t},\n\n\t\t\tsave() {\n\n\t\t\t\tvm.isSaving = true;\n\t\t\t\t//\tassign intended values to the model\n\t\t\t\t$scope.model._permissionProfileId = vm.intended.profile.id;\n\t\t\t\t$scope.model.permissionProfile = vm.intended.profile;\n\t\t\t\t$scope.model._locationAdministrationContext = vm.intended.locationAdministrationContext;\n\t\t\t\t$scope.model._departmentAdministrationContext = vm.intended.departmentAdministrationContext;\n\t\t\t\t$scope.model._jobTypeAdministrationContext = vm.intended.jobTypeAdministrationContext;\n\t\t\t\t$scope.model._employeeAdministrationContext = vm.intended.employeeAdministrationContext;\n\n\t\t\t\t//\tre-map & assign any specifically chosen scope control categories and assign to the model\n\t\t\t\tlet locationIds = vm.selectedLocations.map(l => l.id);\n\t\t\t\tlet departmentIds = vm.selectedDepartments.map(l => l.id);\n\t\t\t\tlet jobTypeIds = vm.selectedJobTypes.map(l => l.id);\n\t\t\t\tlet employeeIds = vm.selectedEmployees.map(e => e.id);\n\n\t\t\t\t$scope.model._locationIds = locationIds;\n\t\t\t\t$scope.model._departmentIds = departmentIds;\n\t\t\t\t$scope.model._jobTypeIds = jobTypeIds;\n\t\t\t\t$scope.model._employeeIds = employeeIds;\n\n\t\t\t\t//\tre-copy the values of any specifically chosen scope control categories\n\t\t\t\tassignedLocations = angular.copy(vm.selectedLocations);\n\t\t\t\tassignedDepartments = angular.copy(vm.selectedDepartments);\n\t\t\t\tassignedJobTypes = angular.copy(vm.selectedJobTypes);\n\t\t\t\tassignedEmployees = angular.copy(vm.selectedEmployees);\n\n\t\t\t\t//\tIf this is a new scope, the save context is the group, otherwise it is the model (securityScope)\n\t\t\t\tif (!$scope.model.id) {\n\t\t\t\t\tsaveContext = $scope.group;\n\t\t\t\t} else {\n\t\t\t\t\tsaveContext = $scope.model;\n\t\t\t\t}\n\n\t\t\t\tsaveContext.$save().then((res) => {\n\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\tssToastHlp.success('', 'Permission Profile Saved', false);\n\t\t\t\t\t}\n\n\t\t\t\t\t//\tre-set a copy of the current security scope model\n\t\t\t\t\tcurrentScope = Object.assign({}, $scope.model);\n\n\t\t\t\t\t// update the intended values to the currently assigned model values\n\t\t\t\t\tvm.intended = updateIntendedValues();\n\n\t\t\t\t\tvm.editMode = false;\n\t\t\t\t\tvm.isSaving = false;\n\n\t\t\t\t\tif ($scope.onUpdate) {\n\t\t\t\t\t\t$scope.onUpdate();\n\t\t\t\t\t}\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\tssToastHlp.error('There was a problem saving the permission profile and/or security scope', '', false);\n\t\t\t\t});\n\n\t\t\t},\n\n\t\t\tremove() {\n\t\t\t\tvm.isSaving = true;\n\t\t\t\t$scope.model.$remove().then(() => {\n\t\t\t\t\tvm.editMode = false;\n\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\t$scope.$emit('ss-menu-close');\n\t\t\t\t\tif ($scope.onRemove) {\n\t\t\t\t\t\t$scope.onRemove({ $securityScope: $scope.model });\n\t\t\t\t\t}\n\t\t\t\t\tssToastHlp.success(`\"${$scope.model.permissionProfile._permissionProfileName}\" and its security scope were successfully removed\"`, '', false);\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tvm.isSaving = false;\n\t\t\t\t\tssToastHlp.error(`\"${$scope.model.permissionProfile._permissionProfileName}\" and its security scope were not successfully removed\"`, '', false);\n\t\t\t\t\tconsole.log('Error removing \"${model.permissionProfile._permissionProfileName}\" and its security scope\"', e);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tvalidateProfile(profile) {\n\t\t\t\t//\tAdding this here so we can leverage validation reset\n\t\t\t\t$scope.$emit('ss-validate-reset');\n\n\t\t\t\tif (!profile.id) {\n\t\t\t\t\treturn 'Profile is Required';\n\t\t\t\t}\n\n\t\t\t\tif (routeVm.uniqueProfiles.indexOf(profile) === -1 || profile.id === currentScope.permissionProfile.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn 'This profile is already in use';\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('$destroy', $scope.$watchCollection('model', (nv, ov) => {\n\t\t\tvm.locationScope = labelDisplay('location', nv._locationAdministrationContext, nv._locationIds.length);\n\t\t\tvm.departmentScope = labelDisplay('dept', nv._departmentAdministrationContext, nv._departmentIds.length);\n\t\t\tvm.jobTypeScope = labelDisplay('job type', nv._jobTypeAdministrationContext, nv._jobTypeIds.length);\n\t\t\tvm.employeeScope = labelDisplay('employee', nv._employeeAdministrationContext, nv._employeeIds.length);\n\t\t}));\n\n\t\t$scope.$on('$destroy', $scope.$watch('vm.intended.locationAdministrationContext', (nv, ov) => {\n\t\t\tvm.selectedLocations = [];\n\n\t\t\t//Specific\n\t\t\tif (nv === 2) {\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvm.locations = yield ssLocationSvc.getAll();\n\t\t\t\t\t\tif (vm.intended.locationIds.length > 0) {\n\t\t\t\t\t\t\tvm.intended.locationIds.forEach(id => {\n\t\t\t\t\t\t\t\tlet location = vm.locations.find(l => l.id === id);\n\t\t\t\t\t\t\t\tif (location != null) {\n\t\t\t\t\t\t\t\t\tvm.selectedLocations.push(location);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//\tassign a copy of the currently selected locations for revert\n\t\t\t\t\t\t\tassignedLocations = angular.copy(vm.selectedLocations);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole && console.log && console.log('Error getting locations', e);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\t// vm.selectedLocations = [];\n\t\t\t\tvm.intended.locationIds = [];\n\t\t\t}\n\t\t}));\n\n\t\t$scope.$on('$destroy', $scope.$watch('vm.intended.departmentAdministrationContext', (nv, ov) => {\n\t\t\tvm.selectedDepartments = [];\n\t\t\t//Specific\n\t\t\tif (nv === 2) {\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvm.departments = yield ssDepartmentSvc.getAll();\n\t\t\t\t\t\tif (vm.intended.departmentIds.length > 0) {\n\t\t\t\t\t\t\tvm.intended.departmentIds.forEach(id => {\n\t\t\t\t\t\t\t\tlet department = vm.departments.find(l => l.id === id);\n\t\t\t\t\t\t\t\tif (department != null) {\n\t\t\t\t\t\t\t\t\tvm.selectedDepartments.push(department);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//\tassign a copy of the currently selected departments for revert\n\t\t\t\t\t\t\tassignedDepartments = angular.copy(vm.selectedDepartments);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole && console.log && console.log('Error getting departments', e);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\tvm.intended.departmentIds = [];\n\t\t\t}\n\t\t}));\n\n\t\t$scope.$on('$destroy', $scope.$watch('vm.intended.jobTypeAdministrationContext', (nv, ov) => {\n\t\t\tvm.selectedJobTypes = [];\n\t\t\t//Specific\n\t\t\tif (nv === 2) {\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvm.jobTypes = yield ssJobTypeSvc.getAll();\n\t\t\t\t\t\tif (vm.intended.jobTypeIds.length > 0) {\n\t\t\t\t\t\t\tvm.intended.jobTypeIds.forEach(id => {\n\t\t\t\t\t\t\t\tlet jobType = vm.jobTypes.find(l => l.id === id);\n\t\t\t\t\t\t\t\tif (jobType != null) {\n\t\t\t\t\t\t\t\t\tvm.selectedJobTypes.push(jobType);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//\tassign a copy of the currently selected job types for revert\n\t\t\t\t\t\t\tassignedJobTypes = angular.copy(vm.selectedJobTypes);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole && console.log && console.log('Error getting job types', e);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\tvm.intended.jobTypeIds = [];\n\t\t\t}\n\t\t}));\n\n\t\t$scope.$on('$destroy', $scope.$watch('vm.intended.employeeAdministrationContext', (nv, ov) => {\n\t\t\tvm.selectedEmployees = [];\n\t\t\tif (nv === 2) {\n\t\t\t\tif (vm.intended.employeeIds.length > 0) {\n\t\t\t\t\tvm.intended.employeeIds.forEach(id => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tssAsync(function* () {\n\t\t\t\t\t\t\t\tlet employee = yield ssEmployeeApi.get({\n\t\t\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (vm.selectedEmployees.find(e => e.id === id) == null) {\n\t\t\t\t\t\t\t\t\tvm.selectedEmployees.push(employee);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//\tassign a copy of the currently selected employees for revert\n\t\t\t\t\t\t\t\tassignedEmployees = angular.copy(vm.selectedEmployees);\n\n\t\t\t\t\t\t\t})();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole && console.log && console.log('Error getting employee', e);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvm.intended.employeeIds = [];\n\t\t\t}\n\t\t}));\n\n\t\tfunction updateIntendedValues() {\n\t\t\treturn {\n\t\t\t\tprofile: currentScope.permissionProfile,\n\t\t\t\tlocationAdministrationContext: currentScope._locationAdministrationContext,\n\t\t\t\tlocationIds: currentScope._locationIds,\n\t\t\t\tdepartmentAdministrationContext: currentScope._departmentAdministrationContext,\n\t\t\t\tdepartmentIds: currentScope._departmentIds,\n\t\t\t\tjobTypeAdministrationContext: currentScope._jobTypeAdministrationContext,\n\t\t\t\tjobTypeIds: currentScope._jobTypeIds,\n\t\t\t\temployeeAdministrationContext: currentScope._employeeAdministrationContext,\n\t\t\t\temployeeIds: currentScope._employeeIds\n\t\t\t}\n\t\t}\n\n\t\tfunction labelDisplay(type, context, count) {\n\t\t\tswitch (context) {\n\t\t\t\tcase enumSecurityGroupScope.none:\n\t\t\t\t\treturn `No ${type}s`;\n\t\t\t\tcase enumSecurityGroupScope.self:\n\t\t\t\t\treturn `Member's own ${type}`;\n\t\t\t\tcase enumSecurityGroupScope.specific:\n\t\t\t\t\tlet label = (count === 1) ? type : `${type}s`;\n\t\t\t\t\treturn `${count} specific ${label}`;\n\t\t\t\tcase enumSecurityGroupScope.all:\n\t\t\t\t\treturn `Any ${type}`;\n\t\t\t\tcase enumSecurityGroupScope.directReports:\n\t\t\t\t\treturn `Direct Reports`;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\n\t}\n}\n\n// #-- END Component (cmp-security-scope) --# //\n// #----------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpSecurityScope', () => new SecurityScope(props, 'security-scope'));\n","import {Component} from 'base-component';\n// #-----------------------------# //\n// #---- Component (cmp-tag) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\tprofile: '@?',\n\tgroup: '@?',\n\tindividual: '@?',\n\tid: '@?'\n};\n\nclass Tag extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, $state) {\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tclasses: '',\n\t\t\tlabel: '',\n\t\t\tlink: null,\n\t\t\ticonType: ''\n\t\t};\n\n\t\tif ($scope.profile != null) {\n\t\t\tvm.label = $scope.profile;\n\t\t\tvm.classes = 'profile';\n\t\t\tvm.iconType = 'key';\n\t\t\tvm.link = {\n\t\t\t\tbase: 'base.permissions.profiles.detail',\n\t\t\t\tattr: {\n\t\t\t\t\tprofileId: $scope.id\n\t\t\t\t}\n\t\t\t};\n\t\t} else if ($scope.group != null) {\n\t\t\tvm.label = $scope.group;\n\t\t\tvm.classes = 'group';\n\t\t\tvm.iconType = 'users';\n\t\t\tvm.link = {\n\t\t\t\tbase: 'base.permissions.groups.detail',\n\t\t\t\tattr: {\n\t\t\t\t\tgroupId: $scope.id\n\t\t\t\t}\n\t\t\t};\n\t\t} else if ($scope.individual != null) {\n\t\t\tvm.label = $scope.individual;\n\t\t\tvm.classes = 'individual';\n\t\t}\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tclick() {\n\t\t\t\tif (vm.link == null || $scope.id == null) {return;}\n\t\t\t\t$state.go(vm.link.base, vm.link.attr);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-tag) --# //\n// #-----------------------------# //\n\nangular.module('ec-settings-components').directive('cmpTag', () => new Tag(props, 'tag'));\n","import {Component} from 'base-component';\n// #--------------------------------------------# //\n// #---- Component (cmp-user-access-return) ----# //\n\n// props is the directive's isolate scope object\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\nconst props = {\n\ttext: '@'\n};\n\nclass UserAccessReturn extends Component {\n\t/*@ngInject*/\n\tcontroller($scope, $location, $window) {\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\t/**\n\t\t\t * Create a link to the new SystemOfRecord Application Access Page and go there\n\t\t\t * @param {*} evt\n\t\t\t */\n\t\t\treturnToSAAP(evt) {\n\t\t\t\tconst protocol = $location.protocol();\n\t\t\t\tconst host = $location.host();\n\t\t\t\tconst base = `${protocol}://${host}`;\n\t\t\t\tconst url = `${base}/ec-settings/user-accounts`;\n\t\t\t\tconst urlEncoded = encodeURIComponent(url);\n\n\t\t\t\t$window.location.href = `${base}/ec-useraccess?oaap=${urlEncoded}`;\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Component (cmp-user-access-return) --# //\n// #--------------------------------------------# //\n\nangular.module('ec-settings-components').directive('cmpUserAccessReturn', () => new UserAccessReturn(props, 'user-access-return') );\n","export class Component {\n\tconstructor(props, componentName, config = {}) {\n\t\tthis.restrict = 'E';\n\t\tthis.replace = true;\n\t\tthis.scope = props;\n\t\tthis.templateUrl = `components/cmp-${componentName}/${componentName}.html`;\n\t\tObject.assign(this, config);\n\t}\n}\n","export class Segment {\n\tconstructor(segmentName) {\n\t\tthis.restrict = 'E';\n\t\tthis.scope = true;\n\t\tthis.replace = true;\n\t\tthis.templateUrl = (elem, attrs) => {\n\t\t\treturn `routes${attrs.folder}/segment-${segmentName}/${segmentName}.html`;\n\t\t};\n\t}\n}\n","export class State {\n\tconstructor(stateConfig, routeVm) {\n\t\tObject.assign(this, stateConfig);\n\t\tthis.resolve = this.resolve || {};\n\t\tthis.resolve.routeVm = () => {\n\t\t\treturn routeVm;\n\t\t};\n\t\t/*@ngInject*/\n\t\tthis.controller = ($scope, $window, routeVm) => {\n\t\t\t$scope.routeVm = routeVm;\n\t\t};\n\t}\n}\n","/*@ngInject*/\nfunction configLoader(ssAppConfigSvc) {\n\tssAppConfigSvc.load('employee-center');\n}\n\nangular.module('ec-settings').run(configLoader);\n","/*@ngInject*/\nfunction routerConfig($locationProvider) {\n\t$locationProvider.html5Mode(true);\n}\n\nangular.module('ec-settings').config(routerConfig);\n","const _hlp = {\n\t// #---------------------------------------# //\n\t// #---- Helper (createPermissionsHlp) ----# //\n\n\tsecurityScope() {\n\t\treturn angular.extend({}, {\n\t\t\t_permissionProfileId: null,\n\t\t\t_locationAdministrationContext: 1,\n\t\t\t_locationIds: [],\n\t\t\t_jobTypeAdministrationContext: 3,\n\t\t\t_jobTypeIds: [],\n\t\t\t_departmentAdministrationContext: 0,\n\t\t\t_departmentIds: [],\n\t\t\t_employeeAdministrationContext: 1,\n\t\t\t_employeeIds: [],\n\t\t\tpermissionProfile: {\n\t\t\t\t_permissionProfileName: '' \n\t\t\t}\n\t\t});\n\t},\n\n\tpermissionSet() {\n\t\treturn angular.extend({}, {\n\t\t\t_protectedContextRegistrationId: null, // reference to the context registration\n\t\t\t_permissions: {\n\t\t\t\tresourceName: null, // maps to context registration resourceName\n\t\t\t\tobjectActions: [], // create, archive, etc\n\t\t\t\tpropertyActions: [], // propertyAction\n\t\t\t\tnestedResources: [] // permission sets\n\t\t\t}\n\t\t});\n\t},\n\n\tpermission() {\n\t\treturn angular.extend({}, {\n\t\t\tresourceName: null, // maps to registration resourceName\n\t\t\tobjectActions: [], // create, archive, etc\n\t\t\tpropertyActions: [], // propertyAction\n\t\t\tnestedResources: [] // permission sets\n\t\t});\n\t},\n\n\tpropertyAction() {\n\t\treturn angular.extend({}, { key: '', value: 0 });\n\t}\n\n\t// #-- END Helper (createPermissionsHlp) --# //\n\t// #---------------------------------------# //\n};\n\nfunction createPermissionsHlp() {return _hlp;}\nangular.module('ec-settings-helpers').factory('createPermissionsHlp', createPermissionsHlp);\n","const _hlp = {\n// #-----------------------------------# //\n// #---- Helper (securityScopeHlp) ----# //\n\n\t//values correspond to enumSecurityGroupScope\n\tlocation() {\n\t\treturn [{\n\t\t\tname: 'None',\n\t\t\tvalue: 0\n\t\t}, {\n\t\t\tname: 'Own Location',\n\t\t\tvalue: 1\n\t\t}, {\n\t\t\tname: 'Specific Locations (list)',\n\t\t\tvalue: 2\n\t\t}, {\n\t\t\tname: 'Any Locations',\n\t\t\tvalue: 3\n\t\t}];\n\t},\n\n\tdepartment() {\n\t\treturn [{\n\t\t\tname: 'None',\n\t\t\tvalue: 0\n\t\t}, {\n\t\t\tname: 'Own Department',\n\t\t\tvalue: 1\n\t\t}, {\n\t\t\tname: 'Specific Depts (list)',\n\t\t\tvalue: 2\n\t\t}, {\n\t\t\tname: 'Any Departments',\n\t\t\tvalue: 3\n\t\t}];\n\t},\n\n\tjobType() {\n\t\treturn [{\n\t\t\tname: 'None',\n\t\t\tvalue: 0\n\t\t}, {\n\t\t\tname: 'Own Job Type',\n\t\t\tvalue: 1\n\t\t}, {\n\t\t\tname: 'Specific Job Types (list)',\n\t\t\tvalue: 2\n\t\t}, {\n\t\t\tname: 'Any Job Type',\n\t\t\tvalue: 3\n\t\t}];\n\t},\n\n\temployee() {\n\t\treturn [{\n\t\t\tname: 'None',\n\t\t\tvalue: 0\n\t\t}, {\n\t\t\tname: 'Self Only',\n\t\t\tvalue: 1\n\t\t}, {\n\t\t\tname: 'Specific (list)',\n\t\t\tvalue: 2\n\t\t}, {\n\t\t\tname: 'Any Employee',\n\t\t\tvalue: 3\n\t\t}, {\n\t\t\tname: 'Direct Reports',\n\t\t\tvalue: 4\n\t\t}];\n\t}\n\n// #-- END Helper (securityScopeHlp) --# //\n// #-----------------------------------# //\n};\n\nfunction securityScopeHlp() { return _hlp; }\nangular.module('ec-settings-helpers').factory('securityScopeHlp', securityScopeHlp);\n","import './components/cmp-add-edit-cred/add-edit-cred.js';\nimport './components/cmp-add-edit-issuer/add-edit-issuer.js';\nimport './components/cmp-add-edit-subject/add-edit-subject.js';\nimport './components/cmp-grid-group/grid-group.js';\nimport './components/cmp-infographic-svg/infographic-svg.js';\nimport './components/cmp-job-type-detail/job-type-detail.js';\nimport './components/cmp-manage-credentials/manage-credentials.js';\nimport './components/cmp-manage-issuers/manage-issuers.js';\nimport './components/cmp-manage-subjects/manage-subjects.js';\nimport './components/cmp-nav-list-item/nav-list-item.js';\nimport './components/cmp-nav-list/nav-list.js';\nimport './components/cmp-pay-schedule/pay-schedule.js';\nimport './components/cmp-profile-table/profile-table.js';\nimport './components/cmp-profile-table/profile-table.logic.js';\nimport './components/cmp-protected-resource/protected-resource.js';\nimport './components/cmp-security-scope/security-scope.js';\nimport './components/cmp-tag/tag.js';\nimport './components/cmp-user-access-return/user-access-return.js';\nimport './helpers/createPermissionsHlp/create-permissions.js';\nimport './helpers/securityScopeHlp/security-scope.js';\nimport './services/messagingSvc/messaging.js';\nimport './services/propertyActionLabelSvc/property-action-label.js';\nimport './routes/general-config/credentials/credentials.state.js';\nimport './routes/general-config/credentials/segment-credential-content/credential-content.js';\nimport './routes/general-config/credentials/segment-credential-content/credential-content.logic.js';\nimport './routes/general-config/departments/departments.state.js';\nimport './routes/general-config/departments/segment-departments-content/departments-content.js';\nimport './routes/general-config/departments/segment-departments-content/departments-content.logic.js';\nimport './routes/general-config/drivers-license/drivers-license.state.js';\nimport './routes/general-config/drivers-license/segment-drivers-license-content/drivers-license-content.js';\nimport './routes/general-config/drivers-license/segment-drivers-license-content/drivers-license-content.logic.js';\nimport './routes/general-config/employment-groups/employment-groups.state.js';\nimport './routes/general-config/employment-groups/segment-employment-groups/employment-groups.js';\nimport './routes/general-config/employment-groups/segment-employment-groups/employment-groups.logic.js';\nimport './routes/general-config/general-config.state.js';\nimport './routes/general-config/job-types/job-type-detail/job-type-detail.state.js';\nimport './routes/general-config/job-types/job-type-detail/segment-job-type-detail/job-type-detail.js';\nimport './routes/general-config/job-types/job-type-detail/segment-job-type-detail/job-type-detail.logic.js';\nimport './routes/general-config/job-types/job-types.state.js';\nimport './routes/general-config/job-types/segment-job-types-content/job-types-content.js';\nimport './routes/general-config/job-types/segment-job-types-content/job-types-content.logic.js';\nimport './routes/general-config/locations/locations.state.js';\nimport './routes/general-config/locations/segment-locations-content/locations-content.js';\nimport './routes/general-config/locations/segment-locations-content/locations-content.logic.js';\nimport './routes/general-config/positions/positions.state.js';\nimport './routes/general-config/positions/segment-positions-content/positions-content.js';\nimport './routes/general-config/positions/segment-positions-content/positions-content.logic.js';\nimport './routes/general-config/segment-content/content.js';\nimport './routes/general-config/segment-content/content.logic.js';\nimport './routes/general-config/segment-sidebar/sidebar.js';\nimport './routes/general-config/segment-sidebar/sidebar.logic.js';\nimport './routes/general-config/signatures/segment-signatures-content/signatures-content.js';\nimport './routes/general-config/signatures/segment-signatures-content/signatures-content.logic.js';\nimport './routes/general-config/signatures/signatures.state.js';\nimport './routes/general-config/status-reasons/segment-status-reasons-content/status-reasons-content.js';\nimport './routes/general-config/status-reasons/segment-status-reasons-content/status-reasons-content.logic.js';\nimport './routes/general-config/status-reasons/status-reasons.state.js';\nimport './routes/index/index.state.js';\nimport './routes/permissions/groups/group-all/group-all.state.js';\nimport './routes/permissions/groups/group-all/segment-content/content.js';\nimport './routes/permissions/groups/group-all/segment-content/content.logic.js';\nimport './routes/permissions/groups/group-detail/group-detail.state.js';\nimport './routes/permissions/groups/group-detail/group-members/group-members.state.js';\nimport './routes/permissions/groups/group-detail/group-members/segment-content/content.js';\nimport './routes/permissions/groups/group-detail/group-members/segment-content/content.logic.js';\nimport './routes/permissions/groups/group-detail/profile-and-scope/profile-and-scope.state.js';\nimport './routes/permissions/groups/group-detail/profile-and-scope/segment-content/content.js';\nimport './routes/permissions/groups/group-detail/profile-and-scope/segment-content/content.logic.js';\nimport './routes/permissions/groups/group-detail/segment-content/content.js';\nimport './routes/permissions/groups/group-detail/segment-content/content.logic.js';\nimport './routes/permissions/groups/groups.state.js';\nimport './routes/permissions/groups/segment-content/content.js';\nimport './routes/permissions/groups/segment-content/content.logic.js';\nimport './routes/permissions/permissions.state.js';\nimport './routes/permissions/profiles/profile-all/profile-all.state.js';\nimport './routes/permissions/profiles/profile-all/segment-content/content.js';\nimport './routes/permissions/profiles/profile-all/segment-content/content.logic.js';\nimport './routes/permissions/profiles/profile-detail/profile-detail.state.js';\nimport './routes/permissions/profiles/profile-detail/segment-content/content.js';\nimport './routes/permissions/profiles/profile-detail/segment-content/content.logic.js';\nimport './routes/permissions/profiles/profile-detail/tab/segment-tab-content/tab-content.js';\nimport './routes/permissions/profiles/profile-detail/tab/segment-tab-content/tab-content.logic.js';\nimport './routes/permissions/profiles/profile-detail/tab/tab.state.js';\nimport './routes/permissions/profiles/profiles.state.js';\nimport './routes/permissions/profiles/segment-content/content.js';\nimport './routes/permissions/profiles/segment-content/content.logic.js';\nimport './routes/permissions/segment-content/content.js';\nimport './routes/permissions/segment-content/content.logic.js';\nimport './routes/permissions/segment-header/header.js';\nimport './routes/permissions/segment-header/header.logic.js';\nimport './routes/permissions/users/index/index.state.js';\nimport './routes/permissions/users/index/segment-content/content.js';\nimport './routes/permissions/users/index/segment-content/content.logic.js';\nimport './routes/permissions/users/user-detail/segment-content/content.js';\nimport './routes/permissions/users/user-detail/segment-content/content.logic.js';\nimport './routes/permissions/users/user-detail/user-detail.state.js';\nimport './routes/permissions/users/users.state.js';\nimport './routes/user-accounts/segment-content-old/content-old.js';\nimport './routes/user-accounts/segment-content-old/content-old.logic.js';\nimport './routes/user-accounts/segment-content/content.js';\nimport './routes/user-accounts/segment-content/content.logic.js';\nimport './routes/user-accounts/user-accounts.state.js';\nimport './config/load-config.js';\nimport './config/router.js';\n","angular.module('ec-settings', [\n\t'super-suit',\n\t'ec-settings-segments',\n\t'ec-settings-segment-logic',\n\t'ec-settings-templates',\n\t'ec-settings-helpers',\n\t'ec-settings-components',\n\t'ec-settings-components-logic',\n\t'ec-settings-decorators',\n\t'ec-settings-filters',\n\t'ec-settings-services'\n]);\n\nangular.module('ec-settings-segments', []);\nangular.module('ec-settings-segment-logic', []);\nangular.module('ec-settings-helpers', []);\nangular.module('ec-settings-components', []);\nangular.module('ec-settings-components-logic', []);\nangular.module('ec-settings-decorators', []);\nangular.module('ec-settings-filters', []);\nangular.module('ec-settings-services', []);\n","!function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-add-edit-cred/add-edit-cred.html\",'<div class=\"cmp-add-edit-cred\"> <form novalidate ss-validate-form ng-submit=\"go.save()\"> <super-grid-cell> <super-input-text data-test=\"edit-name\" placeholder=\"Credential Name\" model=\"credential._name\" edit-mode=\"credential.isEditing\" ss-validate=\"validator.name(credential._name, \\'Credential Name\\')\"></super-input-text> </super-grid-cell> <super-grid-cell class=\"actions\" ss-permitted=\"credentials.edit\" ng-if=\"vm.canAddEdit\"> <button type=\"button\" class=\"edit\" ng-if=\"!credential.isEditing\" ng-click=\"go.edit()\" ng-disabled=\"singleEditing.value\" data-test=\"edit\">Edit</button> <button type=\"submit\" class=\"save\" ss-icon=\"check\" title=\"Save\" ng-if=\"credential.isEditing\" ng-disabled=\"vm.isSaving\" data-test=\"save\"></button> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" title=\"Cancel\" ng-if=\"credential.isEditing\" ng-disabled=\"vm.isSaving\" ng-click=\"go.cancel()\" data-test=\"cancel\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" ng-if=\"!vm.isNew && credential.isEditing\" ng-disabled=\"vm.isSaving\" ng-click=\"go.remove()\" title=\"Delete\" ss-permitted=\"credentials.delete\" data-test=\"delete\"></button> </super-grid-cell> </form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-add-edit-issuer/add-edit-issuer.html\",'<div class=\"cmp-add-edit-issuer\"> <form novalidate ss-validate-form ng-submit=\"go.save()\"> <super-grid-cell> <super-input-text data-test=\"edit-name\" placeholder=\"Issuer Name\" model=\"issuer._name\" edit-mode=\"issuer.isEditing\" ss-validate=\"validator.name(issuer._name, \\'Issuer Name\\')\"></super-input-text> </super-grid-cell> <super-grid-cell ng-bind=\"vm.updatedUtcTxt\"></super-grid-cell> <super-grid-cell class=\"actions\" ss-permitted=\"credentials.edit\" ng-if=\"vm.canAddEdit\"> <button type=\"button\" class=\"edit\" ng-if=\"!issuer.isEditing\" ng-click=\"go.edit()\" ng-disabled=\"singleEditing\" data-test=\"edit\">Edit</button> <button type=\"submit\" class=\"save\" ss-icon=\"check\" title=\"Save\" ng-if=\"issuer.isEditing\" ng-disabled=\"vm.isSaving\" data-test=\"save\"></button> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" title=\"Cancel\" ng-if=\"issuer.isEditing\" ng-disabled=\"vm.isSaving\" ng-click=\"go.cancel()\" data-test=\"cancel\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" ng-if=\"!vm.isNew && issuer.isEditing\" ng-disabled=\"vm.isSaving\" ng-click=\"go.remove()\" title=\"Delete\" ss-permitted=\"credentials.delete\" data-test=\"delete\"></button> </super-grid-cell> </form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-add-edit-subject/add-edit-subject.html\",'<div class=\"cmp-add-edit-subject\"> <form novalidate ss-validate-form ng-submit=\"go.save()\"> <super-grid-cell> <super-input-text data-test=\"edit-name\" placeholder=\"Subject Name\" model=\"subject._name\" edit-mode=\"subject.isEditing\" ss-validate=\"validator.name(subject._name, \\'Subject Name\\')\"></super-input-text> </super-grid-cell> <super-grid-cell ng-bind=\"vm.updatedUtcTxt\"></super-grid-cell> <super-grid-cell class=\"actions\" ss-permitted=\"credentials.edit\" ng-if=\"vm.canAddEdit\"> <button type=\"button\" class=\"edit\" ng-if=\"!subject.isEditing\" ng-click=\"go.edit()\" ng-disabled=\"singleEditing.value\" data-test=\"edit\">Edit</button> <button type=\"submit\" class=\"save\" ss-icon=\"check\" title=\"Save\" ng-if=\"subject.isEditing\" ng-disabled=\"vm.isSaving\" data-test=\"save\"></button> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" title=\"Cancel\" ng-if=\"subject.isEditing\" ng-disabled=\"vm.isSaving\" ng-click=\"go.cancel()\" data-test=\"cancel\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" ng-if=\"!vm.isNew && subject.isEditing\" ng-disabled=\"vm.isSaving\" ng-click=\"go.remove()\" title=\"Delete\" ss-permitted=\"credentials.delete\" data-test=\"delete\"></button> </super-grid-cell> </form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-grid-group/grid-group.html\",'<div class=\"cmp-grid-group\"> <super-filter-bar search=\"vm.search\" type-label=\"{{itemType}}\" total-count=\"vm.totalResults\" selected-count=\"vm.selected.length\" search-disabled=\"vm.isEditOrAdd\"> <actions> <super-button ng-if=\"vm.permissions.canCreate\" ng-click=\"go.addNewItem()\" label=\"Add {{itemType}}\" is-disabled=\"vm.isEditOrAdd\"></super-button> </actions> <bulk-actions ng-if=\"vm.permissions.canDelete\"> <super-button ng-click=\"go.removeItem(vm.selected)\" label=\"Delete\"></super-button> <button class=\"cancel\" ng-click=\"vm.selected.length = 0\" ss-icon=\"times\"><label>Cancel</label></button> </bulk-actions> </super-filter-bar> <super-grid ss-pending=\"vm.loading\" on-sort-change=\"go.sort({sortBy, sortDirection})\" selectable=\"vm.selected\" on-select-all=\"\" on-select-none=\"\" default-sort=\"name\" disable-select-all=\"{{!vm.permissions.canEdit}}\"> <grid-header> <super-grid-column ng-repeat=\"column in config.gridColumns\" sort-by=\"{{column.sortBy}}\" width=\"{{column.width || \\'\\'}}\" info=\"column.info\">{{column.label}}<span ng-if=\"column.required\" class=\"required\"></span></super-grid-column> <super-grid-column class=\"actions-column\" ng-if=\"vm.permissions.canEdit\">Actions</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"item in vm.allItems | filter: (vm.uiFilter.filterActive ? vm.uiFilter.filterValue : \\'\\') | orderBy: (vm.uiSort.sortActive ? vm.uiSort.sortValue : \\'\\')\" ss-pending=\"item.isSaving\" is-disabled=\"vm.isEditOrAdd || !vm.permissions.canEdit\" selected-value=\"item\" ng-class=\"{\\'is-editing\\' : item.isEditing}\"> <form novalidate ng-submit=\"go.saveItem(item)\" ss-validate-form> <div class=\"super-grid-col-wrapper\" ng-if=\"!item.isEditing\"> <super-grid-cell ng-class=\"{\\'{{cell.selector}}\\': cell.selector}\" ng-repeat=\"cell in config.gridColumns\" ss-bind-html=\"cell.viewTemplate\"></super-grid-cell> <super-grid-cell class=\"actions\" ng-if=\"vm.permissions.canEdit\"> <button type=\"button\" ng-if=\"!config.customActions\" class=\"edit\" ng-click=\"go.editItem(item)\" ng-disabled=\"vm.isEditOrAdd || vm.disableEdit\">Edit</button> <super-button ng-if=\"config.customActions\" ng-disabled=\"vm.isEditOrAdd || vm.disableEdit\" ss-icon-after=\"angle-down\"> <item ng-repeat=\"action in config.customActions\" ng-click=\"action.fn(actions, item)\" ss-bind-html=\"action.label\"></item> </super-button> </super-grid-cell> </div> <div class=\"super-grid-col-wrapper\" ng-if=\"item.isEditing\"> <super-grid-cell ng-class=\"{\\'{{cell.selector}}\\': cell.selector}\" ng-repeat=\"cell in config.gridColumns\" ss-bind-html=\"cell.editTemplate\"></super-grid-cell> <super-grid-cell class=\"actions\"> <button type=\"submit\" class=\"save\" ss-icon=\"check\" title=\"Save\"></button> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" ng-click=\"go.cancel(item)\" title=\"Cancel\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" ng-if=\"!item.isAdding && vm.permissions.canDelete\" ng-click=\"go.removeItem(item)\" title=\"Delete\"></button> </super-grid-cell> </div> </form> </super-grid-row> </grid-rows> </super-grid> <fluid-paginator ng-if=\"vm.pages > 0\" total-pages=\"vm.pages\" current-page=\"vm.currentPage\" on:current-page-change=\"go.fetchData($event)\"></fluid-paginator> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"components/cmp-infographic-svg/infographic-svg.html\",'<div class=\"cmp-infographic-svg\"> <div class=\"infographic\" ng-show=\"vm.infographic\"> <ul> <li class=\"item item-1\"> <div class=\"item-content\"> <h3>Groups</h3> <svg class=\"svg-image\" width=\"150px\" height=\"85px\" viewBox=\"0 0 150 85\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>image-groups</title> <desc>Created with Sketch.</desc> <defs> <path id=\"path-1\" d=\"M0,0.429916391 L39.95004,0.429916391 L39.95004,27.2674342 L0,27.2674342 L0,0.429916391 Z\"></path> </defs> <g id=\"groups\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g transform=\"translate(-577.000000, -333.000000)\" id=\"image-groups\"> <g transform=\"translate(577.000000, 333.000000)\"> <path d=\"M82.221657,14.580598 C86.8558617,17.4980628 90.1063716,22.4295195 90.6973734,28.1593577 C92.5845141,29.0408713 94.6858539,29.5490749 96.9091464,29.5490749 C105.026822,29.5490749 111.609144,22.9502713 111.609144,14.8080348 C111.609144,6.65952411 105.026822,0.0607205801 96.9091464,0.0607205801 C88.8665186,0.0607205801 82.3436098,6.5418844 82.221657,14.580598 L82.221657,14.580598 Z M72.588953,44.7747905 C80.7128826,44.7747905 87.2905138,38.175987 87.2905138,30.0274763 C87.2905138,21.8852398 80.7128826,15.2864363 72.588953,15.2864363 C64.4728409,15.2864363 57.8889557,21.8852398 57.8889557,30.0337505 C57.8889557,38.175987 64.4728409,44.7747905 72.588953,44.7747905 L72.588953,44.7747905 Z M78.8257419,45.7802179 L66.3537276,45.7802179 C55.976799,45.7802179 47.5307891,54.2534142 47.5307891,64.6637444 L47.5307891,79.9694551 L47.5730035,80.2078716 L48.6236734,80.5388313 C58.5237354,83.6398141 67.129222,84.6750435 74.2134262,84.6750435 C88.0472463,84.6750435 96.0601676,80.7223492 96.5604866,80.4651104 L97.5376721,79.9694551 L97.6424264,79.9694551 L97.6424264,64.6637444 C97.6486804,54.2534142 89.201107,45.7802179 78.8257419,45.7802179 L78.8257419,45.7802179 Z M103.144372,30.5607764 L90.7708578,30.5607764 C90.6363971,35.5236037 88.5241128,40.0017553 85.1766661,43.2188093 C94.4059879,45.97001 101.15404,54.5482977 101.15404,64.6888409 L101.15404,69.4007034 C113.374332,68.952104 120.416321,65.4793797 120.88068,65.2456688 L121.857866,64.7437394 L121.96731,64.7437394 L121.96731,49.4380287 C121.96731,39.0276985 113.5213,30.5607764 103.144372,30.5607764 L103.144372,30.5607764 Z M46.7975091,29.555349 C49.6743432,29.555349 52.3494863,28.7099116 54.6149933,27.2762756 C55.3357653,22.5644131 57.8592492,18.4407491 61.455292,15.6346498 C61.4677999,15.3601572 61.4990699,15.0903701 61.4990699,14.8080348 C61.4990699,6.66579823 54.9151847,0.0607205801 46.7975091,0.0607205801 C38.6813969,0.0607205801 32.0975117,6.66579823 32.0975117,14.8080348 C32.0975117,22.9502713 38.6813969,29.555349 46.7975091,29.555349 L46.7975091,29.555349 Z M60.0028034,43.2188093 C56.6741186,40.0143036 54.5665249,35.5659539 54.4133022,30.6282231 C53.9551976,30.5968525 53.497093,30.5607764 53.034298,30.5607764 L40.5622836,30.5607764 C30.1791011,30.5607764 21.7393451,39.0276985 21.7393451,49.4380287 L21.7393451,64.7437394 L21.7753056,64.9821559 L22.8259755,65.3131156 C30.7716664,67.8008033 37.8621246,68.9473984 44.0254292,69.3081602 L44.0254292,64.6888409 C44.0254292,54.5482977 50.7734815,45.97001 60.0028034,43.2188093 L60.0028034,43.2188093 Z\" id=\"multiple25\" fill=\"#00BAAA\"></path> <g id=\"laptop112\" opacity=\"0.386019123\" transform=\"translate(0.713008, 37.233594)\"> <g id=\"Group-3\"> <mask id=\"mask-2\" fill=\"white\"> <use xlink:href=\"#path-1\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M39.8537502,22.9512388 C39.8158489,22.9068536 39.7600213,22.8805322 39.7000962,22.8805322 L0.2023111,22.8805322 C0.14392258,22.8805322 0.0880949601,22.9068536 0.05019364,22.9512388 C0.0102436,22.9971722 -0.00614616001,23.0560083 0.00204872,23.1143283 C0.00819488001,23.1525202 0.604372401,26.8380339 5.22782126,26.8380339 L34.6740739,26.8380339 C39.2995714,26.8380339 39.8942124,23.1525202 39.8998464,23.1143283 C39.91009,23.0560083 39.8921637,22.9971722 39.8537502,22.9512388 L39.8537502,22.9512388 Z M16.9797914,24.1707975 L22.9221037,24.1707975 L22.9221037,25.5477686 L16.9797914,25.5477686 L16.9797914,24.1707975 Z\" id=\"Fill-1\" fill=\"#000000\" mask=\"url(#mask-2)\"></path> </g> <path d=\"M4.30538508,21.4488539 L35.59651,21.4488539 C36.048765,21.4488539 36.4170224,21.0782897 36.4170224,20.622568 L36.4170224,1.25620228 C36.4170224,0.800996685 36.048765,0.429916391 35.59651,0.429916391 L4.30538508,0.429916391 C3.85313014,0.429916391 3.4853849,0.800996685 3.4853849,1.25620228 L3.4853849,20.622568 C3.4853849,21.0782897 3.85313014,21.4488539 4.30538508,21.4488539 L4.30538508,21.4488539 Z M6.35410509,3.32062672 L33.54779,3.32062672 L33.54779,18.5581436 L6.35410509,18.5581436 L6.35410509,3.32062672 Z\" id=\"Fill-4\" fill=\"#000000\"></path> </g> <g id=\"computer200\" opacity=\"0.272504664\" transform=\"translate(102.340303, 29.518469)\" fill=\"#000000\"> <path d=\"M46.7461938,22.9623606 C46.6749341,22.7187968 46.5270512,22.5041458 46.3241526,22.3491369 C44.5982893,21.0351941 42.8264519,20.312677 41.0707055,20.1494938 C41.0707055,20.1494938 40.8366979,20.1128608 40.2733633,20.1128608 C39.7094158,20.1128608 39.4220784,20.1488883 39.4220784,20.1488883 C37.7285501,20.3458283 36.033336,21.0825748 34.3690778,22.3491369 C34.1661793,22.5041458 34.0182963,22.7187968 33.9471899,22.9623606 C33.1305387,25.7587275 32.9127752,28.4414111 33.2611048,31.4044428 C33.569437,34.0240026 34.2996571,36.6529478 35.152168,39.5717777 C35.2234277,39.8153416 35.3711574,40.0299926 35.5742092,40.1848501 C36.8809431,41.1801466 38.5756974,41.7276732 40.3463087,41.7276732 C42.1170734,41.7276732 43.8124406,41.1801466 45.1191745,40.1848501 C45.322073,40.0305981 45.469956,39.8153416 45.5412157,39.5717777 C46.3935734,36.6529478 47.1239467,34.0240026 47.4322789,31.4044428 C47.7812215,28.4414111 47.5626918,25.7587275 46.7461938,22.9623606 L46.7461938,22.9623606 Z M41.4011052,27.818802 C41.4011052,28.3941818 40.9287991,28.8601168 40.3469217,28.8601168 C39.7644313,28.8601168 39.2921253,28.3941818 39.2921253,27.818802 L39.2921253,23.4738598 C39.2921253,22.8990855 39.7644313,22.432545 40.3469217,22.432545 C40.9287991,22.432545 41.4011052,22.8990855 41.4011052,23.4738598 L41.4011052,27.818802 Z\" id=\"Fill-1\"></path> <path d=\"M32.3218563,38.9353935 L30.4206788,38.9353935 L28.85174,33.6650904 L32.0542877,33.6650904 C31.9543709,33.0998528 31.8687061,32.5356749 31.802197,31.9686208 C31.5999115,30.2497475 31.575392,28.6170071 31.7315503,27.0045511 L3.67791873,27.0045511 L3.67791873,3.75593866 L41.6830789,3.75593866 L41.6830789,18.680088 C42.9210051,18.8023997 44.1511157,19.1596468 45.3609977,19.7450174 L45.3609977,1.93942794 C45.3609977,0.935957148 44.5379101,0.122917225 43.5220383,0.122917225 L1.83895937,0.122917225 C0.823087563,0.122917225 0,0.935957148 0,1.93942794 L0,31.8485797 C0,32.8520505 0.823087563,33.6650904 1.83895937,33.6650904 L16.5092577,33.6650904 L14.9403189,38.9353935 L13.0391414,38.9353935 C12.5561081,38.9353935 12.164563,39.3221589 12.164563,39.7992957 L12.164563,41.2190502 C12.164563,41.6957329 12.5561081,42.0824983 13.0391414,42.0824983 L32.3218563,42.0824983 C32.8048896,42.0824983 33.1958217,41.6957329 33.1958217,41.2190502 L33.1958217,39.7992957 C33.1958217,39.3221589 32.8048896,38.9353935 32.3218563,38.9353935 L32.3218563,38.9353935 Z\" id=\"Fill-3\"></path> </g> </g> </g> </g> </svg> <p>These people...<span>Group members</span></p> </div> </li> <li class=\"item item-2\"> <div class=\"item-content\"> <h3>Permission Profiles</h3> <svg class=\"svg-image\" width=\"106px\" height=\"84px\" viewBox=\"0 0 106 84\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>image-profiles</title> <desc>Created with Sketch.</desc> <defs> <path id=\"path-1\" d=\"M0.00689173141,0.00448543279 L47.093498,0.00448543279 L47.093498,28.7067699 L0.00689173141,28.7067699 L0.00689173141,0.00448543279 Z\"></path> <path id=\"path-3\" d=\"M0.0465371464,0.428120431 L31.0247643,0.428120431 L31.0247643,29.7937818 L0.0465371464,29.7937818 L0.0465371464,0.428120431 Z\"></path> </defs> <g id=\"groups\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g transform=\"translate(-872.000000, -332.000000)\" id=\"image-profiles\"> <g transform=\"translate(872.000000, 332.000000)\"> <path d=\"M78.2268822,62.7860948 C78.1899871,62.3148734 77.9776732,61.8603146 77.6291831,61.5207285 L47.5107841,31.5968324 C48.6964554,28.8228242 49.3213227,25.8195372 49.3213227,22.7159407 C49.3213227,16.6497141 46.9405886,10.9414026 42.6302458,6.64842169 C38.3145364,2.36410544 32.5730028,0 26.4638607,0 C20.3517,0 14.6222411,2.36410544 10.2984819,6.65208749 C1.3786113,15.5093181 1.37626344,29.9175644 10.2971403,38.774795 C14.6195578,43.0707752 20.3530416,45.4372134 26.4611775,45.4372134 C29.585849,45.4372134 32.6018479,44.8096957 35.3991602,43.631642 L45.2937297,53.4693066 C45.7052767,53.8742105 46.2489749,54.0874932 46.8345993,54.0691642 L52.2259658,53.8805423 L52.0505468,59.2516006 C52.0334409,59.8177995 52.2390467,60.3700017 52.653277,60.7735726 C53.0514077,61.1758104 53.6108701,61.3957582 54.178047,61.3724304 L59.5905442,61.1888073 L59.3953361,66.5532005 C59.3782302,67.1210657 59.598594,67.6729347 59.9967247,68.0765056 C60.4082717,68.4800764 60.8875714,68.6960252 61.5362526,68.6766964 L66.9356689,68.4944064 L66.7548834,73.8601326 C66.7220133,74.4549913 66.9749118,75.0265223 67.4032293,75.4340922 C67.7976704,75.7906743 68.2903864,75.9819622 68.8102706,75.9819622 C68.8850668,75.9819622 68.9612047,75.9796294 69.0370072,75.9729643 L77.3162463,75.0591812 C78.4338296,74.93821 79.2488738,73.9461121 79.1529468,72.83171 L78.2268822,62.7860948 Z M26.6544004,22.9084989 C24.1113283,25.4312334 20.0012247,25.4312334 17.4635192,22.9084989 C14.9231304,20.3830984 14.9231304,16.2994012 17.4635192,13.7779998 C20.0012247,11.2562651 24.1099867,11.2535991 26.6544004,13.7766668 C29.1921059,16.2994012 29.1897581,20.3857645 26.6544004,22.9084989 L26.6544004,22.9084989 Z\" id=\"Fill-1\" fill=\"#00BAAA\"></path> <g id=\"eyeball15\" opacity=\"0.219333022\" transform=\"translate(58.441998, 5.023074)\"> <mask id=\"mask-2\" fill=\"white\"> <use xlink:href=\"#path-1\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M23.5238914,0 C13.2634817,0 4.37016175,5.8328568 0,14.3533849 C4.37016175,22.8739131 13.2634817,28.7067699 23.5238914,28.7067699 C33.7838417,28.7067699 42.6771616,22.8739131 47.0477828,14.3533849 C42.6776211,5.8328568 33.7838417,0 23.5238914,0 L23.5238914,0 Z M35.1226754,7.61211586 C37.8866043,9.33306428 40.2291038,11.6389131 41.9884479,14.3533849 C40.2291038,17.0678567 37.8866043,19.3737056 35.1222159,21.094654 C31.6494725,23.2576418 27.6387145,24.4009787 23.5238914,24.4009787 C19.4090683,24.4009787 15.3983104,23.2576418 11.9249926,21.094654 C9.16117857,19.3737056 6.8185642,17.0678567 5.05933489,14.3533849 C6.8185642,11.6384646 9.16117857,9.33306428 11.9249926,7.61211586 C12.1049816,7.49998004 12.2866936,7.39132043 12.4696691,7.28445499 C12.0120581,8.51054805 11.7616586,9.83330218 11.7616586,11.213582 C11.7616586,17.5554233 17.0278603,22.6960657 23.5238914,22.6960657 C30.0198077,22.6960657 35.28555,17.5554233 35.28555,11.213582 C35.28555,9.83330218 35.0352653,8.51054805 34.5775394,7.28445499 C34.7606298,7.39087188 34.9423417,7.49998004 35.1226754,7.61211586 L35.1226754,7.61211586 Z M23.5238914,9.77813135 C23.5238914,12.1561957 21.5491806,14.0844832 19.1128387,14.0844832 C16.6769563,14.0844832 14.7023603,12.1561957 14.7023603,9.77813135 C14.7023603,7.40006702 16.6769563,5.47234014 19.1128387,5.47234014 C21.5491806,5.47234014 23.5238914,7.40006702 23.5238914,9.77813135 L23.5238914,9.77813135 Z\" id=\"Fill-1\" fill=\"#000000\" mask=\"url(#mask-2)\"></path> </g> <g id=\"checkbox6\" opacity=\"0.319437966\" transform=\"translate(0.000000, 53.818646)\"> <path d=\"M29.876848,3.54397165 L27.1676105,0.847740276 C26.8860607,0.567220932 26.5191929,0.428120431 26.1531007,0.428120431 C25.7831304,0.428120431 25.4170381,0.567220932 25.1378153,0.844649153 L22.9684086,3.00070692 L27.7105438,7.71544112 L29.876848,5.56015614 C30.436845,5.00452691 30.436845,4.0988281 29.876848,3.54397165 L29.876848,3.54397165 Z\" id=\"Fill-1\" fill=\"#000000\"></path> <path d=\"M8.89557554,16.9949901 L13.6369351,21.7097243 L26.6952584,8.72391976 L21.9538988,4.00841277 L8.89557554,16.9949901 Z\" id=\"Fill-2\" fill=\"#000000\"></path> <g id=\"Group-6\"> <mask id=\"mask-4\" fill=\"white\"> <use xlink:href=\"#path-3\"></use> </mask> <g id=\"Clip-4\"></g> <path d=\"M7.8709827,18.0057871 L6.85957538,23.7235905 L12.6131179,22.7182029 L7.8709827,18.0057871 Z\" id=\"Fill-3\" fill=\"#000000\" mask=\"url(#mask-4)\"></path> <path d=\"M20.97817,26.2745391 L3.10247643,26.2745391 L3.10247643,8.46426549 L15.7186968,8.46426549 L18.8266026,5.37314324 L2.00575101,5.37314324 C0.902820641,5.37314324 0,6.27265982 0,7.3746449 L0,27.3672508 C0,28.4661448 0.902820641,29.3656613 2.00575101,29.3656613 L22.0717929,29.3656613 C23.1778258,29.3656613 24.0806464,28.4661448 24.0806464,27.3672508 L24.0806464,13.0739015 L20.97817,16.1588415 L20.97817,26.2745391 Z\" id=\"Fill-5\" fill=\"#000000\" mask=\"url(#mask-4)\"></path> </g> </g> </g> </g> </g> </svg> <p>...can see and edit items...<span>example: Social Security Number</span></p> </div> </li> <li class=\"item item-3\"> <div class=\"item-content\"> <h3>Scope of Control</h3> <svg class=\"svg-image\" width=\"153px\" height=\"117px\" viewBox=\"0 0 153 117\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>image-scope</title> <desc>Created with Sketch.</desc> <defs> <path id=\"path-1\" d=\"M0.00762071039,0.000126659582 L38.4845875,0.000126659582 L38.4845875,40.5311928 L0.00762071039,40.5311928 L0.00762071039,0.000126659582 Z\"></path> <path id=\"path-3\" d=\"M0.00638506336,0.000107130624 L32.24457,0.000107130624 L32.24457,34.2819067 L0.00638506336,34.2819067 L0.00638506336,0.000107130624 Z\"></path> <path id=\"path-5\" d=\"M0.00375348422,6.2437822e-05 L18.9550953,6.2437822e-05 L18.9550953,19.9801655 L0.00375348422,19.9801655 L0.00375348422,6.2437822e-05 Z\"></path> <path id=\"path-7\" d=\"M0.00318477449,5.17341954e-05 L16.0831112,5.17341954e-05 L16.0831112,16.5549942 L0.00318477449,16.5549942 L0.00318477449,5.17341954e-05 Z\"></path> <path id=\"path-9\" d=\"M0.0186938182,0.0458823529 L15.5781818,0.0458823529 L15.5781818,21.3939216 L0.0186938182,21.3939216 L0.0186938182,0.0458823529 Z\"></path> </defs> <g id=\"groups\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g transform=\"translate(-1134.000000, -318.000000)\" id=\"image-scope\"> <g transform=\"translate(1134.000000, 318.000000)\"> <g id=\"Oval-7-+-Oval-7\" transform=\"translate(20.780881, 3.082410)\" stroke=\"#00BAAA\"> <ellipse id=\"Oval-7\" stroke-width=\"7\" opacity=\"0.843108675\" cx=\"56.3538829\" cy=\"56.2425143\" rx=\"41.4473701\" ry=\"41.3208912\"></ellipse> <ellipse id=\"Oval-7\" stroke-width=\"2\" opacity=\"0.446536847\" cx=\"56.6235474\" cy=\"56.5113559\" rx=\"49.2510694\" ry=\"49.100777\"></ellipse> <ellipse id=\"Oval-7\" stroke-width=\"2\" opacity=\"0.185401119\" cx=\"56.6235474\" cy=\"56.5113559\" rx=\"56.5400499\" ry=\"56.3675149\"></ellipse> </g> <g id=\"university19-copy-2\" transform=\"translate(52.422026, 46.701574)\"> <mask id=\"mask-2\" fill=\"white\"> <use xlink:href=\"#path-1\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M27.7073161,34.0857017 L27.7073161,21.3234059 C27.7073161,20.6573221 27.1659399,20.1174474 26.4980036,20.1174474 L20.7552741,20.1174474 L20.7552741,16.6450212 C20.7552741,16.3171424 20.5769395,16.0148585 20.290011,15.8551996 L15.6265822,13.2619122 C15.6010047,13.2474379 15.5743651,13.2350818 15.547814,13.2233434 L15.547814,11.7436083 L18.0587481,11.7436083 C18.2592086,11.7436083 18.4217011,11.5815665 18.4217011,11.3816619 L18.4217011,9.55401347 C18.4217011,9.3541089 18.2592086,9.19206706 18.0587481,9.19206706 L15.547814,9.19206706 L15.547814,9.02861308 C15.547814,8.82870851 15.3853215,8.66666667 15.1851265,8.66666667 C14.9845775,8.66666667 14.822085,8.82870851 14.822085,9.02861308 L14.822085,13.2233434 C14.7955339,13.2350818 14.7688943,13.2474379 14.7433168,13.2619122 L10.080242,15.8551996 C9.79260552,16.0148585 9.61453638,16.3171424 9.61453638,16.6450212 L9.61453638,20.1174474 L3.87154136,20.1174474 C3.20360511,20.1174474 2.66222892,20.6573221 2.66222892,21.3234059 L2.66222892,34.0857017 C2.14846584,34.3177322 1.79100003,34.8327182 1.79100003,35.4316375 C1.79100003,36.2476718 2.4544226,36.9092544 3.27237236,36.9092544 L27.0975266,36.9092544 C27.9154764,36.9092544 28.578899,36.2476718 28.578899,35.4316375 C28.578899,34.8327182 28.2210791,34.3177322 27.7073161,34.0857017 L27.7073161,34.0857017 Z M23.0329128,24.3210918 C23.0329128,23.9331975 23.3481625,23.6188222 23.7374896,23.6188222 L25.0549533,23.6188222 C25.4439264,23.6188222 25.75953,23.9331975 25.75953,24.3210918 L25.75953,25.6349899 C25.75953,26.023149 25.4439264,26.3376125 25.0549533,26.3376125 L23.7374896,26.3376125 C23.3481625,26.3376125 23.0329128,26.023149 23.0329128,25.6349899 L23.0329128,24.3210918 Z M23.0329128,28.5422995 C23.0329128,28.1544053 23.3481625,27.8396769 23.7374896,27.8396769 L25.0549533,27.8396769 C25.4439264,27.8396769 25.75953,28.1544053 25.75953,28.5422995 L25.75953,29.8561977 C25.75953,30.2440037 25.4439264,30.5584673 25.0549533,30.5584673 L23.7374896,30.5584673 C23.3481625,30.5584673 23.0329128,30.2440037 23.0329128,29.8561977 L23.0329128,28.5422995 Z M18.8003193,24.3210918 C18.8003193,23.9331975 19.1155689,23.6188222 19.504542,23.6188222 L20.8220058,23.6188222 C21.2109789,23.6188222 21.5265825,23.9331975 21.5265825,24.3210918 L21.5265825,25.6349899 C21.5265825,26.023149 21.2109789,26.3376125 20.8220058,26.3376125 L19.504542,26.3376125 C19.1155689,26.3376125 18.8003193,26.023149 18.8003193,25.6349899 L18.8003193,24.3210918 Z M18.8003193,28.5422995 C18.8003193,28.1544053 19.1155689,27.8396769 19.504542,27.8396769 L20.8220058,27.8396769 C21.2109789,27.8396769 21.5265825,28.1544053 21.5265825,28.5422995 L21.5265825,29.8561977 C21.5265825,30.2440037 21.2109789,30.5584673 20.8220058,30.5584673 L19.504542,30.5584673 C19.1155689,30.5584673 18.8003193,30.2440037 18.8003193,29.8561977 L18.8003193,28.5422995 Z M15.1847725,16.6477572 C16.2869071,16.6477572 17.1806159,17.5389874 17.1806159,18.6377123 C17.1806159,19.7367902 16.2869071,20.6276674 15.1847725,20.6276674 C14.0829919,20.6276674 13.1892831,19.7367902 13.1892831,18.6377123 C13.1892831,17.5386343 14.0829919,16.6477572 15.1847725,16.6477572 L15.1847725,16.6477572 Z M13.1865395,28.0717074 C13.1865395,27.6838131 13.5021431,27.3694378 13.8914702,27.3694378 L16.4784288,27.3694378 C16.8677559,27.3694378 17.1830055,27.6838131 17.1830055,28.0717074 L17.1830055,33.6068133 C17.1830055,33.7332872 17.1491087,33.851906 17.0899883,33.9546385 L13.2798222,33.9546385 C13.2207903,33.851906 13.1868935,33.7332872 13.1868935,33.6068133 L13.1868935,28.0717074 L13.1865395,28.0717074 Z M8.84331649,24.3210918 C8.84331649,23.9331975 9.15856612,23.6188222 9.54789322,23.6188222 L10.865003,23.6188222 C11.2543301,23.6188222 11.5695797,23.9331975 11.5695797,24.3210918 L11.5695797,25.6349899 C11.5695797,26.023149 11.2543301,26.3376125 10.865003,26.3376125 L9.54789322,26.3376125 C9.15856612,26.3376125 8.84331649,26.023149 8.84331649,25.6349899 L8.84331649,24.3210918 Z M8.84331649,28.5422995 C8.84331649,28.1544053 9.15856612,27.8396769 9.54789322,27.8396769 L10.865003,27.8396769 C11.2543301,27.8396769 11.5695797,28.1544053 11.5695797,28.5422995 L11.5695797,29.8561977 C11.5695797,30.2440037 11.2543301,30.5584673 10.865003,30.5584673 L9.54789322,30.5584673 C9.15856612,30.5584673 8.84331649,30.2440037 8.84331649,29.8561977 L8.84331649,28.5422995 Z M4.61028045,24.3210918 C4.61028045,23.9331975 4.92561858,23.6188222 5.31485717,23.6188222 L6.63205543,23.6188222 C7.02138252,23.6188222 7.33698616,23.9331975 7.33698616,24.3210918 L7.33698616,25.6349899 C7.33698616,26.023149 7.02138252,26.3376125 6.63205543,26.3376125 L5.31485717,26.3376125 C4.92561858,26.3376125 4.61028045,26.023149 4.61028045,25.6349899 L4.61028045,24.3210918 Z M4.61028045,28.5422995 C4.61028045,28.1544053 4.92561858,27.8396769 5.31485717,27.8396769 L6.63205543,27.8396769 C7.02138252,27.8396769 7.33698616,28.1544053 7.33698616,28.5422995 L7.33698616,29.8561977 C7.33698616,30.2440037 7.02138252,30.5584673 6.63205543,30.5584673 L5.31485717,30.5584673 C4.92561858,30.5584673 4.61028045,30.2440037 4.61028045,29.8561977 L4.61028045,28.5422995 Z\" id=\"Fill-1\" fill=\"#00BAAA\" mask=\"url(#mask-2)\"></path> </g> <g id=\"university19-copy\" opacity=\"0.230000019\" transform=\"translate(0.696904, 12.071429)\"> <mask id=\"mask-4\" fill=\"white\"> <use xlink:href=\"#path-3\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M31.1620889,30.8545838 L31.1620889,15.3632814 C31.1620889,14.5547665 30.5111317,13.8994485 29.7079971,13.8994485 L22.8028704,13.8994485 L22.8028704,9.68450125 C22.8028704,9.28651099 22.5884386,8.9195886 22.2434324,8.7257893 L16.6360697,5.57797019 C16.605315,5.56040076 16.5732833,5.54540248 16.541358,5.5311541 L16.541358,3.73500207 L19.5605352,3.73500207 C19.8015713,3.73500207 19.9969543,3.53831024 19.9969543,3.29565938 L19.9969543,1.07719842 C19.9969543,0.834547559 19.8015713,0.637855734 19.5605352,0.637855734 L16.541358,0.637855734 L16.541358,0.439449819 C16.541358,0.196798956 16.345975,0.000107130624 16.1052581,0.000107130624 C15.8641156,0.000107130624 15.6687326,0.196798956 15.6687326,0.439449819 L15.6687326,5.5311541 C15.6368073,5.54540248 15.6047756,5.56040076 15.5740209,5.57797019 L9.9670839,8.7257893 C9.6212263,8.9195886 9.40711384,9.28651099 9.40711384,9.68450125 L9.40711384,13.8994485 L2.50166782,13.8994485 C1.69853327,13.8994485 1.04757606,14.5547665 1.04757606,15.3632814 L1.04757606,30.8545838 C0.429821182,31.1362302 2.13162821e-14,31.7613374 2.13162821e-14,32.4883258 C2.13162821e-14,33.4788556 0.797707249,34.2819067 1.78121984,34.2819067 L30.4288708,34.2819067 C31.4123834,34.2819067 32.2100906,33.4788556 32.2100906,32.4883258 C32.2100906,31.7613374 31.7798438,31.1362302 31.1620889,30.8545838 L31.1620889,30.8545838 Z M25.5415304,19.001973 C25.5415304,18.5311339 25.9205904,18.1495346 26.3887219,18.1495346 L27.9728562,18.1495346 C28.440562,18.1495346 28.8200476,18.5311339 28.8200476,19.001973 L28.8200476,20.5968266 C28.8200476,21.0679871 28.440562,21.4496935 27.9728562,21.4496935 L26.3887219,21.4496935 C25.9205904,21.4496935 25.5415304,21.0679871 25.5415304,20.5968266 L25.5415304,19.001973 Z M25.5415304,24.1258165 C25.5415304,23.6549774 25.9205904,23.2729496 26.3887219,23.2729496 L27.9728562,23.2729496 C28.440562,23.2729496 28.8200476,23.6549774 28.8200476,24.1258165 L28.8200476,25.7206701 C28.8200476,26.191402 28.440562,26.5731084 27.9728562,26.5731084 L26.3887219,26.5731084 C25.9205904,26.5731084 25.5415304,26.191402 25.5415304,25.7206701 L25.5415304,24.1258165 Z M20.4522093,19.001973 C20.4522093,18.5311339 20.8312692,18.1495346 21.2989751,18.1495346 L22.8831093,18.1495346 C23.3508152,18.1495346 23.7303008,18.5311339 23.7303008,19.001973 L23.7303008,20.5968266 C23.7303008,21.0679871 23.3508152,21.4496935 22.8831093,21.4496935 L21.2989751,21.4496935 C20.8312692,21.4496935 20.4522093,21.0679871 20.4522093,20.5968266 L20.4522093,19.001973 Z M20.4522093,24.1258165 C20.4522093,23.6549774 20.8312692,23.2729496 21.2989751,23.2729496 L22.8831093,23.2729496 C23.3508152,23.2729496 23.7303008,23.6549774 23.7303008,24.1258165 L23.7303008,25.7206701 C23.7303008,26.191402 23.3508152,26.5731084 22.8831093,26.5731084 L21.2989751,26.5731084 C20.8312692,26.5731084 20.4522093,26.191402 20.4522093,25.7206701 L20.4522093,24.1258165 Z M16.1048325,9.6878223 C17.4300524,9.6878223 18.5046585,10.7696273 18.5046585,12.1032965 C18.5046585,13.4373941 17.4300524,14.5187706 16.1048325,14.5187706 C14.7800382,14.5187706 13.7054321,13.4373941 13.7054321,12.1032965 C13.7054321,10.7691988 14.7800382,9.6878223 16.1048325,9.6878223 L16.1048325,9.6878223 Z M13.7021331,23.554596 C13.7021331,23.0837569 14.0816187,22.7021576 14.5497503,22.7021576 L17.6603403,22.7021576 C18.1284719,22.7021576 18.5075318,23.0837569 18.5075318,23.554596 L18.5075318,30.273293 C18.5075318,30.4268112 18.4667738,30.5707948 18.3956868,30.6954948 L13.8142974,30.6954948 C13.7433168,30.5707948 13.7025588,30.4268112 13.7025588,30.273293 L13.7025588,23.554596 L13.7021331,23.554596 Z M8.47978981,19.001973 C8.47978981,18.5311339 8.85884974,18.1495346 9.3269813,18.1495346 L10.9106898,18.1495346 C11.3788214,18.1495346 11.7578813,18.5311339 11.7578813,19.001973 L11.7578813,20.5968266 C11.7578813,21.0679871 11.3788214,21.4496935 10.9106898,21.4496935 L9.3269813,21.4496935 C8.85884974,21.4496935 8.47978981,21.0679871 8.47978981,20.5968266 L8.47978981,19.001973 Z M8.47978981,24.1258165 C8.47978981,23.6549774 8.85884974,23.2729496 9.3269813,23.2729496 L10.9106898,23.2729496 C11.3788214,23.2729496 11.7578813,23.6549774 11.7578813,24.1258165 L11.7578813,25.7206701 C11.7578813,26.191402 11.3788214,26.5731084 10.9106898,26.5731084 L9.3269813,26.5731084 C8.85884974,26.5731084 8.47978981,26.191402 8.47978981,25.7206701 L8.47978981,24.1258165 Z M3.38993655,19.001973 C3.38993655,18.5311339 3.7691029,18.1495346 4.23712804,18.1495346 L5.82094301,18.1495346 C6.28907457,18.1495346 6.66856017,18.5311339 6.66856017,19.001973 L6.66856017,20.5968266 C6.66856017,21.0679871 6.28907457,21.4496935 5.82094301,21.4496935 L4.23712804,21.4496935 C3.7691029,21.4496935 3.38993655,21.0679871 3.38993655,20.5968266 L3.38993655,19.001973 Z M3.38993655,24.1258165 C3.38993655,23.6549774 3.7691029,23.2729496 4.23712804,23.2729496 L5.82094301,23.2729496 C6.28907457,23.2729496 6.66856017,23.6549774 6.66856017,24.1258165 L6.66856017,25.7206701 C6.66856017,26.191402 6.28907457,26.5731084 5.82094301,26.5731084 L4.23712804,26.5731084 C3.7691029,26.5731084 3.38993655,26.191402 3.38993655,25.7206701 L3.38993655,24.1258165 Z\" id=\"Fill-1\" fill=\"#000000\" mask=\"url(#mask-4)\"></path> </g> <g id=\"university19-copy-3\" opacity=\"0.341301306\" transform=\"translate(101.529096, 0.038787)\"> <mask id=\"mask-6\" fill=\"white\"> <use xlink:href=\"#path-5\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M18.3187546,17.9826547 L18.3187546,8.95402074 C18.3187546,8.4828025 17.9360869,8.10087034 17.4639611,8.10087034 L13.4047556,8.10087034 L13.4047556,5.64431667 C13.4047556,5.41236016 13.2787011,5.19851062 13.0758879,5.0855606 L9.77957802,3.25095008 C9.76149874,3.24071027 9.74266876,3.23196898 9.72390134,3.22366475 L9.72390134,2.17683223 L11.4987364,2.17683223 C11.6404304,2.17683223 11.755287,2.06219638 11.755287,1.92077472 L11.755287,0.6278123 C11.755287,0.486390633 11.6404304,0.371754792 11.4987364,0.371754792 L9.72390134,0.371754792 L9.72390134,0.256119946 C9.72390134,0.114698279 9.60904472,6.2437822e-05 9.46753837,6.2437822e-05 C9.32578178,6.2437822e-05 9.21092516,0.114698279 9.21092516,0.256119946 L9.21092516,3.22366475 C9.19215774,3.23196898 9.17332776,3.24071027 9.15524848,3.25095008 L5.85918887,5.0855606 C5.65587514,5.19851062 5.5300083,5.41236016 5.5300083,5.64431667 L5.5300083,8.10087034 L1.47061512,8.10087034 C0.998489361,8.10087034 0.615821644,8.4828025 0.615821644,8.95402074 L0.615821644,17.9826547 C0.252672046,18.1468037 0,18.5111284 0,18.9348315 C0,19.5121316 0.468935295,19.9801655 1.04709698,19.9801655 L17.8877295,19.9801655 C18.4658912,19.9801655 18.9348265,19.5121316 18.9348265,18.9348315 C18.9348265,18.5111284 18.6819042,18.1468037 18.3187546,17.9826547 L18.3187546,17.9826547 Z M15.0146876,11.0747214 C15.0146876,10.8003071 15.2375194,10.5779036 15.5127124,10.5779036 L16.4439518,10.5779036 C16.7188945,10.5779036 16.9419766,10.8003071 16.9419766,11.0747214 L16.9419766,12.0042332 C16.9419766,12.2788348 16.7188945,12.5013007 16.4439518,12.5013007 L15.5127124,12.5013007 C15.2375194,12.5013007 15.0146876,12.2788348 15.0146876,12.0042332 L15.0146876,11.0747214 Z M15.0146876,14.0609975 C15.0146876,13.7865833 15.2375194,13.56393 15.5127124,13.56393 L16.4439518,13.56393 C16.7188945,13.56393 16.9419766,13.7865833 16.9419766,14.0609975 L16.9419766,14.9905094 C16.9419766,15.2648612 16.7188945,15.4873271 16.4439518,15.4873271 L15.5127124,15.4873271 C15.2375194,15.4873271 15.0146876,15.2648612 15.0146876,14.9905094 L15.0146876,14.0609975 Z M12.0229104,11.0747214 C12.0229104,10.8003071 12.2457423,10.5779036 12.520685,10.5779036 L13.4519244,10.5779036 C13.7268671,10.5779036 13.9499492,10.8003071 13.9499492,11.0747214 L13.9499492,12.0042332 C13.9499492,12.2788348 13.7268671,12.5013007 13.4519244,12.5013007 L12.520685,12.5013007 C12.2457423,12.5013007 12.0229104,12.2788348 12.0229104,12.0042332 L12.0229104,11.0747214 Z M12.0229104,14.0609975 C12.0229104,13.7865833 12.2457423,13.56393 12.520685,13.56393 L13.4519244,13.56393 C13.7268671,13.56393 13.9499492,13.7865833 13.9499492,14.0609975 L13.9499492,14.9905094 C13.9499492,15.2648612 13.7268671,15.4873271 13.4519244,15.4873271 L12.520685,15.4873271 C12.2457423,15.4873271 12.0229104,15.2648612 12.0229104,14.9905094 L12.0229104,14.0609975 Z M9.46728813,5.64625224 C10.2463238,5.64625224 10.8780352,6.27674937 10.8780352,7.05403781 C10.8780352,7.83157601 10.2463238,8.46182339 9.46728813,8.46182339 C8.68850272,8.46182339 8.05679132,7.83157601 8.05679132,7.05403781 C8.05679132,6.27649962 8.68850272,5.64625224 9.46728813,5.64625224 L9.46728813,5.64625224 Z M8.05485202,13.728079 C8.05485202,13.4536648 8.2779341,13.2312613 8.55312705,13.2312613 L10.3816994,13.2312613 C10.6568924,13.2312613 10.8797242,13.4536648 10.8797242,13.728079 L10.8797242,17.6438671 C10.8797242,17.7333404 10.8557645,17.8172569 10.8139757,17.8899345 L8.12078823,17.8899345 C8.07906199,17.8172569 8.05510225,17.7333404 8.05510225,17.6438671 L8.05510225,13.728079 L8.05485202,13.728079 Z M4.98487728,11.0747214 C4.98487728,10.8003071 5.20770912,10.5779036 5.48290208,10.5779036 L6.41389128,10.5779036 C6.68908423,10.5779036 6.91191608,10.8003071 6.91191608,11.0747214 L6.91191608,12.0042332 C6.91191608,12.2788348 6.68908423,12.5013007 6.41389128,12.5013007 L5.48290208,12.5013007 C5.20770912,12.5013007 4.98487728,12.2788348 4.98487728,12.0042332 L4.98487728,11.0747214 Z M4.98487728,14.0609975 C4.98487728,13.7865833 5.20770912,13.56393 5.48290208,13.56393 L6.41389128,13.56393 C6.68908423,13.56393 6.91191608,13.7865833 6.91191608,14.0609975 L6.91191608,14.9905094 C6.91191608,15.2648612 6.68908423,15.4873271 6.41389128,15.4873271 L5.48290208,15.4873271 C5.20770912,15.4873271 4.98487728,15.2648612 4.98487728,14.9905094 L4.98487728,14.0609975 Z M1.99278733,11.0747214 C1.99278733,10.8003071 2.21568174,10.5779036 2.49081213,10.5779036 L3.42186389,10.5779036 C3.69705684,10.5779036 3.92013892,10.8003071 3.92013892,11.0747214 L3.92013892,12.0042332 C3.92013892,12.2788348 3.69705684,12.5013007 3.42186389,12.5013007 L2.49081213,12.5013007 C2.21568174,12.5013007 1.99278733,12.2788348 1.99278733,12.0042332 L1.99278733,11.0747214 Z M1.99278733,14.0609975 C1.99278733,13.7865833 2.21568174,13.56393 2.49081213,13.56393 L3.42186389,13.56393 C3.69705684,13.56393 3.92013892,13.7865833 3.92013892,14.0609975 L3.92013892,14.9905094 C3.92013892,15.2648612 3.69705684,15.4873271 3.42186389,15.4873271 L2.49081213,15.4873271 C2.21568174,15.4873271 1.99278733,15.2648612 1.99278733,14.9905094 L1.99278733,14.0609975 Z\" id=\"Fill-1\" fill=\"#000000\" mask=\"url(#mask-6)\"></path> </g> <g id=\"university19-copy-4\" opacity=\"0.128731343\" transform=\"translate(114.165826, 81.926882)\"> <mask id=\"mask-8\" fill=\"white\"> <use xlink:href=\"#path-7\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M15.5431857,14.8999139 L15.5431857,7.41904575 C15.5431857,7.02860778 15.218498,6.71214971 14.8179064,6.71214971 L11.3737321,6.71214971 L11.3737321,4.67671953 C11.3737321,4.48452699 11.2667767,4.30733737 11.0946927,4.21375021 L8.29782377,2.69364435 C8.28248378,2.68515994 8.26650683,2.67791715 8.25058295,2.67103651 L8.25058295,1.80366099 L9.75650357,1.80366099 C9.87672881,1.80366099 9.97418291,1.708677 9.97418291,1.59149905 L9.97418291,0.520187334 C9.97418291,0.403009382 9.87672881,0.308025399 9.75650357,0.308025399 L8.25058295,0.308025399 L8.25058295,0.212213669 C8.25058295,0.0950357169 8.15312885,5.17341954e-05 8.03306286,5.17341954e-05 C7.91278454,5.17341954e-05 7.81533044,0.0950357169 7.81533044,0.212213669 L7.81533044,2.67103651 C7.79940657,2.67791715 7.78342962,2.68515994 7.76808962,2.69364435 L4.97143298,4.21375021 C4.79892436,4.30733737 4.69212826,4.48452699 4.69212826,4.67671953 L4.69212826,6.71214971 L1.24779465,6.71214971 C0.847203094,6.71214971 0.522515335,7.02860778 0.522515335,7.41904575 L0.522515335,14.8999139 C0.214388403,15.0359231 0,15.3377921 0,15.6888604 C0,16.1671947 0.397884493,16.5549942 0.888445924,16.5549942 L15.1774675,16.5549942 C15.6680289,16.5549942 16.0659134,16.1671947 16.0659134,15.6888604 C16.0659134,15.3377921 15.8513127,15.0359231 15.5431857,14.8999139 L15.5431857,14.8999139 Z M12.7397349,9.1761977 C12.7397349,8.94882591 12.9288044,8.76454871 13.1623014,8.76454871 L13.952444,8.76454871 C14.1857287,8.76454871 14.3750105,8.94882591 14.3750105,9.1761977 L14.3750105,9.94636467 C14.3750105,10.1738917 14.1857287,10.3582206 13.952444,10.3582206 L13.1623014,10.3582206 C12.9288044,10.3582206 12.7397349,10.1738917 12.7397349,9.94636467 L12.7397349,9.1761977 Z M12.7397349,11.6505408 C12.7397349,11.423169 12.9288044,11.2386849 13.1623014,11.2386849 L13.952444,11.2386849 C14.1857287,11.2386849 14.3750105,11.423169 14.3750105,11.6505408 L14.3750105,12.4207078 C14.3750105,12.6480278 14.1857287,12.8323568 13.952444,12.8323568 L13.1623014,12.8323568 C12.9288044,12.8323568 12.7397349,12.6480278 12.7397349,12.4207078 L12.7397349,11.6505408 Z M10.2012573,9.1761977 C10.2012573,8.94882591 10.3903268,8.76454871 10.6236115,8.76454871 L11.4137541,8.76454871 C11.6470388,8.76454871 11.8363206,8.94882591 11.8363206,9.1761977 L11.8363206,9.94636467 C11.8363206,10.1738917 11.6470388,10.3582206 11.4137541,10.3582206 L10.6236115,10.3582206 C10.3903268,10.3582206 10.2012573,10.1738917 10.2012573,9.94636467 L10.2012573,9.1761977 Z M10.2012573,11.6505408 C10.2012573,11.423169 10.3903268,11.2386849 10.6236115,11.2386849 L11.4137541,11.2386849 C11.6470388,11.2386849 11.8363206,11.423169 11.8363206,11.6505408 L11.8363206,12.4207078 C11.8363206,12.6480278 11.6470388,12.8323568 11.4137541,12.8323568 L10.6236115,12.8323568 C10.3903268,12.8323568 10.2012573,12.6480278 10.2012573,12.4207078 L10.2012573,11.6505408 Z M8.03285054,4.67832329 C8.69385048,4.67832329 9.22984803,5.20073519 9.22984803,5.84477419 C9.22984803,6.48902012 8.69385048,7.01122509 8.03285054,7.01122509 C7.37206291,7.01122509 6.83606536,6.48902012 6.83606536,5.84477419 C6.83606536,5.20052825 7.37206291,4.67832329 8.03285054,4.67832329 L8.03285054,4.67832329 Z M6.8344199,11.3746941 C6.8344199,11.1473223 7.02370166,10.9630451 7.25719871,10.9630451 L8.80871468,10.9630451 C9.04221173,10.9630451 9.23128118,11.1473223 9.23128118,11.3746941 L9.23128118,14.6192041 C9.23128118,14.6933392 9.2109517,14.76287 9.17549454,14.8230886 L6.89036577,14.8230886 C6.85496169,14.76287 6.83463222,14.6933392 6.83463222,14.6192041 L6.83463222,11.3746941 L6.8344199,11.3746941 Z M4.22959284,9.1761977 C4.22959284,8.94882591 4.41866229,8.76454871 4.65215934,8.76454871 L5.44208957,8.76454871 C5.67558662,8.76454871 5.86465606,8.94882591 5.86465606,9.1761977 L5.86465606,9.94636467 C5.86465606,10.1738917 5.67558662,10.3582206 5.44208957,10.3582206 L4.65215934,10.3582206 C4.41866229,10.3582206 4.22959284,10.1738917 4.22959284,9.94636467 L4.22959284,9.1761977 Z M4.22959284,11.6505408 C4.22959284,11.423169 4.41866229,11.2386849 4.65215934,11.2386849 L5.44208957,11.2386849 C5.67558662,11.2386849 5.86465606,11.423169 5.86465606,11.6505408 L5.86465606,12.4207078 C5.86465606,12.6480278 5.67558662,12.8323568 5.44208957,12.8323568 L4.65215934,12.8323568 C4.41866229,12.8323568 4.22959284,12.6480278 4.22959284,12.4207078 L4.22959284,11.6505408 Z M1.69084986,9.1761977 C1.69084986,8.94882591 1.87997238,8.76454871 2.11341635,8.76454871 L2.90339966,8.76454871 C3.13689671,8.76454871 3.32617848,8.94882591 3.32617848,9.1761977 L3.32617848,9.94636467 C3.32617848,10.1738917 3.13689671,10.3582206 2.90339966,10.3582206 L2.11341635,10.3582206 C1.87997238,10.3582206 1.69084986,10.1738917 1.69084986,9.94636467 L1.69084986,9.1761977 Z M1.69084986,11.6505408 C1.69084986,11.423169 1.87997238,11.2386849 2.11341635,11.2386849 L2.90339966,11.2386849 C3.13689671,11.2386849 3.32617848,11.423169 3.32617848,11.6505408 L3.32617848,12.4207078 C3.32617848,12.6480278 3.13689671,12.8323568 2.90339966,12.8323568 L2.11341635,12.8323568 C1.87997238,12.8323568 1.69084986,12.6480278 1.69084986,12.4207078 L1.69084986,11.6505408 Z\" id=\"Fill-1\" fill=\"#000000\" mask=\"url(#mask-8)\"></path> </g> <g id=\"teacher17\" opacity=\"0.863164646\" transform=\"translate(84.895485, 45.648223)\" fill=\"#00BAAA\"> <path d=\"M17.200188,6.82332362 C17.3309781,7.47848985 17.4656151,8.1525551 17.9721064,8.47761834 C18.2170174,8.63511022 18.5029605,8.67920795 18.8030085,8.60991152 C19.6993058,8.40832191 19.9698619,7.33989699 20.235289,6.30675025 C20.340434,5.88341208 20.5212322,5.18918787 20.6866433,4.992638 C20.8866753,5.11611163 21.2174974,5.98168701 21.3329005,6.27651181 C21.6637227,7.13830738 22.0035206,8.02404172 22.7100439,8.25083003 C23.125495,8.42848087 23.4511882,8.34910496 23.6512202,8.25083003 C24.2077195,7.97490426 23.4806801,5.62260552 23.3062932,6.35084798 C23.2562852,6.56251707 23.1806321,6.88254057 23.1062612,7.06397122 C22.910076,6.89262005 22.6549069,6.2185548 22.5100119,5.84435409 C22.1394398,4.88428359 21.7227065,3.79695964 20.7110061,3.74782217 C19.6146769,3.68356549 19.2941128,4.92334157 19.0184276,6.01192545 C18.9235407,6.38486623 18.7581296,7.04003245 18.6081056,7.30587875 C18.5375815,7.10932888 18.4721864,6.79434512 18.4324364,6.58771577 C18.2824124,5.83427461 18.0772514,4.80112787 17.1245349,4.80112787 C15.9730686,4.80112787 15.3421984,6.31682973 14.7856991,7.65488075 C14.670296,7.92576679 14.57028,8.17649386 14.475393,8.36926392 L15.6076255,8.89591677 C15.7076415,8.68928743 15.8230446,8.41840139 15.9487057,8.12231666 C16.1538667,7.62590225 16.6693338,6.38486623 17.0193898,6.09004143 C17.0899139,6.28155155 17.155309,6.60661479 17.200188,6.82332362 Z\" id=\"Fill-2\"></path> <path d=\"M11.524921,6.24249357 C11.524921,9.02317021 9.23096417,11.2822338 6.39589516,11.2822338 C3.56595518,11.2822338 1.2719984,9.02317021 1.2719984,6.24249357 C1.2719984,3.46181692 3.56595518,1.20779312 6.39589516,1.20779312 C9.23096417,1.20779312 11.524921,3.46181692 11.524921,6.24249357 L11.524921,6.24249357 Z\" id=\"Fill-3\"></path> <path d=\"M19.9147249,9.31925495 L11.5505661,12.0356749 L8.26414281,12.0356749 L6.31126624,14.2645 L4.41737346,12.0356749 L0.285943188,12.655563 L0,21.849309 L1.75797359,21.849309 L1.84388477,23.478405 L11.0889538,23.478405 L11.5505661,14.6538199 L20.7058771,11.6715537 L19.9147249,9.31925495 Z\" id=\"Fill-4\"></path> </g> <g id=\"teacher17-copy-2\" opacity=\"0.732392724\" transform=\"translate(123.930572, 17.218108)\" fill-opacity=\"0.300000012\" fill=\"#000000\"> <path d=\"M6.61560398,3.1072366 C6.61560398,4.73079743 5.2988132,6.04980267 3.67140995,6.04980267 C2.0469509,6.04980267 0.730160118,4.73079743 0.730160118,3.1072366 C0.730160118,1.48367577 2.0469509,0.16761309 3.67140995,0.16761309 C5.2988132,0.16761309 6.61560398,1.48367577 6.61560398,3.1072366 L6.61560398,3.1072366 Z\" id=\"Fill-3\"></path> <path d=\"M7.33381664,12.2196279 L7.33381664,7.12299045 L4.74383262,6.4897163 L3.62283075,7.79106614 L2.5356871,6.4897163 L0.164138817,6.85165192 L0,12.2196281 L1.0091225,12.2196281 L1.05843775,13.1708126 L6.36534748,13.1708126 L6.63032495,8.01837937 L6.63032484,12.2196279 L7.33381664,12.2196279 Z\" id=\"Fill-4\"></path> </g> <g id=\"teacher17-copy-3\" opacity=\"0.732392724\" transform=\"translate(46.961397, 0.038787)\" fill-opacity=\"0.300000012\" fill=\"#000000\"> <path d=\"M6.61560398,3.1072366 C6.61560398,4.73079743 5.2988132,6.04980267 3.67140995,6.04980267 C2.0469509,6.04980267 0.730160118,4.73079743 0.730160118,3.1072366 C0.730160118,1.48367577 2.0469509,0.16761309 3.67140995,0.16761309 C5.2988132,0.16761309 6.61560398,1.48367577 6.61560398,3.1072366 L6.61560398,3.1072366 Z\" id=\"Fill-3\"></path> <path d=\"M7.33381664,12.2196279 L7.33381664,7.12299045 L4.74383262,6.4897163 L3.62283075,7.79106614 L2.5356871,6.4897163 L0.164138817,6.85165192 L0,12.2196281 L1.0091225,12.2196281 L1.05843775,13.1708126 L6.36534748,13.1708126 L6.63032495,8.01837937 L6.63032484,12.2196279 L7.33381664,12.2196279 Z\" id=\"Fill-4\"></path> </g> <path d=\"M144.976224,42.8225421 C145.840577,43.3647839 146.446848,44.2813475 146.557079,45.3462988 C146.909061,45.5101375 147.300994,45.6045925 147.715673,45.6045925 C149.229748,45.6045925 150.457455,44.3781348 150.457455,42.8648136 C150.457455,41.3503264 149.229748,40.1238686 147.715673,40.1238686 C146.215596,40.1238686 144.99897,41.3284618 144.976224,42.8225421 L144.976224,42.8225421 Z M143.179573,48.4344535 C144.694814,48.4344535 145.921646,47.2079958 145.921646,45.6935085 C145.921646,44.1801874 144.694814,42.9537296 143.179573,42.9537296 C141.66579,42.9537296 140.437791,44.1801874 140.437791,45.6946746 C140.437791,47.2079958 141.66579,48.4344535 143.179573,48.4344535 L143.179573,48.4344535 Z M144.342832,48.6213229 L142.016605,48.6213229 C140.081144,48.6213229 138.50583,50.1961564 138.50583,52.1310269 L138.50583,54.9757558 L138.513703,55.020068 L138.70967,55.0815804 C140.556188,55.657931 142.161247,55.8503394 143.482563,55.8503394 C146.062789,55.8503394 147.557325,55.1156892 147.650642,55.0678786 L147.832903,54.9757558 L147.852441,54.9757558 L147.852441,52.1310269 C147.853608,50.1961564 146.278002,48.6213229 144.342832,48.6213229 L144.342832,48.6213229 Z M148.878641,45.792628 L146.570785,45.792628 C146.545706,46.7150222 146.151732,47.5473342 145.52738,48.1452579 C147.248794,48.6565978 148.507413,50.2509637 148.507413,52.1356913 L148.507413,53.011441 C150.78669,52.9280641 152.100132,52.2826214 152.186742,52.2391837 L152.369003,52.1458948 L152.389416,52.1458948 L152.389416,49.3011659 C152.389416,47.3662954 150.814102,45.792628 148.878641,45.792628 L148.878641,45.792628 Z M138.369061,45.6057586 C138.905636,45.6057586 139.404593,45.4486251 139.827145,45.1821686 C139.961581,44.3064189 140.43225,43.5399922 141.102969,43.0184488 C141.105302,42.9674314 141.111134,42.9172886 141.111134,42.8648136 C141.111134,41.3514925 139.883136,40.1238686 138.369061,40.1238686 C136.855278,40.1238686 135.62728,41.3514925 135.62728,42.8648136 C135.62728,44.3781348 136.855278,45.6057586 138.369061,45.6057586 L138.369061,45.6057586 Z M140.832057,48.1452579 C140.211205,47.5496665 139.818105,46.7228934 139.789527,45.8051637 C139.704083,45.7993331 139.618639,45.792628 139.532321,45.792628 L137.206093,45.792628 C135.269466,45.792628 133.695318,47.3662954 133.695318,49.3011659 L133.695318,52.1458948 L133.702025,52.190207 L133.897992,52.2517194 C135.379989,52.7140826 136.702471,52.9271895 137.852025,52.9942409 L137.852025,52.1356913 C137.852025,50.2509637 139.110643,48.6565978 140.832057,48.1452579 L140.832057,48.1452579 Z\" id=\"multiple25-copy\" fill=\"#000000\" opacity=\"0.107684235\"></path> <path d=\"M27.786507,87.5126362 C28.6508593,88.054878 29.2571308,88.9714416 29.3673619,90.0363929 C29.7193435,90.2002316 30.1112765,90.2946866 30.5259557,90.2946866 C32.0400304,90.2946866 33.2677373,89.0682289 33.2677373,87.5549077 C33.2677373,86.0404204 32.0400304,84.8139627 30.5259557,84.8139627 C29.0258786,84.8139627 27.8092531,86.0185558 27.786507,87.5126362 L27.786507,87.5126362 Z M25.9898556,93.1245476 C27.5050967,93.1245476 28.7319288,91.8980899 28.7319288,90.3836026 C28.7319288,88.8702814 27.5050967,87.6438237 25.9898556,87.6438237 C24.4760725,87.6438237 23.2480739,88.8702814 23.2480739,90.3847687 C23.2480739,91.8980899 24.4760725,93.1245476 25.9898556,93.1245476 L25.9898556,93.1245476 Z M27.1531152,93.311417 L24.8268876,93.311417 C22.8914265,93.311417 21.3161123,94.8862505 21.3161123,96.821121 L21.3161123,99.6658499 L21.323986,99.7101621 L21.5199525,99.7716745 C23.3664704,100.348025 24.9715295,100.540433 26.2928455,100.540433 C28.8730714,100.540433 30.3676077,99.8057833 30.4609251,99.7579727 L30.6431857,99.6658499 L30.662724,99.6658499 L30.662724,96.821121 C30.6638905,94.8862505 29.0882846,93.311417 27.1531152,93.311417 L27.1531152,93.311417 Z M31.6889237,90.4827221 L29.3810679,90.4827221 C29.3559889,91.4051162 28.9620145,92.2374283 28.3376628,92.835352 C30.0590771,93.3466918 31.3176954,94.9410577 31.3176954,96.8257854 L31.3176954,97.7015351 C33.5969727,97.6181581 34.910415,96.9727155 34.9970253,96.9292778 L35.1792858,96.8359889 L35.199699,96.8359889 L35.199699,93.99126 C35.199699,92.0563895 33.6243847,90.4827221 31.6889237,90.4827221 L31.6889237,90.4827221 Z M21.179344,90.2958527 C21.715919,90.2958527 22.2148754,90.1387192 22.6374283,89.8722627 C22.7718636,88.996513 23.2425332,88.2300862 23.913252,87.7085429 C23.9155849,87.6575255 23.9214173,87.6073827 23.9214173,87.5549077 C23.9214173,86.0415865 22.6934187,84.8139627 21.179344,84.8139627 C19.6655609,84.8139627 18.4375624,86.0415865 18.4375624,87.5549077 C18.4375624,89.0682289 19.6655609,90.2958527 21.179344,90.2958527 L21.179344,90.2958527 Z M23.6423399,92.835352 C23.0214876,92.2397605 22.6283881,91.4129875 22.5998097,90.4952578 C22.5143659,90.4894272 22.4289222,90.4827221 22.3426036,90.4827221 L20.016376,90.4827221 C18.0797485,90.4827221 16.5056007,92.0563895 16.5056007,93.99126 L16.5056007,96.8359889 L16.5123079,96.8803011 L16.7082744,96.9418135 C18.1902713,97.4041767 19.5127537,97.6172836 20.6623073,97.684335 L20.6623073,96.8257854 C20.6623073,94.9410577 21.9209257,93.3466918 23.6423399,92.835352 L23.6423399,92.835352 Z\" id=\"multiple25-copy-2\" fill=\"#000000\" opacity=\"0.176072761\"></path> <g id=\"teacher17-copy-2\" opacity=\"0.394822761\" transform=\"translate(135.418508, 63.029630)\" fill-opacity=\"0.300000012\" fill=\"#000000\"> <path d=\"M6.61560398,3.1072366 C6.61560398,4.73079743 5.2988132,6.04980267 3.67140995,6.04980267 C2.0469509,6.04980267 0.730160118,4.73079743 0.730160118,3.1072366 C0.730160118,1.48367577 2.0469509,0.16761309 3.67140995,0.16761309 C5.2988132,0.16761309 6.61560398,1.48367577 6.61560398,3.1072366 L6.61560398,3.1072366 Z\" id=\"Fill-3\"></path> <path d=\"M7.33381664,12.2196279 L7.33381664,7.12299045 L4.74383262,6.4897163 L3.62283075,7.79106614 L2.5356871,6.4897163 L0.164138817,6.85165192 L0,12.2196281 L1.0091225,12.2196281 L1.05843775,13.1708126 L6.36534748,13.1708126 L6.63032495,8.01837937 L6.63032484,12.2196279 L7.33381664,12.2196279 Z\" id=\"Fill-4\"></path> </g> <g id=\"teacher17-copy-4\" opacity=\"0.394822761\" transform=\"translate(15.369571, 56.730545)\" fill-opacity=\"0.300000012\" fill=\"#000000\"> <path d=\"M6.61560398,3.1072366 C6.61560398,4.73079743 5.2988132,6.04980267 3.67140995,6.04980267 C2.0469509,6.04980267 0.730160118,4.73079743 0.730160118,3.1072366 C0.730160118,1.48367577 2.0469509,0.16761309 3.67140995,0.16761309 C5.2988132,0.16761309 6.61560398,1.48367577 6.61560398,3.1072366 L6.61560398,3.1072366 Z\" id=\"Fill-3\"></path> <path d=\"M7.33381664,12.2196279 L7.33381664,7.12299045 L4.74383262,6.4897163 L3.62283075,7.79106614 L2.5356871,6.4897163 L0.164138817,6.85165192 L0,12.2196281 L1.0091225,12.2196281 L1.05843775,13.1708126 L6.36534748,13.1708126 L6.63032495,8.01837937 L6.63032484,12.2196279 L7.33381664,12.2196279 Z\" id=\"Fill-4\"></path> </g> <g id=\"beaker5\" transform=\"translate(63.858182, 28.600000)\"> <mask id=\"mask-10\" fill=\"white\"> <use xlink:href=\"#path-9\"></use> </mask> <g id=\"Clip-2\"></g> <path d=\"M15.4613455,19.7275 C15.4613455,20.6209314 14.7506688,21.3477206 13.8767328,21.3477206 L1.58585891,21.3477206 C0.710676655,21.3477206 0,20.6209314 0,19.7275 C0,19.6401961 0.0158897455,19.5544853 0.0461114182,19.4735539 L4.30331695,8.06382353 C4.3045632,8.04502451 4.30705571,8.02654412 4.30954822,8.00901961 L4.30954822,1.47110294 L3.80699607,1.47110294 C3.42096873,1.47110294 3.10940509,1.15247549 3.10940509,0.758970588 C3.10940509,0.364509804 3.42096873,0.0458823529 3.80699607,0.0458823529 L5.00558138,0.0458823529 C5.39160873,0.0458823529 5.70317236,0.364509804 5.70317236,0.758970588 L5.70317236,8.06382353 C5.70317236,8.10492647 5.6994336,8.14602941 5.69320233,8.18585784 C5.69320233,8.27284314 5.67263913,8.38977941 5.64210589,8.47071078 L3.07793716,15.3438235 L12.3238996,15.3438235 L9.67436247,8.47835784 C9.64632175,8.4047549 9.62918575,8.32637255 9.62669324,8.2479902 L9.62077353,8.20433824 C9.61703476,8.1772549 9.61578851,8.14857843 9.61578851,8.11990196 L9.61578851,0.758970588 C9.61578851,0.364509804 9.92735215,0.0458823529 10.3133795,0.0458823529 L11.5437443,0.0458823529 C11.9294601,0.0458823529 12.2410237,0.364509804 12.2410237,0.758970588 C12.2410237,1.15247549 11.9294601,1.47110294 11.5437443,1.47110294 L11.0094127,1.47110294 L11.0094127,8.0564951 L15.4127415,19.4646324 C15.4442095,19.5481127 15.4613455,19.6376471 15.4613455,19.7275 L15.4613455,19.7275 Z M6.72915142,13.7554657 C6.72915142,13.8539216 6.80704233,13.9335784 6.90300393,13.9335784 C6.99927709,13.9335784 7.077168,13.8539216 7.077168,13.7554657 C7.077168,13.6573284 6.99927709,13.5776716 6.90300393,13.5776716 C6.80704233,13.5776716 6.72915142,13.6573284 6.72915142,13.7554657 L6.72915142,13.7554657 Z M8.37560216,12.8597168 C8.37560216,12.3678286 8.76842262,11.9655685 9.25149268,11.9655685 C9.73456274,11.9655685 10.1258182,12.3678286 10.1258182,12.8597168 C10.1258182,13.3532056 9.73456274,13.7554657 9.25149268,13.7554657 C8.76842262,13.7554657 8.37560216,13.3532056 8.37560216,12.8597168 L8.37560216,12.8597168 Z M8.95831193,12.8597168 C8.95831193,13.0240353 9.09081711,13.1574106 9.25149268,13.1574106 C9.41060323,13.1574106 9.54310841,13.0240353 9.54310841,12.8597168 C9.54310841,12.6948649 9.41060323,12.5614896 9.25149268,12.5614896 C9.09081711,12.5614896 8.95831193,12.6969989 8.95831193,12.8597168 L8.95831193,12.8597168 Z M6.23800408,10.1644531 C6.23800408,9.49809444 6.76890705,8.95722904 7.42049282,8.95722904 C8.07055739,8.95722904 8.60146036,9.49809444 8.60146036,10.1644531 C8.60146036,10.8308117 8.07055739,11.3737514 7.42049282,11.3737514 C6.76687876,11.3737514 6.23800408,10.8308117 6.23800408,10.1644531 L6.23800408,10.1644531 Z M6.80490906,10.1644531 C6.80490906,10.5108558 7.08024842,10.7924377 7.42049282,10.7924377 C7.75718773,10.7924377 8.03455537,10.5108558 8.03455537,10.1644531 C8.03455537,9.81805029 7.75718773,9.5364684 7.42049282,9.5364684 C7.08024842,9.5364684 6.80490906,9.81805029 6.80490906,10.1644531 L6.80490906,10.1644531 Z\" id=\"Fill-1\" fill=\"#00BAAA\" mask=\"url(#mask-10)\"></path> </g> </g> </g> </g> </svg> <p>...related to locations, employees, <span>departments, and job types</span></p> </div> </li> </ul> <span class=\"dismiss\" ss-icon=\"times\" ng-click=\"go.dismiss()\" ng-if=\"forceLoad !== \\'true\\'\"></span> </div> </div> ')\n}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-job-type-detail/job-type-detail.html\",'<article class=\"cmp-job-type-detail\" ss-pending=\"jobtypeDetail.isProcessing\"> <div class=\"warning-badge-group\" role=\"alert\" ng-if=\"jobtypeDetail.editMode && jobtypeDetail.isCurrent\"> <h4 class=\"warning-badge\" ss-icon=\"exclamation-circle\">Any changes will affect all active assignments using this Job Type. Overrides if any , will not be affected.</h4> </div> <header class=\"gd-row detail-header jobtype-header-bar\" ng-class=\"{\\'is-active\\': jobtypeDetail.isCurrent}\"> <div class=\"gd-row\"> <div class=\"gd-70p title-group jobtype-title-group\"> <div class=\"jobtype-title\"> <dl class=\"detail-dates\"> <dt class=\"start-date-label\" ng-class=\"{\\'is-hidden\\': jobtypeDetail.isPast}\"><b>Start Date: </b></dt> <dd class=\"start-date-value\" ng-if=\"!jobtypeDetail.editMode || vm.hasForeverPast\" ng-bind=\"vm.startDateTxt | date: \\'MM/dd/yyyy\\'\"></dd> <dd ng-if=\"jobtypeDetail.editMode && !vm.hasForeverPast\"> <super-input-datepicker label=\"\" model=\"vm.startDateTxt\" options=\"jobtypeDetail.dtOptions\" edit-mode=\"(jobtypeDetail.isFuture || jobtypeDetail.isCurrent)\" ss-validate=\"validation.required(vm.startDateTxt, \\'Start Date\\')\"></super-input-datepicker> </dd> <dt class=\"end-date-label\" ng-class=\"{\\'is-hidden\\': jobtypeDetail.isPast}\" ng-if=\"vm.endDateTxt\"><b>End Date: </b></dt> <dd class=\"end-date-value\" ng-if=\"vm.endDateTxt\" ng-class=\"{\\'show-separator\\' : jobtypeDetail.isPast}\">{{ vm.endDateTxt | date: \\'MM/dd/yyyy\\'}}</dd> </dl> <strong class=\"active-badge\" ng-if=\"jobtypeDetail.isCurrent\">active</strong> </div> </div> <div class=\"gd-30p control-group jobtype-control-group\" ng-if=\"!jobtypeDetail.isPast\" ng-cloak> <super-button ng-click=\"go.delete()\" ng-show=\"!jobtypeDetail.editMode && jobtypeDetail.isFuture\" label=\"Delete\"></super-button> <super-button ng-click=\"go.edit()\" ng-show=\"!jobtypeDetail.editMode\" label=\"Edit\"></super-button> <super-button ng-click=\"go.cancel()\" ng-show=\"jobtypeDetail.editMode\" label=\"Cancel\"></super-button> <super-button pri type=\"submit\" label=\"Save\" ng-show=\"jobtypeDetail.editMode\"></super-button> </div> </div> <button ng-if=\"jobtypeDetail.isFuture && jobtypeDetail.id !== 0\" type=\"button\" class=\"toggle-ctrl show-hide-jobtype-details {{ (jobtypeDetail.expanded) ? \\'fa-angle-up-after\\' : \\'fa-angle-down-after\\' }}\" ng-click=\"go.toggle()\"><span>{{ (jobtypeDetail.expanded) ? \\'Hide\\' : \\'Show\\' }} Details</span></button> </header> <div class=\"gd-row detail-content jobtype-details-data jobtype-details-{{ jobtypeDetail.id }}\" ng-show=\"jobtypeDetail.expanded\"> <ul class=\"detail-list\" ng-repeat=\"col in vm.cols\"> <li class=\"list-item\" ng-repeat=\"field in col\"> <div class=\"gd-75p detail-list-label\"> <label for=\"{{ field.prop }}\">{{ field.displayText }}<strong class=\"required-aria\" ng-if=\"jobtypeDetail.editMode\" aria-label=\"required\">*</strong></label> </div> <div class=\"gd-25p detail-list-value\" ss-validate=\"validation.minZero(jobtypeDetail[field.prop], field.displayText)\"> <super-input-text type=\"number\" model=\"jobtypeDetail[field.prop]\" id=\"{{ jobtypeDetail[field.prop] }}\" edit-mode=\"jobtypeDetail.editMode\"></super-input-text> </div> </li> </ul> </div> </article> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-manage-credentials/manage-credentials.html\",'<div class=\"cmp-manage-credentials\" ss-pending=\"vm.loading\"> <div class=\"issuer-panel gd-row\"> <div class=\"gd-80p\"> <super-select-list label=\"Issued By / Issuer\" model=\"vm.issuer\"> <super-select-list-item value=\"-1\" label=\"\\'None Defined\\'\" ng-if=\"!vm.issuers.length\"></super-select-list-item> <super-select-list-item ng-repeat=\"issuer in vm.issuers\" value=\"issuer\" label=\"issuer._name\"></super-select-list-item> </super-select-list> <div class=\"issuer-updated ellipsis\" ss-icon-before=\"info-circle\" ng-if=\"vm.issuers.length\" ng-bind=\"vm.updatedUtcTxt\"></div> </div> <div class=\"gd-20p\"> <super-button class=\"export right\" label=\"Export CSV\" ng-click=\"go.export()\" ng-if=\"vm.issuers.length\" ng-disabled=\"vm.loading\" ss-icon-after=\"angle-down\"> <item data-test=\"export-credentials-btn\" ng-click=\"go.exportCredentials()\">Export Credentials</item> <item data-test=\"export-subjects-btn\" ng-click=\"go.exportSubjects()\">Export Subjects</item> </super-button> </div> </div> <div class=\"search-panel\" ng-if=\"vm.issuers.length\"> <super-input-text ss-icon=\"search\" placeholder=\"Find Credentials\" model=\"vm.searchText._name\"></super-input-text> <super-button label=\"Add Credential\" ng-click=\"go.add()\" is-disabled=\"vm.isEditing.value\" ss-permitted=\"credentials.create\" ng-if=\"vm.canAddEdit\" data-test=\"add-credential\"></super-button> </div> <super-grid ss-pending=\"vm.loading\" ng-if=\"vm.issuers.length\"> <grid-header> <super-grid-column>Credential Name</super-grid-column> <super-grid-column width=\"80px\" ss-permitted=\"credentials.edit\" ng-if=\"vm.canAddEdit\">Actions</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-if=\"vm.newCred != null\" class=\"is-editing\" data-test=\"credential-rows\"> <cmp-add-edit-cred credential=\"vm.newCred\" org=\"org\" single-editing=\"vm.isEditing\" on-new-cancel=\"go.onNewCancel()\" on-add=\"go.onAdd($newCred)\" on-save=\"go.onSave()\" ng-if=\"vm.canAddEdit\"></cmp-add-edit-cred> </super-grid-row> <super-grid-row ng-repeat=\"cred in vm.creds | filter:vm.searchText\" ng-class=\"{\\'is-editing\\' : cred.isEditing}\" data-test=\"credential-rows\"> <cmp-add-edit-cred credential=\"cred\" org=\"org\" single-editing=\"vm.isEditing\" on-delete=\"go.onDelete($credential)\" on-save=\"go.onSave()\" ng-attr-data-test=\"{{$first && \\'first-credential\\' || undefined }}\"></cmp-add-edit-cred> </super-grid-row> <super-grid-row ng-if=\"!vm.creds.length\" data-test=\"credential-rows\"> <super-grid-cell> <super-input-text class=\"cred-name\" model=\"\\'No credentials were found with the chosen issuer.\\'\" edit-mode=\"false\"></super-input-text> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <cmp-manage-subjects ng-if=\"vm.issuers.length\" issuer=\"vm.issuer\" org=\"org\" single-editing=\"vm.isEditing\"></cmp-manage-subjects> </div>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-manage-issuers/manage-issuers.html\",'<div class=\"cmp-manage-issuers\"> <div class=\"search-panel\"> <super-input-text ss-icon=\"search\" placeholder=\"Find Issuer\" model=\"vm.searchText._name\"></super-input-text> <super-button label=\"Add Custom Issuer\" ng-click=\"go.add()\" is-disabled=\"vm.isEditing\" ss-permitted=\"credentials.create\" data-test=\"add-issuer\" ng-if=\"vm.canAddEdit\"></super-button> </div> <super-grid ss-pending=\"vm.loading\"> <grid-header> <super-grid-column>Credentialing Agency</super-grid-column> <super-grid-column width=\"100px\">Updated</super-grid-column> <super-grid-column width=\"80px\" ss-permitted=\"credentials.edit\" ng-if=\"vm.canAddEdit\">Actions</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-if=\"vm.newIssuer != null\" class=\"is-editing\" data-test=\"issuer-rows\"> <cmp-add-edit-issuer issuer=\"vm.newIssuer\" org=\"org\" single-editing=\"vm.isEditing\" on-new-cancel=\"go.onNewCancel()\" on-add=\"go.onAdd($newIssuer)\" on-save=\"go.onSave()\"></cmp-add-edit-issuer> </super-grid-row> <super-grid-row ng-repeat=\"item in vm.items | filter:vm.searchText\" ng-class=\"{\\'is-editing\\' : item.isEditing}\" data-test=\"issuer-rows\"> <cmp-add-edit-issuer issuer=\"item\" org=\"org\" single-editing=\"vm.isEditing\" on-delete=\"go.onDelete($issuer)\" on-save=\"go.onSave()\" ng-attr-data-test=\"{{$first && \\'first-issuer\\' || undefined }}\"></cmp-add-edit-issuer> </super-grid-row> <super-grid-row ng-if=\"!vm.items.length\" data-test=\"issuer-rows\"> <super-grid-cell> <super-input-text model=\"\\'No issuers were found.\\'\" edit-mode=\"false\"></super-input-text> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-manage-subjects/manage-subjects.html\",'<div class=\"cmp-manage-subjects\"> <div class=\"search-panel\"> <super-input-text ss-icon=\"search\" placeholder=\"Find Subjects\" model=\"vm.searchText._name\"></super-input-text> <super-button label=\"Add Subject\" ng-click=\"go.add()\" is-disabled=\"singleEditing.value\" ss-permitted=\"credentials.create\" data-test=\"add-subject\" ng-if=\"vm.canAddEdit\"></super-button> </div> <super-grid ss-pending=\"vm.loading\"> <grid-header> <super-grid-column>Subject Name</super-grid-column> <super-grid-column width=\"100px\">Updated</super-grid-column> <super-grid-column width=\"80px\" ss-permitted=\"credentials.edit\" ng-if=\"vm.canAddEdit\">Actions</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-if=\"vm.newSubject != null\" class=\"is-editing\" data-test=\"subject-rows\"> <cmp-add-edit-subject subject=\"vm.newSubject\" org=\"org\" single-editing=\"singleEditing\" on-new-cancel=\"go.onNewCancel()\" on-add=\"go.onAdd($newSubject)\" on-save=\"go.onSave()\"></cmp-add-edit-subject> </super-grid-row> <super-grid-row ng-repeat=\"subject in vm.subjects | filter:vm.searchText\" ng-class=\"{\\'is-editing\\' : subject.isEditing}\" data-test=\"subject-rows\"> <cmp-add-edit-subject subject=\"subject\" org=\"org\" single-editing=\"singleEditing\" on-delete=\"go.onDelete($subject)\" on-save=\"go.onSave()\" ng-attr-data-test=\"{{$first && \\'first-subject\\' || undefined }}\"></cmp-add-edit-subject> </super-grid-row> <super-grid-row ng-if=\"!vm.subjects.length\" data-test=\"subject-rows\"> <super-grid-cell> <super-input-text class=\"subject-name\" model=\"\\'No subjects were found with the chosen issuer.\\'\" edit-mode=\"false\"></super-input-text> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-nav-list/nav-list.html\",'<nav class=\"cmp-nav-list\"> <ul ng-transclude></ul> </nav>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-nav-list-item/nav-list-item.html\",'<li class=\"cmp-nav-list-item\"> <a ui-sref=\"{{link}}\" ui-sref-active=\"active\" ng-bind=\"label\" title=\"{{label}}\"></a> </li> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-pay-schedule/pay-schedule.html\",'<article class=\"cmp-pay-schedule\"> <div class=\"warning-badge-group\" ng-if=\"schedule.isCurrent && schedule.isEditing\" role=\"alert\"> <h4 class=\"warning-badge\" ss-icon=\"exclamation-circle\">This is an active Pay Schedule. Any changes will affect all active assignments using this Job Type.</h4> </div> <header class=\"gd-row detail-header\" ng-class=\"{\\'is-active\\': schedule.isCurrent}\"> <div class=\"gd-70p title-group pay-schedule-title-group\"> <div class=\"pay-schedule-title\"> <super-input-text edit-mode=\"schedule.isEditing\" model=\"schedule._name\" ss-validate=\"vm.validation.required(schedule._name, \\'pay schedule name\\')\">Enter Pay Schedule Name...</super-input-text> <strong class=\"active-badge\" ng-if=\"schedule.isCurrent\">active</strong> </div> </div> <div class=\"gd-30p control-group pay-schedule-control-group\"> <super-button label=\"Delete\" ng-if=\"schedule.isFuture && !schedule.isEditing\" ng-click=\"go.removePaySchedule(schedule)\" label=\"Edit\"></super-button> <super-button label=\"Edit\" ng-if=\"!schedule.isEditing && !schedule.isPast\" ng-click=\"go.editSchedule(schedule)\"></super-button> <super-button label=\"Cancel\" ng-if=\"schedule.isEditing\" ng-click=\"go.cancelEditSchedule(schedule)\"></super-button> <super-button pri type=\"submit\" label=\"Save\" ng-if=\"schedule.isEditing\"></super-button> </div> </header> <div class=\"detail-content\"> <div class=\"pay-schedule-meta-group\"> <div class=\"gd-row ps-meta-row\"> <div class=\"gd-row ps-meta-row-item ps-start-date\"> <div> <super-input-datepicker label=\"Start Date\" edit-mode=\"schedule.isEditing\" id=\"startDate-{{schedule.id}}\" model=\"vm.fromDateUtc\" options=\"{format: \\'MM/DD/YYYY\\', minDate: schedule.dtOptions.minDate}\" required=\"true\" ss-validate=\"vm.validation.required(vm.fromDateUtc, \\'Date\\')\"></super-input-datepicker> </div> </div> <div ng-if=\"schedule.showEndDate\" class=\"ps-meta-row-item ps-end-date\"> <div> <dl> <dt ng-if=\"schedule.showEndDate\" for=\"endDate-{{schedule.id}}\">End Date:</dt> <dd class=\"end-date-value\" ng-if=\"schedule.showEndDate\" ng-bind=\"vm.toDateUtc | date: \\'MM/dd/yyyy\\'\"></dd> </dl> </div> </div> <div class=\"ps-meta-row-item ps-external-id\"> <super-input-text label=\"External ID: \" id=\"externalId-{{schedule.id}}\" edit-mode=\"schedule.isEditing\" model=\"schedule._externalId\" required=\"true\" ss-validate=\"vm.validation.required(schedule._externalId, \\'Extenal ID\\')\"></super-input-text> </div> <div class=\"ps-meta-row-item ps-pay-type\"> <super-select-list label=\"Pay Type:\" edit-mode=\"schedule.isEditing\" model=\"schedule._payRateFrequency\" aria-controls=\"stepDataType{{$id}}\" ss-validate=\"vm.validation.required(schedule._payRateFrequency, \\'Pay Type\\')\"> <super-select-list-item ng-repeat=\"option in vm.payRateOptions\" label=\"option.name\" value=\"option.value\"></super-select-list-item> </super-select-list> </div> <div class=\"ps-meta-row-item ps-grid-control\"> <div class=\"add-ctrl-container-group\"> <div class=\"add-ctrl-group\" ng-class=\"{\\'show-controls\\': schedule.isEditing}\"> <label><strong>Lanes: </strong><span id=\"laneCount{{$id}}\" ng-bind=\"schedule._payLanes.length\"></span></label> <span class=\"add-ctrl\" ng-if=\"schedule.isEditing\"> <button type=\"button\" ss-icon=\"caret-up\" ng-click=\"go.addLane(schedule)\" aria-label=\"add lane\" aria-controls=\"laneCount{{$id}}\"></button> <button type=\"button\" ss-icon=\"caret-down\" ng-click=\"go.removeLane(schedule)\" aria-label=\"remove lane\" aria-controls=\"laneCount{{$id}}\"></button> </span> </div> <div class=\"add-ctrl-group\" ng-class=\"{\\'show-controls\\': schedule.isEditing}\"> <label><strong>Steps: </strong><span id=\"stepCount{{$id}}\" ng-bind=\"schedule._payLanes[0].paySteps.length\"></span></label> <span class=\"add-ctrl\" ng-if=\"schedule.isEditing\"> <button type=\"button\" ss-icon=\"caret-up\" ng-click=\"go.addStep(schedule)\" aria-label=\"add step\" aria-controls=\"stepCount{{$id}}\"></button> <button type=\"button\" ss-icon=\"caret-down\" ng-click=\"go.removeStep(schedule)\" aria-label=\"remove step\" aria-controls=\"stepCount{{$id}}\"></button> </span> </div> </div> </div> </div> </div> <div class=\"gd-row pay-schedule-grid\" ng-class=\"{\\'{{schedule.id}}\\' : schedule.id}\"> <div class=\"gd-row grid-control-group\"> <div class=\"gd-50p\"> <button type=\"button\" class=\"toggle-ctrl grid-toggle\" ss-icon-after=\"{{schedule.showDetails === false ? \\'angle-down\\': \\'angle-up\\'}}\" ng-click=\"schedule.showDetails = !schedule.showDetails\">{{schedule.showDetails === false ? \\'Show\\' : \\'Hide\\'}} Details</button> </div> </div> <div ng-show=\"schedule.showDetails\"> <div ng-if=\"schedule._payLanes.length >= 51 || schedule._payLanes[0].paySteps.length >= 51\" class=\"message\" ss-icon-before=\"info-circle\">{{ vm.messages.performanceWarning }}</div> <div class=\"grid-col grid-step-names\" ng-class=\"{\\'edit-margin-adjust\\': schedule.isEditing}\"> <ul> <li class=\"grid-cell\" ng-repeat=\"step in schedule._payLanes[0].paySteps\"> <super-input-text edit-mode=\"schedule.isEditing\" model=\"step.name\" ss-validate=\"vm.validation.required(step.name, \\'Step Name\\')\"> </super-input-text> </li> </ul> </div> <div id=\"grid-values-{{schedule.id ? schedule.id : \\'00000\\'}}\" class=\"grid-col grid-step-values\"> <ul ng-style=\"go.calculateWidth(schedule)\"> <li class=\"grid-col lane-{{$index}}\" ng-repeat=\"lane in schedule._payLanes\" ng-style=\"schedule.colStyles\"> <div class=\"grid-cell grid-lane-header\"> <super-input-text edit-mode=\"schedule.isEditing\" model=\"lane.name\" ss-validate=\"vm.validation.required(lane.name, \\'Lane name\\')\"></super-input-text> </div> <div class=\"grid-cell\" ng-repeat=\"step in lane.paySteps\"> <super-input-text edit-mode=\"schedule.isEditing\" model=\"step.payRate\" ss-validate=\"vm.validation.minZero(step.payRate, \\'pay rate\\')\"></super-input-text> </div> </li> </ul> </div> </div> </div> </div></article> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-profile-table/profile-table.html\",'<div class=\"cmp-profile-table\"> <h4 ng-bind=\"registration.description\" ss-toggle=\"content\" ss-toggle-start-expanded></h4> <div class=\"content\"> <div class=\"gd-row major-actions\"> <div class=\"gd-30p\"><h5>Major Actions</h5></div> <div class=\"gd-70p\"> <ul class=\"permission-action-list\"> <li class=\"gd-row\" ng-repeat=\"action in vm.actions | orderBy: \\'name\\'\" ng-disabled=\"go.shouldDimTheAction(action)\"> <ul class=\"permission-item-list\"> <li ng-style=\"{\\'width\\': \\'calc(99.99% / {{vm.totalColumns}})\\'}\" ng-repeat=\"p in permissions\"> <super-input-checkbox ng-if=\"vm.editMode\" is-disabled=\"go.shouldDimTheAction(action)\" model=\"vm.selectedActions[action.id]\" label=\"Can {{action.name}}\"></super-input-checkbox> <span ng-if=\"!vm.editMode\" title=\"{{p[action.id] ? \\'Can\\' : \\'Cannot\\'}} {{action.name}}\">{{p[action.id] ? \\'Can\\' : \\'Cannot\\'}} {{action.name}}</span> <span class=\"popover-for-disabled-action\" ss-tool-tip=\"This is disabled since View-Self profiles work best when administrative-like permissions are not configured.\" ng-show=\"go.shouldDimTheAction(action)\"> <span ss-icon=\"question-circle\"></span> </span> </li> </ul> </li> </ul> </div> </div> <div class=\"property gd-row\" ng-class=\"{dim: !vm.editMode && dimMatching === true && go.isDim(row)}\" ng-repeat=\"row in vm.properties\"> <div class=\"gd-30p\"><b class=\"name\" title=\"{{row.name}}\" ng-bind=\"row.name\"></b></div> <div class=\"gd-70p\"> <ul class=\"permission-item-list\"> <li ng-style=\"{\\'width\\': \\'calc(99.99% / {{vm.totalColumns}})\\'}\" ng-repeat=\"p in permissions\"> <super-select-list ng-if=\"vm.editMode && $first\" model=\"p[row.id].value\" ng-click=\"go.triggerChange()\"> <super-select-list-item ng-repeat=\"option in row.actions\" value=\"option.value\" label=\"option.label\" cy-test=\"{{option.name}}\" is-disabled=\"option.disableDueToViewSelf\"></super-select-list-item> </super-select-list> <span class=\"permission-value-label\" ng-if=\"!vm.editMode || !$first\">{{ go.calculateLabel(p, row.id) }}</span> </li> </ul> </div> </div> <cmp-profile-table permissions=\"p.permissions\" registration=\"p.registration\" dim-matching=\"dimMatching\" ng-repeat=\"p in vm.permissions\"></cmp-profile-table> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-protected-resource/protected-resource.html\",'<div class=\"cmp-protected-resource\"> <h4 ng-bind=\"resource.resourceName\"></h4> <ul class=\"properties\"> <li ng-repeat=\"prop in resource.properties\" ng-bind=\"prop.propertyName\"></li> </ul> <ul class=\"nested-resources\"> <li ng-repeat=\"res in resource.nestedResources\"> <cmp-protected-resource resource=\"res\"></cmp-protected-resource> </li> </ul> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-security-scope/security-scope.html\",'<div class=\"cmp-security-scope\" ss-pending=\"vm.isSaving\"> <div class=\"content\"> <div class=\"actions\" ss-permitted=\"permissionProfiles.edit\" ng-if=\"!model._autoCreated || model._autoCreated && group._appliesToAllEmployees\"> <super-button class=\"edit-profile\" ng-if=\"!vm.editMode\" label=\"Edit\" ng-click=\"go.edit()\"></super-button> </div> <form novalidate id=\"security-scope-form\" ss-validate-form ng-submit=\"go.save()\"> <fieldset class=\"group actions\" ss-permitted=\"permissionProfiles.edit\"> <super-button smp label=\"Remove Profile & Scope\" class=\"remove-profile\" ng-click=\"go.remove()\" ng-if=\"vm.editMode && model.id && !model._autoCreated\"></super-button> <super-button class=\"cancel-profile\" ng-if=\"vm.editMode\" label=\"Cancel\" ng-click=\"go.cancel()\"></super-button> <super-button class=\"save-profile\" pri type=\"submit\" ng-if=\"vm.editMode\" label=\"Save\"></super-button> </fieldset> <fieldset class=\"group permission-profile-group\"> <div class=\"gd-row\"> <div class=\"gd-25p left-col\"><h5 ss-icon=\"key\">Permission Profile</h5></div> <div class=\"gd-35p profile-selector-group\"> <em>...can see and edit items...</em> <button type=\"button\" ss-menu=\"profiles-menu\" class=\"profile-selector\" ng-disabled=\"model._autoCreated || !vm.editMode\" ss-icon-after=\"angle-down\" ss-validate=\"go.validateProfile(vm.intended.profile)\" ng-click=\"go.validateProfile(vm.intended.profile)\"> <label ng-bind=\"vm.intended.profile._permissionProfileName || \\'Select a profile\\'\"></label> <small class=\"profile-description\" ng-bind=\"vm.intended.profile._permissionProfileDescription\"></small> </button> <div class=\"select-menu profiles-menu\"> <ul class=\"menulist select-menu-list\"> <li class=\"select-menu-list-item\" ng-if=\"profile.id !== vm.intended.profile.id\" ng-repeat=\"profile in vm.profileOptions | orderBy:\\'_permissionProfileName\\'\" ng-click=\"go.selectProfile(profile)\" data-id=\"{{profile.id}}\"> <p class=\"active-state-link\" ng-bind=\"profile._permissionProfileName\"></p> <small class=\"profile-description\" ng-bind=\"profile._permissionProfileDescription\"></small> </li> </ul> </div> </div> </div> </fieldset> <hr class=\"divider\"> <fieldset class=\"group scope-of-control-group\"> <div class=\"gd-row\"> <div class=\"gd-25p left-col\"><h5 ss-icon=\"dot-circle-o\">Scope of Control</h5></div> <div class=\"gd-75p right-col\"><em>...related to locations, departments, job type &amp; employee</em></div> </div> <div class=\"gd-row scope\" data-test=\"locations-in-scope\"> <div class=\"gd-25p left-col\">Locations in scope:</div> <div class=\"gd-75p right-col\"> <div class=\"gd-row\"> <div class=\"gd-50p\" ng-if=\"!vm.editMode\" ng-bind=\"vm.locationScope\"></div> <div class=\"gd-50p\" ng-if=\"vm.editMode\"> <super-select-list model=\"vm.intended.locationAdministrationContext\"> <super-select-list-item ng-repeat=\"o in vm.locationSecurityGroupScope | orderBy:\\'name\\'\" value=\"o.value\" label=\"o.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-50p\" ng-if=\"vm.editMode && vm.intended.locationAdministrationContext === 2\"> <super-multi-filter-list display=\"tags\" selected=\"vm.selectedLocations\"> <super-multi-filter-list-item ng-repeat=\"location in vm.locations | orderBy:\\'_name\\'\" option=\"location\"></super-multi-filter-list-item> </super-multi-filter-list> </div> </div> </div> </div> <div class=\"gd-row scope\" data-test=\"departments-in-scope\"> <div class=\"gd-25p left-col\">Departments in scope:</div> <div class=\"gd-75p right-col\"> <div class=\"gd-row\"> <div class=\"gd-50p\" ng-if=\"!vm.editMode\" ng-bind=\"vm.departmentScope\"></div> <div class=\"gd-50p\"> <super-select-list ng-if=\"vm.editMode\" model=\"vm.intended.departmentAdministrationContext\"> <super-select-list-item ng-repeat=\"o in vm.departmentSecurityGroupScope | orderBy:\\'name\\'\" value=\"o.value\" label=\"o.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-50p\" ng-if=\"vm.editMode && vm.intended.departmentAdministrationContext === 2\"> <super-multi-filter-list display=\"tags\" selected=\"vm.selectedDepartments\"> <super-multi-filter-list-item ng-repeat=\"department in vm.departments | orderBy:\\'_name\\'\" option=\"department\"></super-multi-filter-list-item> </super-multi-filter-list> </div> </div> </div> </div> <div class=\"gd-row scope\" data-test=\"jobtypes-in-scope\"> <div class=\"gd-25p left-col\">Job Types in scope:</div> <div class=\"gd-75p right-col\"> <div class=\"gd-row\"> <div class=\"gd-50p\" ng-if=\"!vm.editMode\" ng-bind=\"vm.jobTypeScope\"></div> <div class=\"gd-50p\"> <super-select-list ng-if=\"vm.editMode\" model=\"vm.intended.jobTypeAdministrationContext\"> <super-select-list-item ng-repeat=\"o in vm.jobTypeSecurityGroupScope | orderBy:\\'name\\'\" value=\"o.value\" label=\"o.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-50p\" ng-if=\"vm.editMode && vm.intended.jobTypeAdministrationContext === 2\"> <super-multi-filter-list display=\"tags\" selected=\"vm.selectedJobTypes\"> <super-multi-filter-list-item ng-repeat=\"jobType in vm.jobTypes | orderBy:\\'_name\\'\" option=\"jobType\"></super-multi-filter-list-item> </super-multi-filter-list> </div> </div> </div> </div> <div class=\"gd-row scope\" data-test=\"employees-in-scope\"> <div class=\"gd-25p left-col\">Employees in scope:</div> <div class=\"gd-75p right-col\"> <div class=\"gd-row\"> <div class=\"gd-50p\" ng-if=\"!vm.editMode\" ng-bind=\"vm.employeeScope\"></div> <div class=\"gd-50p\"> <super-select-list ng-if=\"vm.editMode\" model=\"vm.intended.employeeAdministrationContext\"> <super-select-list-item ng-repeat=\"o in vm.employeeSecurityGroupScope | orderBy:\\'name\\'\" value=\"o.value\" label=\"o.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-50p\" ng-if=\"vm.editMode && vm.intended.employeeAdministrationContext === 2\"> <super-employee-search model=\"vm.selectedEmployees\" use-pill=\"true\" placeholder=\"Find by name\"></super-employee-search> </div> </div> </div> </div> </fieldset> </form> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-tag/tag.html\",'<div class=\"cmp-tag {{vm.classes}}\" ng-click=\"go.click()\"><span ss-icon=\"{{vm.iconType}}\"></span> <span class=\"text\">{{vm.label}}</span></div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-user-access-return/user-access-return.html\",'<div class=\"cmp-user-access-return\"> <div class=\"box\"> <div class=\"item icon\"><i ss-icon=\"li-pencil-ruler\"></i></div> <div class=\"item message\"> We are improving how you manage application access for your users. During this transition, you can continue to use this page but the <em>classic Application Access will soon be discontinued</em>. </div> <div class=\"item link-box\"> <super-button label=\"Back to New\" title=\"Return to Manage User Access\" pri ng-click=\"go.returnToSAAP()\"></super-button> </div> </div> </div>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/general-config.html\",'<route folder=\"/general-config\"> <div class=\"route-wrapper\"> <h1>General Configuration</h1> <p ng-show=\"routeVm.isHRMSEnabled && routeVm.HRMSmessage\"><strong>Note: </strong>{{routeVm.HRMSmessage}}</p> <segment name=\"sidebar\"></segment> <segment name=\"content\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/index/index.html\",\" \")}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/permissions.html\",'<route folder=\"/permissions\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/user-accounts/user-accounts.html\",'<route folder=\"/user-accounts\"> <cmp-user-access-return ng-if=\"$root.feature.featureEnableAppAccessLinkBacks\"></cmp-user-access-return> <div class=\"route-wrapper\"> <header> <h1>Application Access</h1> </header> <segment name=\"content\" ng-if=\"$root.feature.featureEnableAppAccessV2\"></segment> <segment name=\"content-old\" ng-if=\"!$root.feature.featureEnableAppAccessV2\"></segment> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/credentials/credentials.html\",'<route folder=\"/general-config/credentials\"> <segment name=\"credential-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/departments/departments.html\",'<route folder=\"/general-config/departments\"> <segment name=\"departments-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/drivers-license/drivers-license.html\",'<route folder=\"/general-config/drivers-license\"> <segment name=\"drivers-license-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/employment-groups/employment-groups.html\",'<route folder=\"/general-config/employment-groups\"> <segment name=\"employment-groups\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/job-types/job-types.html\",'<route folder=\"/general-config/job-types\"> <div ng-if=\"\\'base.generalConfig.jobTypes\\' | isState\"> <segment name=\"job-types-content\"></segment> </div> <ui-view></ui-view> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/locations/locations.html\",'<route folder=\"/general-config/locations\"> <segment name=\"locations-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/positions/positions.html\",'<route folder=\"/general-config/positions\"> <segment name=\"positions-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/segment-content/content.html\",'<div class=\"segment-general-config-content gd-80p\"> <ui-view></ui-view> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/segment-sidebar/sidebar.html\",'<div class=\"segment-general-config-sidebar gd-20p\"> <cmp-nav-list> <cmp-nav-list-item ng-repeat=\"tab in vm.tabs | filter: go.tabFilter | orderBy : tab.label\" link=\"{{tab.link}}\" label=\"{{tab.label}}\"> </cmp-nav-list-item> </cmp-nav-list> </div>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/signatures/signatures.html\",'<route folder=\"/general-config/signatures\"> <segment name=\"signatures-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/status-reasons/status-reasons.html\",'<route folder=\"/general-config/status-reasons\"> <segment name=\"status-reasons-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){\ne=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/groups.html\",'<route folder=\"/permissions/groups\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profiles.html\",'<route folder=\"/permissions/profiles\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/segment-content/content.html\",'<div class=\"segment-permissions-content\"> <ui-view></ui-view> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/segment-header/header.html\",'<div class=\"segment-permissions-header\"> <h1>Permissions</h1> <div class=\"header-menu\"> <super-tab-list class=\"flat\"> <super-tab-list-item label=\"Groups\" state=\"base.permissions.groups\"></super-tab-list-item> <super-tab-list-item label=\"Users\" state=\"base.permissions.users\"></super-tab-list-item> <super-tab-list-item label=\"Permission Profiles\" state=\"base.permissions.profiles\"></super-tab-list-item> </super-tab-list> <div class=\"section-meta\"> Understanding Permissions <span ss-icon=\"info-circle\" ng-click=\"go.showGraphic()\"></span> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/users/users.html\",'<route folder=\"/permissions/users\"> <ui-view></ui-view> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/user-accounts/segment-content/content.html\",'<div class=\"segment-user-accounts-content\"> <div class=\"gd-row forms-list-filter-group\"> <div class=\"forms-list-filter-tabs\"> <ul> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'all\\'}\" ng-click=\"go.filterResults(\\'all\\')\">All Users<span class=\"count-display filter-count\" ng-bind=\"vm.totalCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'active\\'}\" ng-click=\"go.filterResults(\\'active\\')\">Access Granted<span class=\"count-display filter-count\" ng-bind=\"vm.activeCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'inactive\\'}\" ng-click=\"go.filterResults(\\'inactive\\')\">Paused<span class=\"count-display filter-count\" ng-bind=\"vm.inactiveCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'sent\\'}\" ng-click=\"go.filterResults(\\'sent\\')\">Invitation Sent<span class=\"count-display filter-count\" ng-bind=\"vm.sentCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'noAccess\\'}\" ng-click=\"go.filterResults(\\'no-access\\')\">No Access<span class=\"count-display filter-count\" ng-bind=\"vm.noAccessCount\"></span></li> </ul> </div> </div> <div class=\"super-filter-bar\"> <div class=\"content\" ng-if=\"vm.allSelected.length <= 0\"> <div class=\"search\"> <super-input-text ss-icon=\"search\" model=\"vm.search\" placeholder=\"Find User\" is-disabled=\"vm.loading\"></super-input-text> </div> <div class=\"user-count\"> <span ng-bind=\"filtered.length\"></span>&nbsp;<ng-pluralize count=\"filtered.length\" when=\"{\\'1\\': \\'user\\',\\'other\\': \\'users\\'}\"></ng-pluralize> </div> </div> <div class=\"content bulk-action-content\" ng-if=\"vm.allSelected.length > 0\"> <div class=\"bulk-action-menu\"> <super-button label=\"Actions\" ss-icon-after=\"angle-down\"> <item ng-if=\"vm.hasOrgLevelAccess\" ng-click=\"go.sendMultiple()\">Send Invitation</item> <item ng-if=\"vm.hasAppLevelAccess\" ng-click=\"go.deactivateMultiple()\">Pause Access</item> <item ng-if=\"vm.hasAppLevelAccess\" ng-click=\"go.activateMultiple()\">Resume Access</item> </super-button> </div> <div class=\"user-count\"> <span ng-bind=\"vm.allSelected.length\"></span>&nbsp;<ng-pluralize count=\"vm.allSelected.length\" when=\"{\\'1\\': \\'user\\',\\'other\\': \\'users\\'}\"></ng-pluralize>&nbsp;selected </div> <div class=\"filter-selected\"> <super-input-checkbox model=\"vm.filterSelected\" label=\"only show selected\" is-disabled=\"vm.allSelected.length === vm.categoryTotal\"></super-input-checkbox> </div> <div class=\"clear-selected\"> <button ng-click=\"go.clearAll()\">Clear All</button> </div> <div class=\"search\"> <super-input-text ss-icon=\"search\" model=\"vm.search\" placeholder=\"Find User\"></super-input-text> </div> </div> </div> <super-grid sortable=\"vm.emps\" default-sort=\"_lastName\" ss-pending=\"vm.loading\" ss-pending-status=\"vm.loadingStatus\"> <grid-header> <super-grid-column width=\"4%\"><super-input-checkbox ng-if=\"vm.hasAppLevelAccess || vm.hasOrgLevelAccess\" model=\"vm.selectedAll\" ng-click=\"go.selectAll()\"></super-input-checkbox></super-grid-column> <super-grid-column width=\"20%\" sort-by=\"_lastName\">User</super-grid-column> <super-grid-column width=\"30%\">Invitation Email Address</super-grid-column> <super-grid-column width=\"31%\">Account Status</super-grid-column> <super-grid-column width=\"15%\">Credentials</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"emp in vm.emps | filter: { isVisible : true } | limitTo: vm.initalLimit\" selected-value=\"emp\"> <super-grid-cell class=\"checkbox-cell\"> <super-input-checkbox ng-if=\"vm.hasAppLevelAccess || vm.hasOrgLevelAccess\" model=\"emp.$selected\" ng-click=\"go.selectOne(emp)\"></super-input-checkbox> </super-grid-cell> <super-grid-cell class=\"user-cell\"> <a href=\"/ec-employee/record/{{emp.id}}\" ng-bind=\"::emp.displayName\"></a> </super-grid-cell> <super-grid-cell class=\"email-cell\"> <form ng-submit=\"go.saveEmail(emp)\" ss-validate-form> <div class=\"gd-80p\"> <super-input-text id=\"emp-{{$index}}\" model=\"emp._flUser.invitationEmailAddress\" edit-mode=\"emp.editMode\" ss-validate=\"validation.email(emp._flUser.invitationEmailAddress, \\'E-Mail Address\\')\"></super-input-text> </div> <div class=\"gd-20p grid-actions\"> <span ng-if=\"!emp.editMode && !emp.flId\"> <button type=\"button\" ng-if=\"emp._flUser.invitationEmailAddress\" ng-click=\"go.editModeOn(emp, \\'emp-\\' + $index)\" ss-permitted=\"users.manageApplicationAccessEC\">Edit</button> <button type=\"button\" ng-if=\"!emp._flUser.invitationEmailAddress\" ng-click=\"go.editModeOn(emp, \\'emp-\\' + $index)\" ss-permitted=\"users.manageApplicationAccessEC\">Add</button> </span> <span ng-if=\"emp.editMode\"> <button ss-icon=\"check\" type=\"submit\" title=\"Save\"></button> <button type=\"button\" ng-click=\"go.cancelEdit(emp)\" ss-icon=\"times\" title=\"Cancel\"></button> </span> </div> </form> </super-grid-cell> <super-grid-cell class=\"status-cell\"> <div class=\"status-no-access\" ng-if=\"emp.flStatus === vm.inviteStatus.noAccess\"> <div class=\"gd-50p\"> <span>(No Access)</span> </div> <div ng-if=\"emp._flUser.invitationEmailAddress || !emp._flUser.invitationEmailAddress && emp.editMode\" class=\"gd-50p grid-actions\"> <button ng-click=\"go.invite(emp)\" ng-disabled=\"emp.editMode\" ss-permitted=\"users.manageOrganizationAccess\">Send Invitation</button> </div> <div ng-if=\"!emp._flUser.invitationEmailAddress && !emp.editMode\" class=\"50p grid-actions\"> <span ss-icon=\"exclamation-circle\">No Email Address</span> </div> </div> <div class=\"status-sent\" ng-if=\"emp.flStatus === vm.inviteStatus.sent\"> <div class=\"gd-50p\" ss-icon=\"circle\"> <super-popover link=\"Invitation sent\" ss-icon-after=\"calendar\" ng-click=\"go.showInvitationStatus(emp)\"> <div ng-bind-html=\"vm.invitationHtml\"></div> </super-popover> </div> <div class=\"gd-50p grid-actions\"> <button ng-click=\"go.invite(emp)\" ng-disabled=\"emp.editMode\" ss-permitted=\"users.manageOrganizationAccess\">Resend Invitation</button> </div> </div> <div class=\"status-active\" ng-if=\"emp.flStatus === vm.inviteStatus.active\"> <div class=\"gd-50p\"><span ss-icon=\"circle\">Access Granted</span></div> <div class=\"gd-50p grid-actions\"> <ul class=\"ss-pipe-children\"> <li ss-permitted=\"users.manageApplicationAccessEC\"><button ng-click=\"go.deactivate(emp)\">Pause Access</button></li> <li ss-permitted=\"users.manageOrganizationAccess\"><button ng-click=\"go.revoke(emp)\">Revoke</button></li> </ul> </div> </div> <div class=\"status-inactive\" ng-if=\"emp.flStatus === vm.inviteStatus.inactive\"> <div class=\"gd-50p\"><span ss-icon=\"circle\">Access Paused</span></div> <div class=\"gd-50p grid-actions\"> <ul class=\"ss-pipe-children\"> <li ss-permitted=\"users.manageApplicationAccessEC\"><button ng-click=\"go.activate(emp)\">Resume Access</button></li> <li ss-permitted=\"users.manageOrganizationAccess\"><button ng-click=\"go.revoke(emp)\">Revoke</button></li> </ul> </div> </div> </super-grid-cell> <super-grid-cell class=\"creds-cell\"> <super-popover link=\"View credentials\" ss-icon=\"eye\" ng-if=\"emp.flId != null\" ng-click=\"go.showCredentials(emp)\"> <div ss-pending=\"vm.loadingCredentials\" ng-bind-html=\"vm.credentialHtml\"></div> </super-popover> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <div infinite-scroll=\"go.loadNext()\" infinite-scroll-distance=\"2\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/user-accounts/segment-content-old/content-old.html\",'<div class=\"segment-user-accounts-content-old\"> <div class=\"gd-row forms-list-filter-group\"> <div class=\"forms-list-filter-tabs\"> <ul> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'all\\'}\" ng-click=\"go.filterResults(\\'all\\')\">All Users<span class=\"count-display filter-count\" ng-bind=\"vm.totalCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'active\\'}\" ng-click=\"go.filterResults(\\'active\\')\">Access Granted<span class=\"count-display filter-count\" ng-bind=\"vm.activeCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'inactive\\'}\" ng-click=\"go.filterResults(\\'inactive\\')\">Paused<span class=\"count-display filter-count\" ng-bind=\"vm.inactiveCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'sent\\'}\" ng-click=\"go.filterResults(\\'sent\\')\">Invitation Sent<span class=\"count-display filter-count\" ng-bind=\"vm.sentCount\"></span></li> <li ng-class=\"{\\'active-filter\\': vm.selectedFilter === \\'noAccess\\'}\" ng-click=\"go.filterResults(\\'no-access\\')\">No Access<span class=\"count-display filter-count\" ng-bind=\"vm.noAccessCount\"></span></li> </ul> </div> </div> <div class=\"super-filter-bar\"> <div class=\"content\" ng-if=\"vm.allSelected.length <= 0\"> <div class=\"search\"> <super-input-text ss-icon=\"search\" model=\"vm.search\" placeholder=\"Find User\" is-disabled=\"vm.loading\"></super-input-text> </div> <div class=\"user-count\"> <span ng-bind=\"filtered.length\"></span>&nbsp;<ng-pluralize count=\"filtered.length\" when=\"{\\'1\\': \\'user\\',\\'other\\': \\'users\\'}\"></ng-pluralize> </div> </div> <div class=\"content bulk-action-content\" ng-if=\"vm.allSelected.length > 0\"> <div class=\"bulk-action-menu\"> <super-button label=\"Actions\" ss-icon-after=\"angle-down\"> <item ng-click=\"go.sendMultiple()\">Send Invitation</item> <item ng-click=\"go.deactivateMultiple()\">Pause Access</item> <item ng-click=\"go.activateMultiple()\">Resume Access</item> </super-button> </div> <div class=\"user-count\"> <span ng-bind=\"vm.allSelected.length\"></span>&nbsp;<ng-pluralize count=\"vm.allSelected.length\" when=\"{\\'1\\': \\'user\\',\\'other\\': \\'users\\'}\"></ng-pluralize>&nbsp;selected </div> <div class=\"filter-selected\"> <super-input-checkbox model=\"vm.filterSelected\" label=\"only show selected\" is-disabled=\"vm.allSelected.length === vm.categoryTotal\"></super-input-checkbox> </div> <div class=\"clear-selected\"> <button ng-click=\"go.clearAll()\">Clear All</button> </div> <div class=\"search\"> <super-input-text ss-icon=\"search\" model=\"vm.search\" placeholder=\"Find User\"></super-input-text> </div> </div> </div> <super-grid sortable=\"vm.emps\" default-sort=\"_lastName\" ss-pending=\"vm.loading\" ss-pending-status=\"vm.loadingStatus\"> <grid-header> <super-grid-column width=\"4%\"><super-input-checkbox model=\"vm.selectedAll\" ng-click=\"go.selectAll()\"></super-input-checkbox></super-grid-column> <super-grid-column width=\"20%\" sort-by=\"_lastName\">User</super-grid-column> <super-grid-column width=\"30%\">Invitation Email Address</super-grid-column> <super-grid-column width=\"31%\">Account Status</super-grid-column> <super-grid-column width=\"15%\">Credentials</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"emp in vm.emps | filter: { isVisible : true } | limitTo: vm.initalLimit\" selected-value=\"emp\"> <super-grid-cell class=\"checkbox-cell\"> <super-input-checkbox model=\"emp.$selected\" ng-click=\"go.selectOne(emp)\"></super-input-checkbox> </super-grid-cell> <super-grid-cell class=\"user-cell\"> <a href=\"/ec-employee/record/{{emp.id}}\" ng-bind=\"::emp.displayName\"></a> </super-grid-cell> <super-grid-cell class=\"email-cell\"> <form ng-submit=\"go.saveEmail(emp)\" ss-validate-form> <div class=\"gd-80p\"> <super-input-text id=\"emp-{{$index}}\" model=\"emp._flUser.invitationEmailAddress\" edit-mode=\"emp.editMode\" ss-validate=\"validation.email(emp._flUser.invitationEmailAddress, \\'E-Mail Address\\')\"></super-input-text> </div> <div class=\"gd-20p grid-actions\"> <span ng-if=\"!emp.editMode && !emp.flId\"> <button type=\"button\" ng-if=\"emp._flUser.invitationEmailAddress\" ng-click=\"go.editModeOn(emp, \\'emp-\\' + $index)\">Edit</button> <button type=\"button\" ng-if=\"!emp._flUser.invitationEmailAddress\" ng-click=\"go.editModeOn(emp, \\'emp-\\' + $index)\">Add</button> </span> <span ng-if=\"emp.editMode\"> <button ss-icon=\"check\" type=\"submit\" title=\"Save\"></button> <button type=\"button\" ng-click=\"go.cancelEdit(emp)\" ss-icon=\"times\" title=\"Cancel\"></button> </span> </div> </form> </super-grid-cell> <super-grid-cell class=\"status-cell\"> <div class=\"status-no-access\" ng-if=\"emp.flStatus === vm.inviteStatus.noAccess\"> <div class=\"gd-50p\"> <span>(No Access)</span> </div> <div ng-if=\"emp._flUser.invitationEmailAddress || !emp._flUser.invitationEmailAddress && emp.editMode\" class=\"gd-50p grid-actions\"> <button ng-click=\"go.invite(emp)\" ng-disabled=\"emp.editMode\">Send Invitation</button> </div> <div ng-if=\"!emp._flUser.invitationEmailAddress && !emp.editMode\" class=\"50p grid-actions\"> <span ss-icon=\"exclamation-circle\">No Email Address</span> </div> </div> <div class=\"status-sent\" ng-if=\"emp.flStatus === vm.inviteStatus.sent\"> <div class=\"gd-50p\" ss-icon=\"circle\"> <super-popover link=\"Invitation sent\" ss-icon-after=\"calendar\" ng-click=\"go.showInvitationStatus(emp)\"> <div ng-bind-html=\"vm.invitationHtml\"></div> </super-popover> </div> <div class=\"gd-50p grid-actions\"> <button ng-click=\"go.invite(emp)\" ng-disabled=\"emp.editMode\">Resend Invitation</button> </div> </div> <div class=\"status-active\" ng-if=\"emp.flStatus === vm.inviteStatus.active\"> <div class=\"gd-50p\"><span ss-icon=\"circle\">Access Granted</span></div> <div class=\"gd-50p grid-actions\"> <ul class=\"ss-pipe-children\"> <li><button ng-click=\"go.deactivate(emp)\">Pause Access</button></li> <li><button ng-click=\"go.revoke(emp)\">Revoke</button></li> </ul> </div> </div> <div class=\"status-inactive\" ng-if=\"emp.flStatus === vm.inviteStatus.inactive\"> <div class=\"gd-50p\"><span ss-icon=\"circle\">Access Paused</span></div> <div class=\"gd-50p grid-actions\"> <ul class=\"ss-pipe-children\"> <li><button ng-click=\"go.activate(emp)\">Resume Access</button></li> <li><button ng-click=\"go.revoke(emp)\">Revoke</button></li> </ul> </div> </div> </super-grid-cell> <super-grid-cell class=\"creds-cell\"> <super-popover link=\"View credentials\" ss-icon=\"eye\" ng-if=\"emp.flId != null\" ng-click=\"go.showCredentials(emp)\"> <div ss-pending=\"vm.loadingCredentials\" ng-bind-html=\"vm.credentialHtml\"></div> </super-popover> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <div infinite-scroll=\"go.loadNext()\" infinite-scroll-distance=\"2\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/credentials/segment-credential-content/credential-content.html\",'<div class=\"segment-general-config-credentials-credential-content\"> <super-tab-list> <super-tab-list-item label=\"Custom\" state=\"base.generalConfig.credentials\" params=\"{ credentialGroup: routeVm.routeConstants.CREDENTIAL_GROUPS.CUSTOM, credentialType: routeVm.routeConstants.CREDENTIAL_TYPES.CERTIFICATE_LICENSE }\" params-ignored-for-active=\"[\\'credentialType\\']\"></super-tab-list-item> <super-tab-list-item label=\"Custom - Issuers\" state=\"base.generalConfig.credentials\" params=\"{ credentialGroup: routeVm.routeConstants.CREDENTIAL_GROUPS.CUSTOM_ISSUERS, credentialType: routeVm.routeConstants.CREDENTIAL_TYPES.ORG_SPECIFIC }\" params-ignored-for-active=\"[\\'credentialType\\']\"></super-tab-list-item> <super-tab-list-item label=\"State & National\" state=\"base.generalConfig.credentials\" params=\"{ credentialGroup: routeVm.routeConstants.CREDENTIAL_GROUPS.STATE_NATIONAL, credentialType: routeVm.routeConstants.CREDENTIAL_TYPES.CERTIFICATE_LICENSE }\" params-ignored-for-active=\"[\\'credentialType\\']\"></super-tab-list-item> </super-tab-list> <div class=\"content-wrapper\"> <h5 ng-if=\"routeVm.isCustomIssuer\">The following issuers were added manually by your district.</h5> <super-tab-list flat ng-if=\"routeVm.isStateNational\"> <super-tab-list-item label=\"Certificates & licenses\" state=\"base.generalConfig.credentials\" params=\"{ credentialType: routeVm.routeConstants.CREDENTIAL_TYPES.CERTIFICATE_LICENSE }\"></super-tab-list-item> <super-tab-list-item label=\"Clearances\" state=\"base.generalConfig.credentials\" params=\"{ credentialType: routeVm.routeConstants.CREDENTIAL_TYPES.CLEARANCES_EMPLOYMENT }\"></super-tab-list-item> </super-tab-list> <div class=\"content\"> <cmp-manage-credentials ng-if=\"routeVm.showCredentials\"></cmp-manage-credentials> <cmp-manage-issuers ng-if=\"routeVm.showIssuers\"></cmp-manage-issuers> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/departments/segment-departments-content/departments-content.html\",'<div class=\"segment-general-config-departments-departments-content\"> <cmp-grid-group endpoint=\"go.getDepartments(filter)\" item-type=\"department\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/drivers-license/segment-drivers-license-content/drivers-license-content.html\",'<div class=\"segment-general-config-drivers-license-drivers-license-content\"> <cmp-grid-group endpoint=\"go.getDriversLicense()\" item-type=\"Drivers License Type\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/employment-groups/segment-employment-groups/employment-groups.html\",'<div class=\"segment-general-config-employment-groups-employment-groups\"> <cmp-grid-group endpoint=\"go.getList(filter)\" item-type=\"employment group\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/job-types/job-type-detail/job-type-detail.html\",'<route folder=\"/general-config/job-types/job-type-detail\"> <segment name=\"job-type-detail\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/job-types/segment-job-types-content/job-types-content.html\",'<div class=\"segment-general-config-job-types-job-types-content\"> <cmp-grid-group endpoint=\"go.getJobTypes(filter)\" item-type=\"job type\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/locations/segment-locations-content/locations-content.html\",'<div class=\"segment-general-config-locations-locations-content\"> <cmp-grid-group endpoint=\"go.getLocations(filter)\" item-type=\"Location\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/positions/segment-positions-content/positions-content.html\",'<div class=\"segment-general-config-positions-positions-content\"> <cmp-grid-group endpoint=\"go.getList(filter)\" item-type=\"Position Name\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/signatures/segment-signatures-content/signatures-content.html\",'<div class=\"segment-general-config-signatures-signatures-content\"> <cmp-grid-group on-before-save=\"routeVm.onBeforeSave(item)\" on-before-cancel=\"routeVm.onBeforeCancel(item)\" endpoint=\"go.getSignatures(filter)\" item-type=\"signature\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/status-reasons/segment-status-reasons-content/status-reasons-content.html\",'<div class=\"segment-general-config-status-reasons-status-reasons-content\"> <cmp-grid-group endpoint=\"go.getList(filter)\" item-type=\"status reason\" config=\"vm.config\" permissions=\"vm.permissions\"></cmp-grid-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-all/group-all.html\",'<route folder=\"/permissions/groups/group-all\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-detail/group-detail.html\",'<route folder=\"/permissions/groups/group-detail\"> <segment name=\"content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/segment-content/content.html\",'<div class=\"segment-permissions-groups-content\"> <div class=\"gd-20p\"> <div class=\"sub-title\">Overview</div> <cmp-nav-list class=\"auto-groups\"> <cmp-nav-list-item link=\"base.permissions.groups.all\" label=\"All Groups\"></cmp-nav-list-item> </cmp-nav-list> <div class=\"sub-title\">DEFAULT GROUPS</div> <cmp-nav-list class=\"auto-groups\"> <cmp-nav-list-item link=\"base.permissions.groups.detail({groupId: \\'{{group.id}}\\'})\" label=\"{{group._groupName}}\" ng-repeat=\"group in vm.autoCreatedGroups | orderBy:\\'_groupName\\'\"></cmp-nav-list-item> </cmp-nav-list> <div class=\"sub-title\" ng-if=\"vm.customCreatedGroups.length\">CUSTOM GROUPS</div> <cmp-nav-list class=\"custom-groups\" ng-if=\"vm.customCreatedGroups.length\"> <cmp-nav-list-item link=\"base.permissions.groups.detail({groupId: \\'{{group.id}}\\'})\" label=\"{{group._groupName}}\" ng-repeat=\"group in vm.customCreatedGroups | orderBy:\\'_groupName\\'\"></cmp-nav-list-item> </cmp-nav-list> </div> <div class=\"gd-80p\"> <ui-view></ui-view> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profile-all/profile-all.html\",'<route folder=\"/permissions/profiles/profile-all\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profile-detail/profile-detail.html\",'<route folder=\"/permissions/profiles/profile-detail\"> <segment name=\"content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/segment-content/content.html\",'<div class=\"segment-permissions-profiles-content\"> <div class=\"gd-20p\"> <div class=\"sub-title\">Overview</div> <cmp-nav-list class=\"auto-profiles\"> <cmp-nav-list-item link=\"base.permissions.profiles.all\" label=\"All Profiles\"></cmp-nav-list-item> </cmp-nav-list> <div class=\"sub-title\">DEFAULT PROFILES</div> <cmp-nav-list class=\"auto-profiles\"> <cmp-nav-list-item link=\"base.permissions.profiles.detail({profileId: \\'{{profile.id}}\\'})\" label=\"{{profile._permissionProfileName}}\" ng-repeat=\"profile in vm.autoCreatedProfiles | orderBy:\\'_permissionProfileName\\'\"></cmp-nav-list-item> </cmp-nav-list> <div class=\"sub-title\" ng-if=\"vm.customCreatedProfiles.length\">CUSTOM PROFILES</div> <cmp-nav-list class=\"custom-profiles\" ng-if=\"vm.customCreatedProfiles.length\"> <cmp-nav-list-item link=\"base.permissions.profiles.detail({profileId: \\'{{profile.id}}\\'})\" label=\"{{profile._permissionProfileName}}\" ng-repeat=\"profile in vm.customCreatedProfiles | orderBy:\\'_permissionProfileName\\'\"></cmp-nav-list-item> </cmp-nav-list> </div> <div class=\"gd-80p\"> <ui-view></ui-view> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/users/index/index.html\",'<route folder=\"/permissions/users/index\"> <segment name=\"content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/users/user-detail/user-detail.html\",'<route folder=\"/permissions/users/user-detail\"> <segment name=\"content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/general-config/job-types/job-type-detail/segment-job-type-detail/job-type-detail.html\",'<section id=\"jobTypeDetails\" class=\"segment-general-config-job-types-job-type-detail-job-type-detail\" role=\"main\"> <header class=\"main-header\"> <div class=\"gd-row\"> <div class=\"gd-70p\"> <strong>Job Type</strong> <super-select-list model=\"vm.selectedJobType\"> <super-select-list-item ng-repeat=\"option in vm.jobTypeOptions | orderBy: \\'name\\'\" label=\"option.name\" value=\"option.value\" aria-controls=\"jobTypeDetails\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-30p actions\"> <div> <super-button ss-icon=\"angle-left\" ui-sref=\"base.generalConfig.jobTypes\" label=\"Back to Job Types\"></super-button> </div> </div> </div> </header> <article> <header class=\"category-header jobtype-detail-header\"> <h4><strong>Job Type Details</strong></h4> <super-button smp class=\"add-control add-jobtype-detail\" label=\"Add New Job Type Detail\" ss-icon=\"plus-circle\" is-disabled=\"vm.newJobTypeDetail !== null\" ng-click=\"go.addJobTypeDetail()\"></super-button> </header> <div class=\"data-content\" ss-pending=\"vm.loadingJTD\"> <div class=\"detail-group new-JTD\" ng-if=\"vm.newJobTypeDetail\"> <form novalidate id=\"jobTypeDetails-{{vm.newJobTypeDetail.id}}\" ss-validate-form ng-submit=\"go.saveJTD(vm.newJobTypeDetail)\"> <cmp-job-type-detail jobtype-detail=\"vm.newJobTypeDetail\" dt-options=\"vm.dtOptionsForNewJTD\" org=\"vm.org\"></cmp-job-type-detail> </form> </div> <div class=\"detail-group future-JTD\" ng-if=\"!vm.loadingJTD && vm.futureJobTypeDetails.length\" ng-repeat=\"jobTypeDetail in vm.futureJobTypeDetails\"> <form novalidate id=\"jobTypeDetails-{{jobtypeDetail.id}}\" ss-validate-form ng-submit=\"go.saveJTD(jobTypeDetail)\"> <cmp-job-type-detail jobtype-detail=\"jobTypeDetail\" org=\"vm.org\"></cmp-job-type-detail> </form> </div> <div class=\"detail-group current-JTD\" ng-if=\"!vm.loadingJTD && vm.currentJobTypeDetail\"> <form novalidate id=\"jobTypeDetails-{{vm.currentJobTypeDetail.id}}\" ss-validate-form ng-submit=\"go.saveJTD(vm.currentJobTypeDetail)\"> <cmp-job-type-detail jobtype-detail=\"vm.currentJobTypeDetail\" org=\"vm.org\"></cmp-job-type-detail> </form> </div> <div class=\"past-JTD\" ng-if=\"!vm.loadingJTD && vm.pastJobTypeDetails.length\"> <button type=\"button\" class=\"toggle-ctrl toggle-past-JTD\" ng-class=\"{\\'fa-angle-up-after\\':vm.showJTDhistory,\\'fa-angle-down-after\\':!vm.showJTDhistory}\" ss-toggle=\"past-jobtype-details\" ng-click=\"go.toggleJTDhistory()\">{{vm.showJTDhistory ? \\'Hide\\' : \\'View\\' }} job details history</button> <div class=\"past-jobtype-details\"> <cmp-job-type-detail class=\"detail-group past-detail-group\" jobtype-detail=\"jobTypeDetail\" ng-repeat=\"jobTypeDetail in vm.pastJobTypeDetails\" org=\"vm.org\"></cmp-job-type-detail> </div> </div> <article ng-if=\"!vm.loadingJTD && vm.currentJobTypeDetail == null &&\\n\\t\\t\\t\\t\\t\\tvm.newJobTypeDetail == null &&\\n\\t\\t\\t\\t\\t\\t!vm.futureJobTypeDetails.length &&\\n\\t\\t\\t\\t\\t\\t!vm.pastJobTypeDetails.length\" class=\"detail-group\" ng-cloak> <header class=\"gd-row detail-header\"> <p>No Job Type Details found</p> </header> </article> </div> </article> <article> <header class=\"category-header pay-schedules-header\"> <h4><strong>Pay Schedules</strong></h4> <super-button smp class=\"add-control add-pay-schedule\" label=\"Add Pay Schedule\" ss-icon=\"plus-circle\" ng-click=\"go.addSchedule()\" is-disabled=\"routeVm.addingPS\"></super-button> </header> <div class=\"data-content\" ss-pending=\"vm.loadingPS\"> <div ng-if=\"!vm.loadingPS && routeVm.paySchedules.length\" class=\"detail-group pay-schedule-group\" ng-class=\"{\\'is-editing\\': schedule.isEditing}\" ng-repeat=\"schedule in routeVm.paySchedules | filter:{isDefault: false}\" ss-pending=\"schedule.isSaving\" ng-cloak> <form novalidate id=\"{{schedule.id}}\" ss-validate-form ng-submit=\"go.savePaySchedule(schedule)\"> <cmp-pay-schedule schedule=\"schedule\" org=\"vm.org\"></cmp-pay-schedule> </form> </div> <article ng-if=\"!vm.loadingPS && !vm.hasValidPaySchedules && !routeVm.addingPS\" class=\"detail-group\" ng-cloak> <header class=\"gd-row detail-header\"> <p>No Pay Schedules found</p> </header> </article> </div> </article> </section> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"routes/permissions/groups/group-all/segment-content/content.html\",'<div class=\"segment-permissions-groups-group-all-content\"> <div class=\"gd-row\"> <div class=\"gd-50p\"><h2 ss-icon=\"users\">All Groups</h2></div> <div class=\"gd-50p actions-group\"> <div class=\"create-group-menu-group\"> <super-button pri class=\"create-group-btn\" ng-click=\"vm.formOpened=true;\" ss-menu=\"create-group-menu\" label=\"Create Group\"></super-button> <div class=\"create-group-menu\"> <form novalidate ng-submit=\"go.add()\" ss-validate-form ng-if=\"vm.formOpened\"> <div class=\"gd-row form-content\"> <super-input-text model=\"vm.defaultGroup._groupName\" label=\"Name the group\" name=\"\" required=\"true\"></super-input-text> </div> <div class=\"gd-row form-error\" ng-if=\"vm.errors\" ng-bind=\"vm.errors\"></div> <div class=\"gd-row form-footer\"> <super-button label=\"cancel\" ng-click=\"go.close()\" class=\"close-button\" ng-disabled=\"vm.saving\"></super-button> <super-button pri class=\"save-button\" ng-class=\"{\\'saving\\': vm.saving}\" ng-disabled=\"vm.saving || vm.defaultGroup._groupName.length < 1\" ss-icon=\"spinner\" type=\"submit\" label=\"Create\"></super-button> </div> </form> </div> </div> </div> </div> <div class=\"gd-row\"> <cmp-infographic-svg></cmp-infographic-svg> </div> <table class=\"groups-list\"> <thead> <tr> <th><h5>Group Name</h5><small>These people...</small></th> <th><h5>Permission Profile</h5><small>...can see and edit...</small></th> <th><h5>Scope of Control</h5><small>...these items and/or employees</small></th> </tr> </thead> <tbody ng-repeat=\"group in groupsVm.groups | orderBy:\\'_groupName\\'\"> <tr ng-repeat=\"securityScope in group._securityScopes\" ng-if=\"group._securityScopes.length > 0\"> <td ng-if=\"$first\"> <a ui-sref=\"base.permissions.groups.detail({groupId: \\'{{group.id}}\\'})\" ng-bind=\"group._groupName\"></a> <small class=\"count\" ng-if=\"group._employeeIds.length\" ng-bind=\"group._employeeIds.length\"></small> <small class=\"group-desc\" ng-if=\"group._groupDescription\" ng-bind=\"group._groupDescription\"></small> </td> <td ng-if=\"!$first\">&nbsp;</td> <td><cmp-tag profile=\"{{securityScope.permissionProfile._permissionProfileName}}\" id=\"{{securityScope.permissionProfile.id}}\"></cmp-tag></td> <td>{{securityScope.controlDisplay}}</td> </tr> <tr ng-if=\"group._securityScopes.length === 0\"> <td> <a ui-sref=\"base.permissions.groups.detail({groupId: \\'{{group.id}}\\'})\" ng-bind=\"group._groupName\"></a> <small class=\"count\" ng-if=\"group._employeeIds.length\" ng-bind=\"group._employeeIds.length\"></small> <small class=\"group-desc\" ng-if=\"group._groupDescription\" ng-bind=\"group._groupDescription\"></small> </td> <td>--</td> <td>--</td> </tr> </tbody> </table> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-detail/group-members/group-members.html\",'<route folder=\"/permissions/groups/group-detail/group-members\"> <segment name=\"content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-detail/profile-and-scope/profile-and-scope.html\",'<route folder=\"/permissions/groups/group-detail/profile-and-scope\"> <segment name=\"content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-detail/segment-content/content.html\",'<div class=\"segment-permissions-groups-group-detail-content gd-row\"> <header> <div class=\"gd-row\"> <div class=\"gd-70p group-title-group\"> <h2 class=\"group-title\" ng-bind=\"group._groupName\" ng-if=\"!vm.editTitle\" ss-icon=\"users\"></h2> <div class=\"group-title group-title-edit\" ng-if=\"vm.editTitle\"> <super-input-text model=\"vm.currentTitle\"></super-input-text> <div class=\"edit-actions\"> <super-button class=\"save\" smp ss-icon=\"check-circle\" ng-click=\"go.save()\" title=\"Save\"></super-button> <super-button class=\"cancel\" smp ss-icon=\"times\" ng-click=\"go.cancel()\" title=\"Cancel\"></super-button> </div> </div> </div> <div ng-if=\"!group._autoCreated\" class=\"gd-30p actions-group\"> <super-button std label=\"Options\" ss-icon-after=\"caret-down\"> <item ng-click=\"go.rename()\">Rename</item> <item ng-click=\"go.editDescription()\">{{!group._groupDescription ? \\'Add Description\\' : \\'Edit Description\\'}}</item> <item ng-click=\"go.delete()\">Delete Group</item> </super-button> </div> </div> </header> <div class=\"gd-row group-description-group\" ng-if=\"vm.editDescription || group._groupDescription\"> <p class=\"group-description\" ng-bind=\"group._groupDescription\" ng-if=\"!vm.editDescription\"></p> <div class=\"group-description group-description-edit\" ng-if=\"vm.editDescription\"> <super-input-text model=\"vm.currentDescription\"></super-input-text> <div class=\"edit-actions\"> <super-button class=\"save\" smp ss-icon=\"check-circle\" ng-click=\"go.save()\" title=\"Save\"></super-button> <super-button class=\"cancel\" smp ss-icon=\"times\" ng-click=\"go.cancel()\" title=\"Cancel\"></super-button> </div> </div> </div> <div class=\"group-members gd-100p\"> <super-tab-list> <super-tab-list-item label=\"Group Members\" sub-label=\"These people...\" state=\"base.permissions.groups.detail.groupMembers\" params=\"{action:\\'\\'}\"></super-tab-list-item> <super-tab-list-item label=\"Permission Profile &amp; Scope\" sub-label=\"...can see and edit items related to locations, employees, etc.\" state=\"base.permissions.groups.detail.profileAndScope\" params=\"{action:\\'\\'}\"></super-tab-list-item> </super-tab-list> <div class=\"content-wrapper\"> <ui-view></ui-view> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profile-all/segment-content/content.html\",'<div class=\"segment-permissions-profiles-profile-all-content\"> <div> <div class=\"gd-50p\"><h2 ss-icon=\"key\">Permission Profiles</h2></div> <div class=\"gd-50p actions-group\"> <div class=\"create-profile-menu-group\" ss-permitted=\"permissionProfiles.create\"> <super-button pri class=\"create-profile-btn\" ng-click=\"vm.formOpened=true;\" ss-menu=\"create-profile-menu\" label=\"Create Profile\"></super-button> <div class=\"create-profile-menu\"> <form novalidate ng-submit=\"go.add()\" ss-validate-form ng-if=\"vm.formOpened\"> <div class=\"gd-row form-content\"> <super-input-text model=\"vm.profile._permissionProfileName\" label=\"Name the permission profile\" required=\"true\"></super-input-text> </div> <div class=\"gd-row form-error\" ng-if=\"vm.errors\" ng-bind=\"vm.errors\"></div> <div class=\"gd-row form-footer\"> <super-button label=\"cancel\" ng-click=\"go.close()\" class=\"close-button\" ng-disabled=\"vm.saving\"></super-button> <super-button pri class=\"save-button\" ng-class=\"{\\'saving\\': vm.saving}\" ng-disabled=\"vm.saving || vm.profile._permissionProfileName.length < 1\" ss-icon=\"spinner\" type=\"submit\" label=\"Create\"></super-button> </div> </form> </div> </div> </div> </div> <table class=\"profiles-list\"> <thead> <tr> <th><h5>Permission Profile</h5></th> <th><h5 ss-icon=\"users\">Groups Applied</h5></th> </tr> </thead> <tbody> <tr ng-repeat=\"profile in profilesVm.profiles | orderBy:\\'_permissionProfileName\\'\"> <td> <a ui-sref=\"base.permissions.profiles.detail({profileId: \\'{{profile.id}}\\'})\" ng-bind=\"profile._permissionProfileName\"></a> <small class=\"profile-desc\" ng-bind=\"profile._permissionProfileDescription\"></small> </td> <td><cmp-tag ng-repeat=\"g in profile.groups | orderBy:\\'_groupName\\'\" id=\"{{g.id}}\" group=\"{{g._groupName}}\"></cmp-tag></td> </tr> </tbody> </table> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profile-detail/segment-content/content.html\",'<div class=\"segment-permissions-profiles-profile-detail-content\"> <header> <div class=\"flex-container\"> <div class=\"flex-item profile-title-group\"> <h2 class=\"profile-title\" ss-icon=\"key\" ng-bind=\"profile._permissionProfileName\" ng-if=\"!vm.editTitle\"></h2> <div class=\"profile-title profile-title-edit\" ng-if=\"vm.editTitle\"> <div class=\"profile-name\"><super-input-text model=\"vm.currentTitle\"></super-input-text></div> <div class=\"edit-actions\"> <super-button class=\"save\" smp ss-icon=\"check-circle\" ng-click=\"go.save()\" title=\"Save\"></super-button> <super-button class=\"cancel\" smp ss-icon=\"times\" ng-click=\"go.cancel()\" title=\"Cancel\"></super-button> </div> </div> </div> <div class=\"flex-item actions-profile\" ss-permitted=\"permissionProfiles.edit\"> <super-button std label=\"Options\" ss-icon-after=\"caret-down\"> <item ng-repeat=\"option in vm.editOptions\" ng-click=\"option.method()\" ng-bind=\"option.label\"></item> </super-button> </div> </div> <div class=\"gd-row profile-description-group\" ng-if=\"vm.editDescription || profile._permissionProfileDescription\"> <p class=\"profile-description\" ng-bind=\"profile._permissionProfileDescription\" ng-if=\"!vm.editDescription\"></p> <div class=\"profile-description profile-description-edit\" ng-if=\"vm.editDescription\"> <div class=\"description-text\"> <super-input-text model=\"vm.currentDescription\"></super-input-text> </div> <div class=\"edit-actions\"> <super-button class=\"save\" smp ss-icon=\"check-circle\" ng-click=\"go.save()\" title=\"Save\"></super-button> <super-button class=\"cancel\" smp ss-icon=\"times\" ng-click=\"go.cancel()\" title=\"Cancel\"></super-button> </div> </div> </div> </header> <super-tab-list> <super-tab-list-item class=\"resource-name-tab\" ng-repeat=\"context in vm.contexts | orderBy: \\'_protectedResourceRegistration.description\\'\" ng-class=\"{\\'is-disabled\\': {{ go.shouldDisabledThisTab(context) }} }\" label=\"{{context._protectedResourceRegistration.description}}\" sub-label=\"{{go.getDisabledPopoverText(context)}}\" state=\"base.permissions.profiles.detail.tab\" params=\"{action: \\'view\\', tab: context._protectedResourceRegistration.resourceName}\" params-ignored-for-active=\"[\\'action\\']\"></super-tab-list-item> </super-tab-list> <div class=\"content-wrapper\"> <ui-view></ui-view> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profile-detail/tab/tab.html\",'<route folder=\"/permissions/profiles/profile-detail/tab\"> <segment name=\"tab-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/users/index/segment-content/content.html\",'<div class=\"segment-permissions-users-index-content\"> <div class=\"super-filter-bar\" ng-class=\"{\\'show-bulk-actions\\': vm.selectedEmps.length}\"> <div class=\"gd-row\" ng-if=\"!vm.selectedEmps.length\"> <div class=\"search gd-30p\"> <super-input-text ss-icon=\"search\" model=\"vm.search\" is-disabled=\"vm.loading\" placeholder=\"Find User...\"></super-input-text> </div> <div class=\"count\"> <span ng-show=\"vm.employeesDisplayed.length < vm.employeeTotal\">Showing {{vm.employeesDisplayed.length}} of</span> {{!vm.selectedGroupFilter ? vm.employeeTotal : vm.employeesRetrieved.length}} <ng-pluralize count=\"vm.employeeTotal\" when=\"{\\'1\\': \\'User\\', \\'other\\': \\'Users\\'}\"></ng-pluralize> </div> <div class=\"filters\" ng-if=\"vm.groupFilterOptions\"> <super-select-list type=\"filter\" label=\"Filter Group\" model=\"vm.selectedGroupFilter\" is-disabled=\"vm.loading\"> <super-select-list-item ng-repeat=\"o in vm.groupFilterOptions\" value=\"o.value\" label=\"o.name\"></super-select-list-item> </super-select-list> </div> </div> <div class=\"bulk-actions\" ng-if=\"vm.selectedEmps.length\"> <span class=\"count\">{{vm.selectedEmps.length}} <ng-pluralize count=\"vm.selectedEmps.length\" when=\"{\\'1\\': \\'User\\', \\'other\\': \\'Users\\'}\"></ng-pluralize> selected</span> <super-select-list type=\"standard\" default-option-label=\"Add To Group\" model=\"vm.toGroup\"> <super-select-list-item ng-repeat=\"group in vm.addToGroupOptions\" value=\"group.value\" label=\"group.name\"></super-select-list-item> </super-select-list> </div> </div> <super-grid sortable=\"vm.employeesDisplayed\" default-sort=\"_lastName\" ss-pending=\"vm.loading\" ss-pending-status=\"vm.loadingStatus\"> <grid-header> <super-grid-column width=\"54%\" sort-by=\"_lastName\">Name</super-grid-column> <super-grid-column width=\"46%\">Member of Group(s)</super-grid-column> </grid-header> <grid-rows ng-if=\"vm.employeesDisplayed.length\"> <super-grid-row ng-repeat=\"emp in vm.employeesDisplayed | limitTo: vm.limit\" selected-value=\"emp\"> <super-grid-cell><a ui-sref=\"base.permissions.users.detail({userId: emp.id})\">{{emp._firstName}} {{emp._lastName}}</a></super-grid-cell> <super-grid-cell> <cmp-tag group=\"{{group._groupName}}\" id=\"{{group.id}}\" ng-repeat=\"group in go.getUserGroups(emp)\"></cmp-tag> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <div infinite-scroll=\"go.loadNext()\" infinite-scroll-distance=\"2\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/users/user-detail/segment-content/content.html\",'<div class=\"segment-permissions-users-user-detail-content\"> <header> <div class=\"all-users\"><a ss-icon=\"chevron-left\" ui-sref=\"base.permissions.users.all\">All Users</a></div> <h2 ng-bind=\"routeVm.emp.fullName\"></h2> </header> <div ss-pending=\"vm.loading\"> <section class=\"group-summary\"> <table class=\"group-table\"> <thead> <tr> <th colspan=\"1\" width=\"25%\">Group</th> <th colspan=\"1\" width=\"25%\">Permission Profiles<i class=\"byline\">Can see and edit...</i></th> <th colspan=\"1\" width=\"40%\">Scope of Control<i class=\"byline\">...these items and/or employees</i></th> <th colspan=\"1\" width=\"10%\" class=\"actions\">Actions</th> </tr> </thead> <tbody ng-if=\"vm.groups.length < 1\"> <tr> <td colspan=\"1\" width=\"25%\">--</td> <td colspan=\"1\" width=\"25%\">--</td> <td colspan=\"1\" width=\"40%\">--</td> <td colspan=\"1\" width=\"10%\" class=\"actions\">--</td> </tr> </tbody> <tbody ng-if=\"vm.groups.length > 0\" ng-repeat=\"group in vm.groups\" class=\"group\"> <tr ng-repeat=\"securityScope in group._securityScopes\" class=\"security-scope\"> <td colspan=\"1\" width=\"25%\"> <h4 ng-if=\"$first\" ng-bind=\"group._groupName\"></h4> <p ng-if=\"$first\"><i ng-bind=\"group._groupDescription\"></i></p> </td> <td colspan=\"1\" width=\"25%\"> <cmp-tag id=\"{{securityScope.permissionProfile.id}}\" profile=\"{{securityScope.permissionProfile._permissionProfileName}}\"></cmp-tag> </td> <td colspan=\"1\" width=\"40%\"> <div>{{securityScope.controlDisplay}}</div> <button class=\"scope-details-action\" ss-toggle=\"scope-details\">{{securityScope.showDetails ? \\'Hide\\' : \\'View\\'}} Details </button> <dl class=\"scope-details\"> <dt><i>Locations in scope</i></dt> <dd ng-bind=\"vm.itemsInScope[securityScope.id].location\"></dd> <dt><i>Departments in scope</i></dt> <dd ng-bind=\"vm.itemsInScope[securityScope.id].dept + \\' (at above locations)\\'\"></dd> <dt><i>Job Types in scope</i></dt> <dd ng-bind=\"vm.itemsInScope[securityScope.id].jobTypes + \\' (at above locations, depts)\\'\"></dd> <dt><i>Employees in scope</i></dt> <dd ng-bind=\"vm.itemsInScope[securityScope.id].employees\"></dd> </dl> </td> <td colspan=\"1\" width=\"10%\" class=\"actions\"> <super-button ss-icon=\"angle-down\" ng-if=\"$first\"> <item ng-click=\"go.removeUserFromGroup(routeVm.emp, group)\">Remove {{routeVm.emp._firstName}} from this group</item> </super-button> </td> </tr> </tbody> </table> </section> <section class=\"permissions-summary\" ng-if=\"vm.groups.length > 0\"> <header class=\"gd-row\"> <div class=\"gd-30p\"> <h3>Permissions Summary</h3> </div> <div class=\"gd-70p\"> <ul class=\"profile-list\"> <li ng-style=\"{\\'width\\': \\'calc(100% / {{vm.uniqueProfiles.length}})\\'}\" ng-repeat=\"p in vm.uniqueProfiles\" ss-icon=\"key\" ng-bind=\"p._permissionProfileName\"></li> </ul> </div> </header> <cmp-profile-table ng-if=\"!vm.loading\" ng-repeat=\"context in permissionsVm.contexts\" permissions=\"vm.permissions[context.id]\" registration=\"context._protectedResourceRegistration\" dim-matching=\"vm.selected\"></cmp-profile-table> </section> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-detail/group-members/segment-content/content.html\",'<div class=\"segment-permissions-groups-group-detail-group-members-content\"> <div class=\"add-member-menu-group\" ng-if=\"!group._appliesToAllEmployees\"> <super-button pri class=\"add-member-btn\" label=\"Add Members\" ng-click=\"go.toggleMenu()\"></super-button> <div class=\"add-member-menu\" ng-if=\"vm.formOpened\"> <form ng-submit=\"go.checkGroupsConflicts()\" ss-validate-form> <div class=\"gd-row form-content\"> <super-employee-search label=\"Enter user\\'s name\" model=\"vm.employeeHolder\" exclude-employees-by-ids=\"vm.removeEmployeeFromResult\" use-pill=\"true\" placeholder=\"Enter user\\'s name\"></super-employee-search> </div> <div class=\"gd-row form-error\" ng-if=\"vm.errors\" ng-bind=\"vm.errors\"></div> <div class=\"gd-row form-footer\"> <super-button label=\"cancel\" ng-click=\"go.toggleMenu()\" class=\"close-button\" ng-disabled=\"vm.saving\"></super-button> <super-button pri class=\"save-button\" ng-class=\"{\\'saving\\': vm.saving }\" ng-disabled=\"vm.saving || !vm.employeeHolder.length\" ss-icon=\"spinner\" type=\"submit\" label=\"Add\"></super-button> </div> </form> </div> </div> <div class=\"gd-row\"> <div class=\"modal-showing-groups\" ss-modal-view ng-if=\"vm.showingModalUi\"> <i ss-icon=\"times\" ng-click=\"vm.showingModalUi = false\"></i> <ul> <li class=\"message\">The following employee(s) you selected are part of other group(s):</li> <li class=\"modal-content\" ng-class=\"{\\'show-scroll\\': go.showScroll(vm.employeesInAndThereCurrentGroups)}\"> <super-grid> <grid-header> <super-grid-column>Employee</super-grid-column> <super-grid-column>Will be removed from</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"item in vm.employeesInAndThereCurrentGroups | filter:go.haveGroups(item)\"> <super-grid-cell>{{ item.employee.fullName }}</super-grid-cell> <super-grid-cell><b>{{ item.groupNames }}</b></super-grid-cell> </super-grid-row> </grid-rows> </super-grid> </li> <li class=\"message\">Would you like to move them to the <b>{{ group._groupName }}</b>?</li> <li class=\"btn-section\"> <super-button label=\"Cancel\" ng-click=\"vm.showingModalUi = false\"></super-button> <super-button pri label=\"Continue\" ng-click=\"go.addMembersToGroup()\"></super-button> </li> </ul> </div> <table class=\"member-list\"> <thead ng-if=\"!group._appliesToAllEmployees\"> <tr> <th class=\"name\"><super-input-text model=\"vm.search\" placeholder=\"Find member\" ss-icon=\"search\"></super-input-text></th> <th class=\"position\">Position Name</th> <th class=\"location\">Location</th> <th class=\"department\">Department</th> <th class=\"actions\">&nbsp;</th> </tr> </thead> <tbody ss-pending=\"vm.loading\" ss-pending-status=\"vm.statusMsg\"> <tr ng-repeat=\"emp in vm.filteredEmps | orderBy:\\'fullName\\'\" ng-if=\"vm.filteredEmps.length > 0\"> <td class=\"name\"><a ui-sref=\"base.permissions.users.detail({userId: \\'{{emp.id}}\\'})\" ng-bind=\"emp._firstName + \\' \\' + emp._lastName\"></a></td> <td class=\"position\" ng-bind=\"emp.position.name\"></td> <td class=\"location\" ng-bind=\"emp.position.location._name\"></td> <td class=\"department\" ng-bind=\"emp.position.department._name\"></td> <td class=\"actions\"> <div class=\"emp-remove\" ng-click=\"go.removeMember(emp)\"> <span class=\"text\">Remove</span> <span class=\"action\" ss-icon=\"minus-circle\"></span> </div> </td> </tr> <tr ng-if=\"vm.filteredEmps.length < 1\"> <td colspan=\"5\" ng-if=\"!group._appliesToAllEmployees\">No group members</td> <td colspan=\"5\" ng-if=\"group._appliesToAllEmployees\">All users are members of this group. New users are added automatically.</td> </tr> </tbody> </table> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/groups/group-detail/profile-and-scope/segment-content/content.html\",'<div class=\"segment-permissions-groups-group-detail-profile-and-scope-content\"> <cmp-security-scope model=\"securityScope\" group=\"group\" profiles=\"groupsVm.profiles\" ng-repeat=\"securityScope in group._securityScopes\" on-update=\"loadData()\" on-remove=\"go.removeScope($securityScope)\"></cmp-security-scope> <section class=\"permissions-summary\" ng-if=\"routeVm.uniqueProfiles.length\"> <header> <h3>Permissions Summary</h3> <div class=\"table-header\"> <super-input-checkbox model=\"vm.dim\" label=\"Dim Matching\" is-disabled=\"vm.disableDim\"></super-input-checkbox> <ul class=\"gd-row profile-list\"> <li class=\"profile\" style=\"width: calc(99.99% / {{routeVm.uniqueProfiles.length}} - 10px)\" ng-repeat=\"p in routeVm.uniqueProfiles\" ss-icon=\"key\" ng-bind=\"p._permissionProfileName\"></li> </ul> </div> </header> <cmp-profile-table ng-repeat=\"context in permissionsVm.contexts\" permissions=\"vm.permissions[context.id]\" registration=\"context._protectedResourceRegistration\" dim-matching=\"vm.dim\"></cmp-profile-table> </section> </div> ')}])}(),function(e){try{e=angular.module(\"ec-settings-templates\")}catch(t){e=angular.module(\"ec-settings-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/permissions/profiles/profile-detail/tab/segment-tab-content/tab-content.html\",'<div class=\"segment-permissions-profiles-profile-detail-tab-tab-content\"> <header> <div class=\"actions\" ss-permitted=\"permissionProfiles.edit\"> <div ng-if=\"!profile._locked\"> <super-button ng-if=\"!vm.editMode\" ng-click=\"go.edit()\" label=\"Edit\"></super-button> <super-button ng-if=\"vm.editMode\" ng-click=\"go.cancelTabEdit()\" label=\"Cancel\" ng-disabled=\"vm.saving\"></super-button> <super-button ng-if=\"vm.editMode\" ng-click=\"go.validateAndSaveTab()\" label=\"Save\" ss-pending=\"vm.saving\"></super-button> </div> </div> <div class=\"gd-row\"> <div class=\"gd-30p\">&nbsp;</div> <div class=\"gd-70p\"> <div style=\"float: left; width: calc(99.99% / 2)\"> <div><label>This Permission Profile</label></div> <cmp-tag id=\"profile.id\" profile=\"{{profile._permissionProfileName}}\"></cmp-tag> </div> <div style=\"float: left; width: calc(99.99% / 2)\"> <div><label for=\"\">Compare to</label></div> <super-select-list id=\"\" model=\"vm.selectedProfile\"> <super-select-list-item ss-icon=\"key\" ng-if=\"p.id !== profile.id\" ng-repeat=\"p in profilesVm.profiles | orderBy: \\'_permissionProfileName\\'\" value=\"p.id\" label=\"p._permissionProfileName\"></super-select-list-item> </super-select-list> </div> </div> </div> </header> <cmp-profile-table permissions=\"vm.permissions\" registration=\"vm.registration\" min-column-display=\"2\"></cmp-profile-table> </div> ')}])}();","import { State } from 'base-state';\n// #---------------------------------------------# //\n// #---- State (/general-config/credentials) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst ROUTE_CONSTANTS = {\n\tCREDENTIAL_GROUPS: {\n\t\tSTATE_NATIONAL: 'state-national',\n\t\tCUSTOM: 'custom',\n\t\tCUSTOM_ISSUERS: 'custom-issuers'\n\t},\n\tCREDENTIAL_TYPES: {\n\t\tCERTIFICATE_LICENSE: 'certificate-licenses',\n\t\tCLEARANCES_EMPLOYMENT: 'clearances-employment',\n\t\tORG_SPECIFIC: 'org-specific'\n\t}\n};\n\nconst stateName = 'generalConfig.credentials';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/credentials/:credentialGroup/:credentialType',\n\ttemplateUrl: 'routes/general-config/credentials/credentials.html',\n\tparams: {\n\t\tcredentialGroup: 'custom',\n\t\tcredentialType: 'certificate-licenses'\n\t},\n\tcontroller: function ($scope, $stateParams) {\n\t\t$scope.portfolioId = $stateParams.portfolioId;\n\t},\n\tresolve: {\n\t\tcontextLoader: /*@ngInject*/ ($stateParams, ssAsync, ssOrganizationSvc) => {\n\t\t\trouteVm.routeConstants = ROUTE_CONSTANTS;\n\n\t\t\trouteVm.isStateNational = $stateParams.credentialGroup === ROUTE_CONSTANTS.CREDENTIAL_GROUPS.STATE_NATIONAL;\n\t\t\trouteVm.isCustomCreds = $stateParams.credentialGroup === ROUTE_CONSTANTS.CREDENTIAL_GROUPS.CUSTOM;\n\t\t\trouteVm.isCustomIssuer = $stateParams.credentialGroup === ROUTE_CONSTANTS.CREDENTIAL_GROUPS.CUSTOM_ISSUERS;\n\t\t\trouteVm.credentialGroup = $stateParams.credentialGroup;\n\t\t\trouteVm.credentialType = $stateParams.credentialType;\n\t\t\trouteVm.showIssuers = (routeVm.credentialGroup === 'custom-issuers' && routeVm.credentialType === 'org-specific');\n\t\t\trouteVm.showCredentials = ($stateParams.credentialGroup === 'state-national') ||\n\t\t\t\t($stateParams.credentialGroup === 'custom' && $stateParams.credentialType === 'certificate-licenses');\n\n\t\t\treturn ssAsync(function* () {\n\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\n\t\t\t})();\n\t\t},\n\t\tloader: /*@ngInject*/ (ssAsync, ssFlagSvc, ssEventSvc, $location) => {\n\t\t\treturn (ssAsync(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tif (!ssFlagSvc.checkState('fc-new-credentials-enabled')) {\n\t\t\t\t\t\t// OH HAI SUPAR HACK!  I can't wait to release and delete this!\n\t\t\t\t\t\t$location.url('ec-settings/general-config/departments');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tssEventSvc.emit('error-404');\n\t\t\t\t}\n\t\t\t})());\n\t\t},\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Employee Records - Credentials';\n\t\t},\n\t},\n};\n\n// #-- END State (/general-config/credentials) --# //\n// #---------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ $stateProvider => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #--------------------------------------------------------------------------# //\n// #---- Segment (/general-config/credentials/segment-credential-content) ----# //\n\nclass CredentialContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm\n\n\t\tparentVm.HRMSmessage = '';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigCredentialsCredentialContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/credentials/segment-credential-content) --# //\n// #--------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigCredentialsCredentialContent', () => new CredentialContent('credential-content') );\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigCredentialsCredentialContentLogic', logic);\n","import {State} from 'base-state';\n// #--------------------------------------------# //\n// #---- State (/general-config/departments) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.departments';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/departments',\n\ttemplateUrl: 'routes/general-config/departments/departments.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Departments';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/general-config/departments) --# //\n// #--------------------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #---------------------------------------------------------------------------# //\n// #---- Segment (/general-config/departments/segment-departments-content) ----# //\n\nclass DepartmentsContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssAsync, ssDepartmentsApi, ssActiveUserSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm\n\n\t\tparentVm.HRMSmessage = 'Departments are editable in the HRMS application, and are referred to as \"Organizations\"';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigDepartmentsDepartmentsContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Department',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item._name\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"Name\" model=\"item._name\" ss-validate=\"validation.required(item._name, 'Department name')\" required=\"true\"></super-input-text>`\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'External Id',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item._externalId\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"External ID\" model=\"item._externalId\" ss-validate=\"validation.externalId(item._externalId, 'External Id')\" required=\"true\"></super-input-text>`\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create && !parentVm.isReadonly || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit && !parentVm.isReadonly || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete && !parentVm.isReadonly || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_departments`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetDepartments(filter) {\n\t\t\t\treturn ssDepartmentsApi.query(filter);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/departments/segment-departments-content) --# //\n// #---------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigDepartmentsDepartmentsContent', () => new DepartmentsContent('departments-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigDepartmentsDepartmentsContentLogic', logic);\n","import {State} from 'base-state';\n// #------------------------------------------------# //\n// #---- State (/general-config/drivers-license) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.driversLicense';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/drivers-license',\n\ttemplateUrl: 'routes/general-config/drivers-license/drivers-license.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Drivers License';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/general-config/drivers-license) --# //\n// #------------------------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #-----------------------------------------------------------------------------------# //\n// #---- Segment (/general-config/drivers-license/segment-drivers-license-content) ----# //\n\nclass DriversLicenseContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssListApi, ssAsync, ssActiveUserSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigDriversLicenseDriversLicenseContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Drivers License Type',\n\t\t\t\t\tsortBy: '_name',\n\t\t\t\t\tviewTemplate: '<span ng-bind=\"item._name\"></span>',\n\t\t\t\t\teditTemplate: '<super-input-text model=\"item._name\" ss-validate=\"validation.required(item._name, \\'Drivers License Type\\')\"></super-input-text>'\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_list_employee.driverslicense`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetDriversLicense() {\n\t\t\t\treturn ssListApi.query({\n\t\t\t\t\texternalId: 'employee.driverslicense',\n\t\t\t\t\tinclude: 'Items',\n\t\t\t\t\tlimit: 500\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/drivers-license/segment-drivers-license-content) --# //\n// #-----------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigDriversLicenseDriversLicenseContent', () => new DriversLicenseContent('drivers-license-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigDriversLicenseDriversLicenseContentLogic', logic);\n","import { State } from 'base-state';\n// #--------------------------------------------------# //\n// #---- State (/general-config/employment-groups) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.employmentGroups';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/employment-groups',\n\ttemplateUrl: 'routes/general-config/employment-groups/employment-groups.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Employment Groups';\n\t\t},\n\t\tloader: /*@ngInject*/ (ssAsync, ssMultiInitiativeFeatureDetectorSvc, ssEventSvc) => {\n\t\t\treturn ssAsync(function*() {\n\t\t\t\tif (!ssMultiInitiativeFeatureDetectorSvc.showEmploymentGroups()) {\n\t\t\t\t\tssEventSvc.emit('error-404');\n\t\t\t\t}\n\t\t\t})();\n\t\t},\n\t},\n};\n\n// #-- END State (/general-config/employment-groups) --# //\n// #--------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #-------------------------------------------------------------------------------# //\n// #---- Segment (/general-config/employment-groups/segment-employment-groups) ----# //\n\nclass EmploymentGroups extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssAsync, ssActiveUserSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm;\n\t\tconst listType = 'jobtype.employmentgroups';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigEmploymentGroupsEmploymentGroupsLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Employment Group',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: '<span ng-bind=\"item._name\"></span>',\n\t\t\t\t\teditTemplate: '<super-input-text placeholder=\"Name\" model=\"item._name\" ss-validate=\"validation.required(item._name, \\'Employment Group Name\\')\" required=\"true\"></super-input-text>'\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create && !parentVm.isReadonly || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit && !parentVm.isReadonly || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete && !parentVm.isReadonly || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_list_${listType}`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetList(filter) {\n\t\t\t\treturn parentVm.getList(filter, listType);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/employment-groups/segment-employment-groups) --# //\n// #-------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigEmploymentGroupsEmploymentGroups', () => new EmploymentGroups('employment-groups'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigEmploymentGroupsEmploymentGroupsLogic', logic);\n","import { State } from 'base-state';\n// #---------------------------------# //\n// #---- State (/general-config) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\n\nlet lists = [];\n\nconst routeVm = {\n\ttabs: [],\n\tcredsEnabled: false\n};\n\nconst stateName = 'generalConfig';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/general-config',\n\ttemplateUrl: 'routes/general-config/general-config.html',\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('listHeaders', 'view'),\n\tresolve: {\n\t\tlists: /*@ngInject*/ (ssAsync, ssListApi) => {\n\t\t\trouteVm.getList = (filter, listName) => {\n\t\t\t\tif (filter == null || listName == null || lists == null || lists.length < 1) { return []; }\n\t\t\t\tlet item = lists.find(item => item._externalId === listName);\n\t\t\t\tif (item == null || item.id == null) { return []; }\n\n\t\t\t\tfilter.id = item.id;\n\t\t\t\treturn ssListApi.getListItems(filter);\n\t\t\t};\n\n\t\t\treturn ssAsync(function*() {\n\t\t\t\t// get all the lists so the child states can get the list ids\n\t\t\t\tlists = yield ssListApi.query({ limit: 1000 });\n\t\t\t})();\n\t\t},\n\t\tenableCreds: /*@ngInject*/ (ssFlagSvc) => {\n\t\t\treturn routeVm.credsEnabled = ssFlagSvc.checkState('fc-new-credentials-enabled');\n\t\t},\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - General Config';\n\t\t},\n\t\tisHRMSEnabled: /*@ngInject*/ function(ssMultiInitiativeFeatureDetectorSvc) {\n\t\t\trouteVm.isHRMSEnabled = ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled();\n\t\t\trouteVm.isReadonly = ssMultiInitiativeFeatureDetectorSvc.isConfigurationListManagementReadonly();\n\t\t}\n\t}\n};\n\n// #-- END State (/general-config) --# //\n// #---------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst baseRoute = `/ec-settings`;\n\tlet defaultRoute = 'ec-settings/general-config/credentials/custom/certificate-licenses';\n\n\tsidekick.events.on('feature-flags-ready', () => {\n\t\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\t\t$urlRouterProvider.when(`${baseRoute}/general-config`, defaultRoute);\n\n\t\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n\t}, { greedy: true });\n});\n","import {State} from 'base-state';\n// #----------------------------------------------------------# //\n// #---- State (/general-config/job-types/job-type-detail) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.jobTypes.jobTypeDetail';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/{jobTypeId:[0-9A-Za-z-]{36}}?action',\n\ttemplateUrl: 'routes/general-config/job-types/job-type-detail/job-type-detail.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Job Type Detail';\n\t\t},\n\t\teditDetails: ['$stateParams', function($stateParams){\n\t\t\treturn $stateParams.edit;\n\t\t}]\n\n\t}\n};\n\n\n// #-- END State (/general-config/job-types/job-type-detail) --# //\n// #----------------------------------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #-------------------------------------------------------------------------------------# //\n// #---- Segment (/general-config/job-types/job-type-detail/segment-job-type-detail) ----# //\n\nclass JobTypeDetail extends Segment {\n\t/*@ngInject*/\n\tcontroller($scope, $injector, ssAsync, ssEnum, ssJobTypesApi, $stateParams, $location,\n\t\t\t\tssToastHlp, $log, ssDateHlp, ssValidationHlp, ssModalSvc, $q, ssOrganizationSvc,\n\t\t\t\tssStorage, $sce, ssDateByOrgHlp) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigJobTypesJobTypeDetailJobTypeDetailLogic');// jshint ignore:line\n\n\t\tlet org;\n\t\tlet orgId;\n\t\tlet currentPaySchedule;\n\t\trouteVm.paySchedules = null;\n\t\trouteVm.jobType = null;\n\t\trouteVm.addingPS = null;\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t\torg: null,\n\t\t\teditDetails: false,\n\t\t\tselectedJobType: $stateParams.jobTypeId,\n\t\t\tselectedEmpGroup: '',\n\t\t\thasValidPaySchedules: false,\n\t\t\tcurrentJobTypeDetail: null,\n\t\t\tfutureJobTypeDetails: [],\n\t\t\tpastJobTypeDetails: [],\n\t\t\tnewJobTypeDetail: null,\n\t\t\tshowJTDhistory: false,\n\t\t\taddingJTD: false,\n\t\t\tdtOptionsForCurrentJTD: {},\n\t\t\tdtOptionsForFutureJTD: {},\n\t\t\tdtOptionsForNewJTD: {}\n\t\t};\n\n\t\tconst validation = $scope.validation = {\n\t\t\trequired: ssValidationHlp.required(),\n\t\t\texternalId: ssValidationHlp.string({ maxLength: 100 })\n\t\t}; // jshint ignore:line\n\n\t//\tGet the ORG Id for use in clearing the cache\n\t\tssAsync(function* () {\n\t\t\ttry {\n\t\t\t\tvm.loadingJTD = vm.loadingPS = true;\n\t\t\t\tvm.org = org = yield ssOrganizationSvc.getActiveOrg();\n\t\t\t\torgId = org.id;\n\t\t\t\tyield routeVm.fetchJobType();\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t} finally{\n\t\t\t\tvm.loadingJTD = vm.loadingPS = false;\n\t\t\t}\n\t\t})();\n\n\t//\twatches the 'job type details' dropdown and changes the route to display details for the selected job type\n\t\t$scope.$watch('vm.selectedJobType', function (val) {\n\t\t\tlet path = `/ec-settings/general-config/job-types/${val}`;\n\t\t\t$location.path(path);\n\t\t});\n\n\t//\tchecks for valid pay schedules\n\t\t$scope.$watch('jobType._paySchedules', function (nv, ov) {\n\t\t\tif(!nv && nv === ov) { return;}\n\t\t\thasValidPaySchedules(nv);\n\t\t});\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\ttoggleJTDhistory(){\n\t\t\t\tvm.showJTDhistory = !vm.showJTDhistory;\n\t\t\t},\n\t\t\taddJobTypeDetail: () => {\n\t\t\t\tvar latestJTD = getLatestJTD();\n\t\t\t\tvar jobTypeDetailObj = jobTypeDetail(latestJTD);\n\t\t\t\tvar valid = hasValidJTDs();\n\t\t\t\tif(valid) {\n\t\t\t\t\tsetupMinDates();\n\t\t\t\t}\n\t\t\t\tvm.newJobTypeDetail = jobTypeDetailObj;\n\t\t\t},\n\t\t\taddSchedule: () => {\n\t\t\t\trouteVm.addingPS = true;\n\t\t\t\tlet newSchedule = createNewSchedule();\n\t\t\t\trouteVm.paySchedules.push(newSchedule);\n\t\t\t\trouteVm.paySchedules.sort(logic.byMoreRecent)\n\t\t\t\tdisableEditOnAdd(newSchedule);\n\t\t\t},\n\n\t\t\tcancelEditDetails: () => {\n\t\t\t\trouteVm.jobType._jobTypeDetails[0].$revert();\n\t\t\t\tvm.editDetails = false;\n\t\t\t},\n\n\t\t\tsaveDetails: ssAsync(function* (){\n\t\t\t\ttry {\n\t\t\t\t\tvm.savingDetails = true;\n\t\t\t\t\tyield routeVm.jobType._jobTypeDetails[0].$save().then(() => {\n\t\t\t\t\t\tssStorage.clear(`${orgId}_jobTypes`);\n\t\t\t\t\t});\n\t\t\t\t\tssToastHlp.success(``, 'Job Type Details Saved', false);\n\t\t\t\t\tvm.editDetails = false;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tssToastHlp.error(``, 'Error while saving Job Type Details', false);\n\t\t\t\t\t$log.error('Error while saving Job Type Details', error);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.savingDetails = false;\n\t\t\t\t}\n\t\t\t}),\n\n\t\t\tsavePaySchedule: (ps) => {\n\t\t\t\tcheckSchedule(ps).then(() => {\n\n\t\t\t\t\tps.isSaving = true;\n\t\t\t\t\tsetActiveSteps(ps);\n\t\t\t\t\trouteVm.forceChangeToPayLanes(ps);\n\n\t\t\t\t\twhatToSave()().then(() => {\n\t\t\t\t\t \tssToastHlp.success(``, `Pay Schedule \"${ps._name}\"\" saved`, false);\n\t\t\t\t\t \tssStorage.clear(`${orgId}_jobTypes`);\n\t\t\t\t\t\tps.isEditing = false;\n\t\t\t\t\t\tps.showDetails = ps.isCurrent;\n\t\t\t\t\t\trouteVm.addingPS = false;\n\t\t\t\t\t\trouteVm.fetchJobType(false, true);\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tssToastHlp.error(``,`Error while saving Pay Schedule \"${ps._name}\"`, false);\n\t\t\t\t\t\t$log.error(`Error while saving Pay Schedule \"${ps._name}\"`, error);\n\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\tps.isSaving = false;\n\t\t\t\t\t\tdelete ps.isTemp;\n\t\t\t\t\t});\n\n\t\t\t\t\tfunction whatToSave(){\n\t\t\t\t\t\t// if the pay schedule has $save, it is an existing JSONApi Object and can save itself.\n\t\t\t\t\t\tif(ps.$save) {\n\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\treturn ps.$save();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the pays schedule doesn't have $save and is therfore not a JSONApi Object, and is a new pay schedule.\n\t\t\t\t\t\t\t//\tgo up a level and have the collection save itself (and its children)\n\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\treturn routeVm.paySchedules.$save(false);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t},\n\t\t\tsaveJTD: function(jtd){\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tjtd.isProcessing = true;\n\t\t\t\t\t\tif(jtd.id <= 0){\n\t\t\t\t\t\t\trouteVm.jobType._jobTypeDetails.push(jtd);\n\t\t\t\t\t\t\tyield routeVm.jobType._jobTypeDetails.$save();\n\t\t\t\t\t\t\tvm.newJobTypeDetail = null;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tyield jtd.$save();\n\t\t\t\t\t\t\tif(jtd.isFuture) {jtd.expanded = false;}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjtd.editMode = false;\n\t\t\t\t\t\trouteVm.fetchJobType(true, false);\n\t\t\t\t\t\tssToastHlp.success(``, `Job Type Detail saved`, false);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tssToastHlp.error(``,`Error while saving Job Type detail`, false);\n\t\t\t\t\t\t$log.error(`Error while saving Job Type detail`, e);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tjtd.isProcessing = false;\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t};\n\n\t\tfunction hasValidJTDs() {\n\t\t\treturn getValidJTDs(routeVm.jobType._jobTypeDetails).length > 0;\n\t\t}\n\n\t\tfunction setupMinDates(_pastJTDs = null, _currentJTD = null, _futureJTDs= null){\n\t\t\tvar jobTypeDetails = getValidJTDs(routeVm.jobType._jobTypeDetails);\n\t\t\tlogic.calculateDateBoundaries({ list: jobTypeDetails });\n\t\t}\n\n\t\tfunction getLatestJTD() {\n\t\t\tvar valid = hasValidJTDs();\n\t\t\tif(valid){\n\t\t\t\treturn routeVm.jobType._jobTypeDetails\n\t\t\t\t\t\t.reduce((prev, curr) => {\n\t\t\t\t\treturn prev._fromDateUtc > curr._fromDateUtc ? prev : curr;\n\t\t\t\t}, routeVm.jobType._jobTypeDetails[0]);\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t//\tPre-check to saving a schedule\n\t\tfunction checkSchedule(schedule) {\n\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar errors = [];\n\n\t\t\tlet prevSchedule = getPreviousSchedule(schedule);\n\t\t\tlet nextSchedule = getNextSchedule(schedule);\n\n\t\t\tif(schedule._fromDateUtc > schedule._toDateUtc) {\n\t\t\t\terrors.push('This Pay Schedule cannot have a start date that is later than its end date.');\n\t\t\t} else {\n\t\t\t\tif(prevSchedule) {\n\n\t\t\t\t\tlet errType, showLaneError, showStepError;\n\n\t\t\t\t\tif(schedule._payLanes.length < prevSchedule._payLanes.length) {\n\t\t\t\t\t\tshowLaneError = true;\n\t\t\t\t\t\terrType = 'Lanes';\n\t\t\t\t\t}\n\t\t\t\t\tif(schedule._payLanes[0].paySteps.length < prevSchedule._payLanes[0].paySteps.length) {\n\t\t\t\t\t\tshowStepError = true;\n\t\t\t\t\t\terrType = 'Steps';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(showLaneError && showStepError) {\n\t\t\t\t\t\terrType = 'Lanes & Steps';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(showLaneError || showStepError) {\n\t\t\t\t\t\terrors.push(`This Pay Schedule cannot have less ${errType} <br />than the previous Pay Schedule.`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(nextSchedule) {\n\n\t\t\t\t\tlet errType, showLaneError, showStepError;\n\n\t\t\t\t\tif(nextSchedule._payLanes.length < schedule._payLanes.length) {\n\t\t\t\t\t\tshowLaneError = true;\n\t\t\t\t\t\terrType = 'Lanes';\n\t\t\t\t\t}\n\t\t\t\t\tif(nextSchedule._payLanes[0].paySteps.length < schedule._payLanes[0].paySteps.length) {\n\t\t\t\t\t\tshowStepError = true;\n\t\t\t\t\t\terrType = 'Steps';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(showLaneError && showStepError) {\n\t\t\t\t\t\terrType = 'Lanes & Steps';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(showLaneError || showStepError) {\n\t\t\t\t\t\terrors.push(`This Pay Schedule cannot have more ${errType} <br />than the following Pay Schedule.`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(errors.length) {\n\n\t\t\t\terrors = errors.map((e) => {\n\t\t\t\t\treturn $sce.trustAsHtml(e);\n\t\t\t\t});\n\n\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\terrors: errors,\n\t\t\t\t\ttitle: `<h2>Invalid Pay Schedule</h2>`,\n\t\t\t\t\tcontent: '<ul class=\"error-list\"><li ng-repeat=\"error in errors\" ng-bind-html=\"error\"></li></ul>',\n\t\t\t\t\tshowPrimary: false,\n\t\t\t\t\tsecondaryText: 'Ok',\n\t\t\t\t}).then(() => {\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t\treturn deferred.promise;\n\n\t\t}\n\n\t//\tSets the status of the pay rates based on value\n\t\tfunction setActiveSteps(schedule) {\n\t\t\tschedule._payLanes.forEach(lane => {\n\t\t\t\tlane.paySteps.forEach(step => {\n\t\t\t\t\tvar value = step.payRate;\n\t\t\t\t\t// if the payRate is not filled in, set to 0 but allow it to be active.\n\t\t\t\t\tif (value === '') {\n\t\t\t\t\t\tstep.payRate = 0;\n\t\t\t\t\t\tstep.active = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t// try to pull out a number from our value\n\t\t\t\t\t\tvalue = parseFloat(step.payRate);\n\t\t\t\t\t}\n\t\t\t\t\t// this step is inactive if the rate is 0\n\t\t\t\t\tstep.active = (value >= 0);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t//\tgets the user defined job types\n\t\tfunction getJobTypes() {\n\t\t\tssAsync(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tconst allJobTypes = yield ssJobTypesApi.query({ limit: 500 });\n\n\t\t\t\t\tvm.jobTypeOptions = allJobTypes.map(function (item) {\n\t\t\t\t\t\tvar obj = {};\n\t\t\t\t\t\tobj['name'] = item._name;\n\t\t\t\t\t\tobj['value'] = item.id;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('Error getting job Types', e);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t//\treceives a date an increments it by one day\n\t\tfunction nextDay(serverFromDate){\n\t\t\tlet startDate = ssDateByOrgHlp.utcIsoToRelativeMoment(serverFromDate, org);\n\t\t\tlet newStartDate = startDate.clone().add(1, 'days');\n\t\t\treturn newStartDate;\n\t\t}\n\n\t\tfunction createNewSchedule() {\n\n\t\t\tlet latestSchedule;\n\t\t\tif(vm.hasValidPaySchedules) {\n\t\t\t\tlatestSchedule = getLatestSchedule(routeVm.paySchedules);\n\t\t\t}\n\t\t\tvar schedule = {\n\t\t\t\t'id': 0,\n\t\t\t\t'_name': null,\n\t\t\t\t'_fromDateUtc': ssDateByOrgHlp.todaysStartRelativeTo(org).toISOString(),\n\t\t\t\t'_toDateUtc': ssDateHlp.foreverFuture(),\n\t\t\t\t'_externalId': null,\n\t\t\t\t'_payRateFrequency': 0,\n\t\t\t\t'_payLanes': [],\n\t\t\t\t'isTemp': true,\n\t\t\t\t'isDefault': false\n\t\t\t};\n\t\t\tif (latestSchedule) {\n\t\t\t\tschedule._fromDateUtc = nextDay(latestSchedule._fromDateUtc).toISOString();\n\t\t\t\t//\tcopy over the lanes and steps from the latest schedule\n\t\t\t\tlatestSchedule._payLanes.forEach(lane => {\n\t\t\t\t\tvar newLane = {\n\t\t\t\t\t\t'name': lane.name,\n\t\t\t\t\t\t'paySteps': []\n\t\t\t\t\t};\n\n\t\t\t\t\tlane.paySteps.forEach(step => {\n\t\t\t\t\t\tvar newStep = {\n\t\t\t\t\t\t\t'name': step.name,\n\t\t\t\t\t\t\t'active': step.active,\n\t\t\t\t\t\t\t'payRate': step.payRate\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnewLane.paySteps.push(newStep);\n\t\t\t\t\t});\n\n\t\t\t\t\tschedule._payLanes.push(newLane);\n\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tschedule._payLanes.push({\n\t\t\t\t\t'name': 'Lane 1',\n\t\t\t\t\t'paySteps': [{\n\t\t\t\t\t\t'name': 'Step 1',\n\t\t\t\t\t\t'active': true,\n\t\t\t\t\t\t'payRate': 0\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\textendSchedule(schedule);\n\t\t\trouteVm.updateLaneWidths(schedule);\n\t\t\tsetMinValues(schedule);\n\n\t\t\treturn schedule;\n\t\t}\n\n\n\t//\tFind the active schedule\n\t\tfunction getCurrentPaySchedule(schedules) {\n\t\t\tconst now = moment(ssDateByOrgHlp.todaysEndRelativeTo(org));\n\t\t\treturn schedules.find((schedule) => {\n\t\t\t\treturn ssDateByOrgHlp.utcIsoToRelativeMoment(schedule._fromDateUtc, org).isSameOrBefore(now) &&\n\t\t\t\tssDateByOrgHlp.utcIsoToRelativeMoment(schedule._toDateUtc, org).isAfter(now)\n\t\t\t});\n\t\t}\n\n\t// Find the closest previously dated schedule of the target schedule\n        function getPreviousSchedule(schedule) {\n\t\t\tif(schedule.isCurrent) { return schedule;}          \n\t\t\tlet start = ssDateByOrgHlp.utcIsoToRelativeMoment(schedule._fromDateUtc, org);\n\t\t\treturn routeVm.paySchedules.filter((ps) => {\n\t\t\t\t\tlet psTime = ssDateByOrgHlp.utcIsoToRelativeMoment(ps._fromDateUtc, org);\n\t\t\t\t\treturn !ps.isDefault && psTime.isBefore(start);\n\t\t\t\t}).reduce((prev, curr) => {\n\t\t\t\t\tif(prev === 0) { return curr; }\n\t\t\t\t\tlet prevFromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(prev._fromDateUtc, org);\n\t\t\t\t\tlet currentFromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(curr._fromDateUtc, org)\n\t\t\t\t\treturn prevFromDateUtc.isAfter(currentFromDateUtc) ? prev : curr;\n\t\t\t\t}, 0);\n\t\t}\n\n    //  Find the closest previously dated schedule of the target schedule\n        function getNextSchedule(schedule) {\n\t\t\tlet start = ssDateByOrgHlp.utcIsoToRelativeMoment(schedule._fromDateUtc, org);\n\t\t\treturn routeVm.paySchedules.filter((ps) => {\n\t\t\t\t\tlet psTime = ssDateByOrgHlp.utcIsoToRelativeMoment(ps._fromDateUtc, org);\n\t\t\t\t\treturn psTime.isAfter(start);\n\t\t\t\t}).reduce((prev, curr) => {\n\t\t\t\t\tif(prev === 0) { return curr; }\n\t\t\t\t\tlet prevFromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(prev._fromDateUtc, org);\n\t\t\t\t\tlet currentFromDateUtc = ssDateByOrgHlp.utcIsoToRelativeMoment(curr._fromDateUtc, org)\n\t\t\t\t\treturn prevFromDateUtc.isBefore(curr._fromDateUtc) ? prev : curr;\n\t\t\t\t}, 0);\n\t\t}\n\n\n\t//\tFind the latest schedule based on the 'from' date of each schedule\n\t\tfunction getLatestSchedule(schedules) {\n\t\t\treturn schedules.reduce((prev, curr) => {\n\t\t\t\treturn prev._fromDateUtc > curr._fromDateUtc ? prev : curr;\n\t\t\t}, schedules[0]);\n\t\t}\n\n\t//\tmethod to only allow one schedule to be edited at a time\n\t\tfunction disableEditOnAdd(schedule) {\n\t\t\trouteVm.paySchedules.forEach((ps) => {\n\t\t\t\tif(ps !== schedule && ps.isEditing && ps.$revert) {\n\t\t\t\t\trouteVm.forceChangeToPayLanes(ps);\n\t\t\t\t\tps.$revert();\n\t\t\t\t\tps.isEditing = false;\n\t\t\t\t\tps.showDetails = ps.isCurrent;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t//\tchecks to see if any schedules exist beside the default\n\t\tfunction hasValidPaySchedules(schedules) {\n\t\t\treturn schedules.filter((ps) => {\n\t\t\t\treturn !ps.isDefault;\n\t\t\t}).length;\n\t\t}\n\n\t//\tset the minimum lane, step & start date values\n\t\tfunction setMinValues(schedule) {\n\t\t//\tset the minimum start date\n\t\tif (schedule && vm.hasValidPaySchedules) {\n\t\t\tlet currentStartDate = schedule ? ssDateByOrgHlp.utcIsoToRelativeMoment(schedule._fromDateUtc, org) : ssDateByOrgHlp.todaysStartRelativeTo(org);\n\t\t\tschedule.dtOptions = { minDate: currentStartDate.toDate() };\n\t\t}\n\t\t//\tset the minimum lane and step values\n\t\t\tlet prevSchedule = getPreviousSchedule(schedule);\n\t\t\tschedule.minLanes = prevSchedule ? prevSchedule._payLanes.length : 1;\n\t\t\tschedule.minSteps = prevSchedule ? prevSchedule._payLanes[0].paySteps.length : 1;\n\t\t}\n\n\t//\tExtend the schedule with needed props\n\t\tfunction extendSchedule(schedule) {\n\t\t//\tFind and ignore the default schedule\n\t\t\tif(schedule.isDefault) { return;}\n\t\t//\tDetermine the schedule's state\n\t\t\tschedule.isCurrent = schedule.id !== 0 && ssDateByOrgHlp.isCurrent({obj: schedule, org});\n\t\t\tschedule.isFuture = ssDateByOrgHlp.isInFuture({obj: schedule, org});\n\t\t\tschedule.isPast = ssDateByOrgHlp.isInPast({obj: schedule, org});\n\t\t//\tschedule is in edit mode if it's being added\n\t\t\tschedule.isEditing = schedule.isTemp ? true : false;\n\t\t//\tshow the pay grid if the schedule is being added or active\n\t\t\tschedule.showDetails = schedule.isTemp || schedule.isCurrent;\n\t\t//\tonly show the end date if it exists and is not forever future\n\t\t\tschedule.showEndDate = schedule._toDateUtc && !ssDateHlp.isForeverFuture(schedule._toDateUtc);\n\t\t//\tretrieve the saved pay rate name\n\t\t\tschedule.payRateFrequency = ssEnum.salaryType.byValue(schedule._payRateFrequency);\n\t\t}\n\n\t//\treassigns the pay lanes to a copy of itself to allow JSON API to detect a change\n\t\trouteVm.forceChangeToPayLanes = (schedule) => {\n\t\t\tschedule._payLanes = schedule._payLanes.slice();\n\t\t};\n\n\t//\tcalculate lane widths based on the number of lanes\n\t\trouteVm.updateLaneWidths = (schedule) => {\n\t\t\tschedule.colStyles = {};\n\t\t\treturn schedule.colStyles['width'] = `calc(100% / ${schedule._payLanes.length})`;\n\t\t};\n\n\t//\tfetch/refresh the data\n\t\trouteVm.fetchJobType = function(processJTD = true, processPS = true){\n\n\t\t\tvar _defer = $q.defer();\n\n\t\t\tssAsync(function* () {\n\t\t\t\ttry {\n\t\t\t\t\trouteVm.jobType = $scope.jobType = yield ssJobTypesApi.get({\n\t\t\t\t\t\tid: $stateParams.jobTypeId,\n\t\t\t\t\t\tinclude: 'JobTypeDetails,PaySchedules'\n\t\t\t\t\t});\n\n\t\t\t\t\tif(processJTD){\n\t\t\t\t\t\tprocessJobTypeDetails(routeVm.jobType._jobTypeDetails);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(processPS) {\n\t\t\t\t\t\trouteVm.paySchedules = routeVm.jobType._paySchedules;\n\t\t\t\t\t\tcurrentPaySchedule = getCurrentPaySchedule(routeVm.paySchedules);\n\t\t\t\t\t\trouteVm.paySchedules.forEach(extendSchedule);\n\t\t\t\t\t\trouteVm.paySchedules.forEach(routeVm.updateLaneWidths);\n\t\t\t\t\t\tlogic.calculateDateBoundaries({ list: routeVm.paySchedules });\n\t\t\t\t\t\tvm.hasValidPaySchedules = hasValidPaySchedules(routeVm.paySchedules);\n\t\t\t\t\t}\n\t\t\t\t\tgetJobTypes();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tssToastHlp.error(``, `Error Retrieving Job Type Details`, false);\n\t\t\t\t\tconsole.error('ERROR', e);\n\t\t\t\t} finally {\n\t\t\t\t\t_defer.resolve();\n\t\t\t\t}\n\t\t\t})();\n\t\t\treturn _defer.promise;\n\t\t};\n\n\t\tfunction jobTypeDetail(jtd){\n\t\t\tconst todayRelativeToStr = ssDateByOrgHlp.todaysStartRelativeTo(org, true);\n\t\t\tlet fromDateUtc = (!jtd || ssDateHlp.isForeverPast(jtd._fromDateUtc)) ? todayRelativeToStr : nextDay(jtd._fromDateUtc).toISOString();\n\t\t\tlet minDate = (!jtd || ssDateHlp.isForeverPast(jtd._fromDateUtc)) ? null : new Date(fromDateUtc);\n\t\t\treturn {\n\t\t\t\t_fromDateUtc: fromDateUtc,\n\t\t\t\t_toDateUtc: ssDateHlp.foreverFuture(),\n\t\t\t\t_workDaysPerYear: (!jtd) ? 0 : jtd._workDaysPerYear,\n\t\t\t\t_payPeriodsPerYear: (!jtd) ? 0 : jtd._payPeriodsPerYear,\n\t\t\t\t_hoursPerDay: (!jtd) ? 0 : jtd._hoursPerDay,\n\t\t\t\t_fTE: (!jtd) ? 0 : jtd._fTE,\n\t\t\t\t_vacationDaysPerSchoolYear: (!jtd) ? 0 : jtd._vacationDaysPerSchoolYear,\n\t\t\t\t_sickDaysPerSchoolYear: (!jtd) ? 0 : jtd._sickDaysPerSchoolYear,\n\t\t\t\t_personalDaysPerSchoolYear: (!jtd) ? 0 : jtd._personalDaysPerSchoolYear,\n\t\t\t\t_paidHolidaysPerSchoolYear: (!jtd) ? 0 : jtd._paidHolidaysPerSchoolYear,\n\t\t\t\tisCurrent:false,\n\t\t\t\tisFuture:true,\n\t\t\t\tisPast:false,\n\t\t\t\teditMode: true,\n\t\t\t\tid: 0,\n\t\t\t\texpanded: true,\n\t\t\t\tdtOptions:{\n\t\t\t\t\tminDate\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction getValidJTDs(_jobTypeDetails){\n\t\t\treturn _jobTypeDetails.filter(x =>\n\t\t\t\t\t!ssDateHlp.isForeverPast( x._fromDateUtc) ||\n\t\t\t\t\t(x._fTE !== 0 ||\n\t\t\t\t\tx._hoursPerDay !== 0 ||\n\t\t\t\t\tx._workDaysPerYear !== 0 ||\n\t\t\t\t\tx._payPeriodsPerYear !== 0 ||\n\t\t\t\t\tx._paidHolidaysPerSchoolYear !== 0 ||\n\t\t\t\t\tx._sickDaysPerSchoolYear !== 0 ||\n\t\t\t\t\tx._personalDaysPerSchoolYear !== 0 ||\n\t\t\t\t\tx._vacationDaysPerSchoolYear !== 0));\n\t\t}\n\n\t\tfunction getFutureJTDs(_jobTypeDetails){\n\t\t\tvar futureJTDs = _jobTypeDetails\n\t\t\t\t\t\t\t\t.filter(x => ssDateByOrgHlp.isInFuture({ obj: x, org }))\n\t\t\t\t\t\t\t\t.sort((a, b) => { return new Date(b._toDateUtc) - new Date(a._toDateUtc); });\n\t\t\tif(!futureJTDs.length) { return []; }\n\t\t\treturn futureJTDs;\n\t\t}\n\n\t\tfunction getCurrentJTD(_jobTypeDetails){\n\t\t\tvar currentJTD = _jobTypeDetails.find(x => ssDateByOrgHlp.isCurrent({ obj: x, org }));\n\t\t\tif(!currentJTD) { return null; }\n\t\t\treturn currentJTD;\n\t\t}\n\n\t\tfunction getPastJTDs(_jobTypeDetails){\n\t\t\tvar pastJTDs = _jobTypeDetails\n\t\t\t\t\t\t\t.filter(x => ssDateByOrgHlp.isInPast({ obj: x, org }))\n\t\t\t\t\t\t\t.sort((a, b) => { return new Date(b._toDateUtc) - new Date(a._toDateUtc); });;\n\t\t\tif(!pastJTDs.length) { return []; }\n\t\t\treturn pastJTDs;\n\t\t}\n\n\n\n\t\tfunction processJobTypeDetails(_jobTypeDetails){\n\t\t\tvar jobTypeDetails = getValidJTDs(_jobTypeDetails);\n\t\t\tvm.currentJobTypeDetail = getCurrentJTD(jobTypeDetails);\n\t\t\tvm.futureJobTypeDetails = getFutureJTDs(jobTypeDetails);\n\t\t\tvm.pastJobTypeDetails =  getPastJTDs(jobTypeDetails);\n\t\t\tsetupMinDates(vm.pastJobTypeDetails, vm.currentJobTypeDetail, vm.futureJobTypeDetails);\n\t\t}\n\n\t}\n}\n\n\n\n\n\n// #-- END Segment (/general-config/job-types/job-type-detail/segment-job-type-detail) --# //\n// #-------------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigJobTypesJobTypeDetailJobTypeDetail', () => new JobTypeDetail('job-type-detail'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\tcalculateDateBoundaries,\n\t\tbyMoreRecent\n\t};\n\n\tfunction byMoreRecent(a, b){\n\t\treturn new Date(b._toDateUtc).getTime() - new Date(a._fromDateUtc).getTime();\n\t};\n\n\tfunction calculateDateBoundaries({ list, fromProp = '_fromDateUtc', toProp = '_toDateUtc' }) {\n\t\tlist.sort(byMoreRecent);\n\t\tlist.forEach(function(item, index, arr) {\n\t\t\tlet currentItem = item;\n\t\t\tlet nextItem = arr[index + 1];\n\t\t\tif(nextItem) {\n\t\t\t\tcurrentItem.dtOptions = { minDate: moment(nextItem[fromProp]).add(1, 'days').toDate() }\n\t\t\t}else {\n\t\t\t\tcurrentItem.dtOptions = {};\n\t\t\t}\n\t\t});\n\t\treturn list;\n\t}\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigJobTypesJobTypeDetailJobTypeDetailLogic', logic);\n","import {State} from 'base-state';\n// #------------------------------------------# //\n// #---- State (/general-config/job-types) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.jobTypes';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/job-types',\n\ttemplateUrl: 'routes/general-config/job-types/job-types.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Job Types';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/general-config/job-types) --# //\n// #------------------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #-----------------------------------------------------------------------# //\n// #---- Segment (/general-config/job-types/segment-job-types-content) ----# //\n\nclass JobTypesContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $sce, $scope, $state, ssEnum, ssAsync, ssJobTypesApi, ssActiveUserSvc, ssListSvc, ssDateHlp, ssDateByOrgHlp, ssOrganizationSvc, ssMultiInitiativeFeatureDetectorSvc, ssConfigurationHlp) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm;\n\t\tconst parentVm = $scope.parentVm\n\n\t\tparentVm.HRMSmessage = 'Job Types are editable in the HRMS application, but are referred to as \"Role Types\"';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigJobTypesJobTypesContentLogic'); // jshint ignore:line\n\t\tvar org = null;\n\t\tconst now = new Date();\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\tdataCategoryEnum: 'jobTypeCategories',\n\t\t\t\tdataCategoryOptions: ssEnum.jobTypeCategories.getEnums(),\n\t\t\t\tcustomExtend: function(JobType) {\n\t\t\t\t\treturn go.extendJobType(JobType);\n\t\t\t\t},\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Job Type',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tselector: 'job-type-col',\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: ssMultiInitiativeFeatureDetectorSvc.showJobTypeInfo() ? `<div class=\"job-type-toggle-group\">\n\t\t\t\t\t\t\t<super-popover link=\"{{ item._name }}\" ss-icon-after=\"exclamation-circle\" ng-click=\"item.loadDetails()\">\n\t\t\t\t\t\t\t\t<div ng-bind-html=\"item.templateHtml\"></div>\n\t\t\t\t\t\t\t</super-popover>\n\t\t\t\t\t\t</div>` : `<span ng-bind=\"item._name\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"Name\" model=\"item._name\" ss-validate=\"validation.required(item._name, 'Name')\" required=\"true\"></super-input-text>`,\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Employment Group',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tselector: 'job-type-emp-group-col',\n\t\t\t\t\tviewTemplate: `<p ng-bind=\"item.selectedEmpGroup\"></p>`,\n\t\t\t\t\teditTemplate: `<super-select-list id=\"bargainingUnitControl\" model=\"item._bargainingUnit.id\" ss-validate=\"validation.required(item._bargainingUnit.id, 'Employment Group')\" required=\"true\"><super-select-list-item ng-repeat=\"option in routeVm.empGroupOptions\" label=\"option.name\" value=\"option.value\"></super-select-list-item>\n\t\t\t\t\t\t</super-select-list>`,\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Job Type External Id',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tselector: 'job-type-ext-id-col',\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item._externalId\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"External ID\" model=\"item._externalId\" ss-validate=\"validation.externalId(item._externalId, 'External ID')\" required=\"true\"></super-input-text>`,\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Pay Schedule External Id',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tselector: 'pay-schedule-ext-id-col',\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item.payScheduleExtId\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"External ID\" model=\"item.payScheduleExtId\" ss-validate=\"validation.externalId(item.payScheduleExtId, 'External ID')\" required=\"true\"></super-input-text>`,\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Data Analysis',\n\t\t\t\t\tselector: 'job-type-data-category-col',\n\t\t\t\t\tinfo: `These categories help Frontline Education aggregate data to provide tools which better serve your needs.`,\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item.selectedDataCategory\"></span>`,\n\t\t\t\t\teditTemplate: `<super-select-list model=\"item._dataCategory\" ss-validate=\"validation.required(item._dataCategory)\"><super-select-list-item ng-repeat=\"option in config.dataCategoryOptions | orderBy: 'name'\" label=\"option.name\" value=\"option.value\"></super-select-list-item></super-select-list>`,\n\t\t\t\t}],\n\t\t\t\tcustomActions: [{\n\t\t\t\t\tlabel: 'Edit',\n\t\t\t\t\tfn: function(actions, item) {\n\t\t\t\t\t\treturn actions.editItem(item);\n\t\t\t\t\t}\t\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Assign Details',\n\t\t\t\t\tfn: function(actions, item) {\n\t\t\t\t\t\t$state.go('base.generalConfig.jobTypes.jobTypeDetail', { 'jobTypeId': item.id });\n\t\t\t\t\t\t// return routeVm.assignDetails(item);\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create && !parentVm.isReadonly || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit && !parentVm.isReadonly || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete && !parentVm.isReadonly || false\n\t\t\t}\n\t\t};\n\n\t\tif (!ssMultiInitiativeFeatureDetectorSvc.showEmploymentGroups()) {\n\t\t\tvm.config.gridColumns = vm.config.gridColumns.filter(col => col.selector !== 'job-type-emp-group-col');\n\t\t}\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\n\t\t\t\torg = yield ssOrganizationSvc.getActiveOrg();\n\n\t\t\t\tconsole && console.log && console.log(org);\n\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_jobTypes`;\n\t\t\t\t//\tcreate this data on routeVm so the grid-group component has access to it\n\t\t\t\trouteVm.empGroupOptions = yield ssListSvc.getByExternalId('jobtype.employmentgroups');\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// this method navigates to the details page for a job type and is placed in routeVm so that the grid component can access it\n\t\t// routeVm.assignDetails = function(item) {\n\t\t// \t$state.go('base.generalConfig.jobTypes.jobTypeDetail', { 'jobTypeId': item.id });\n\t\t// };\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tgetJobTypes(filter) {\n\t\t\t\treturn ssJobTypesApi.query(Object.assign({include: 'paySchedules'}, filter));\n\t\t\t},\n\n\t\t\textendJobType(jobType) {\n\t\t\t\tif (jobType._bargainingUnit == null) {\n\t\t\t\t\tjobType._bargainingUnit = { id: '' };\n\t\t\t\t}\n\t\t\t\tif (jobType._currentJobTypeDetail != null) {\n\t\t\t\t\t// Determine if a job type is new\n\t\t\t\t\tif (ssDateHlp.isForeverPast(jobType._currentJobTypeDetail.changedUtc) || jobType._currentJobTypeDetail.changedUtc === null) {\n\t\t\t\t\t\tjobType.isNew = true;\n\t\t\t\t\t}\n\t\t\t\t\t// check to see if there are any job type detail values other than 0\n\t\t\t\t\tlet detailProps = ['fte', 'hoursPerDay', 'workDaysPerYear', 'payPeriodsPerYear', 'paidHolidaysPerSchoolYear', 'sickDaysPerSchoolYear', 'personalDaysPerSchoolYear',\n\t\t\t\t\t\t'vacationDaysPerSchoolYear'\n\t\t\t\t\t];\n\n\t\t\t\t\tjobType.hasCustomDetails = detailProps.reduce((prev, curr) => {\n\t\t\t\t\t\treturn prev + jobType._currentJobTypeDetail[curr];\n\t\t\t\t\t}, 0);\n\n\t\t\t\t}\n\t\t\t\t//\tDetermine the currently assigned employment group\n\t\t\t\tvar assignedEmpGroup = routeVm.empGroupOptions.find(function(group) {\n\t\t\t\t\treturn group.value === jobType._bargainingUnit.id;\n\t\t\t\t});\n\n\t\t\t\tjobType.payScheduleExtId = jobType._paySchedules.find((schedule) => {\n\t\t\t\t\treturn schedule.id !== 0 && ssDateByOrgHlp.isCurrent({obj: schedule, org})\n\t\t\t\t})._externalId;\n\n\t\t\t\tconsole && console.log && console.log('jobType.payScheduleExtId', jobType.payScheduleExtId);\n\t\t\t\tjobType.selectedEmpGroup = assignedEmpGroup != null ? assignedEmpGroup.name : 'Please Select';\n\t\t\t\tjobType.templateHtmlLoaded = false;\n\t\t\t\tjobType.templateHtml = $sce.trustAsHtml('<div></div>');\n\t\t\t\tjobType.loadDetails = function() {\n\t\t\t\t\tif (!jobType.templateHtmlLoaded) {\n\t\t\t\t\t\tjobType.templateHtml = $sce.trustAsHtml('<div>Loading...</div>');\n\t\t\t\t\t\tssJobTypesApi.get({\n\t\t\t\t\t\t\tid: jobType.id,\n\t\t\t\t\t\t\tinclude: 'JobTypeDetails,PaySchedules'\n\t\t\t\t\t\t}).then(function(jt) {\n\t\t\t\t\t\t\tjobType.templateHtmlLoaded = true;\n\t\t\t\t\t\t\tjobType.templateHtml = getDetailHtml(jt);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tfunction getDetailHtml(jobType) {\n\t\t\t//\tdetermine if the jobType has an active schedule\n\t\t\tlet hasActivePaySchedule = jobType._paySchedules.filter((ps) => {\n\t\t\t\treturn ps._fromDateUtc && !ssDateHlp.isForeverPast(ps._fromDateUtc);\n\t\t\t}).find((ps) => {\n\t\t\t\tlet fromDate = new Date(ps._fromDateUtc);\n\t\t\t\tlet toDate = new Date(ps._toDateUtc);\n\t\t\t\treturn fromDate <= now && toDate > now;\n\t\t\t});\n\t\t\tlet psVal = hasActivePaySchedule ? 'Yes' : 'No';\n\t\t\tlet hasActiveJTD = jobType._jobTypeDetails\n\t\t\t\t.filter(x => !ssDateHlp.isForeverPast(x._fromDateUtc))\n\t\t\t\t.filter(x => x.isCurrent).length > 0;\n\t\t\tlet jtdVal = hasActiveJTD ? 'Yes' : 'No';\n\t\t\treturn $sce.trustAsHtml(`\n\t\t\t\t<div>\n\t\t\t\t\t<dl><dt>Active Job Type Details:&nbsp;</dt>\n\t\t\t\t\t<dd>${jtdVal}</dd>\n\t\t\t\t\t<dt>Active Pay Schedule:&nbsp;</dt>\n\t\t\t\t\t<dd>${psVal}</dd>\n\t\t\t\t\t</dl>\n\t\t\t\t</div>\n\t\t\t`);\n\n\t\t}\n\t}\n}\n\n// #-- END Segment (/general-config/job-types/segment-job-types-content) --# //\n// #-----------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigJobTypesJobTypesContent', () => new JobTypesContent('job-types-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigJobTypesJobTypesContentLogic', logic);\n","import {State} from 'base-state';\n// #------------------------------------------# //\n// #---- State (/general-config/locations) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.locations';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/locations',\n\ttemplateUrl: 'routes/general-config/locations/locations.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Locations';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/general-config/locations) --# //\n// #------------------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #-----------------------------------------------------------------------# //\n// #---- Segment (/general-config/locations/segment-locations-content) ----# //\n\nclass LocationsContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssLocationsApi, ssActiveUserSvc, ssAsync, ssEnum) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm\n\n\t\tparentVm.HRMSmessage = 'Locations are editable in the HRMS application.';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigLocationsLocationsContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\tstateEnums: ssEnum.states.getEnums(),\n\t\t\t\tdataCategoryEnum: 'locationCategories',\n\t\t\t\tdataOptions: ssEnum.locationCategories.getEnums(),\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Location',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item._name\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"Name\" model=\"item._name\" ss-validate=\"validation.required(item._name, 'Location name')\" required=\"true\"></super-input-text>`\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Address',\n\t\t\t\t\toptions: ssEnum.states.getEnums(),\n\t\t\t\t\tviewTemplate: `<p ng-if=\"item._address.street1\" ng-bind=\"item._address.street1\"></p>\n\t\t\t\t\t\t\t\t\t<p><span ng-if=\"item._address.city\">{{item._address.city}},&nbsp;</span>\n\t\t\t\t\t\t\t\t\t<span ng-if=\"item._address.state\">{{item._address.state}}&nbsp;&nbsp;</span>\n\t\t\t\t\t\t\t\t\t<span ng-if=\"item._address.zip\">{{item._address.zip}}</span></p>`,\n\t\t\t\t\teditTemplate: `<p><super-input-text placeholder=\"Address\" model=\"item._address.street1\"></super-input-text></p>\n\t\t\t\t\t\t<p><super-input-text placeholder=\"City\" model=\"item._address.city\"></super-input-text></p>\n\t\t\t\t\t\t<p><super-select-list model=\"item._address.state\"><super-select-list-item ng-repeat=\"state in config.stateEnums\" label=\"state.name\" value=\"state.value\"></super-select-list-item></super-select-list></p>\n\t\t\t\t\t\t<p><super-input-text placeholder=\"Zip\" model=\"item._address.zip\" ss-validate=\"validation.zip(item._address.zip)\"></super-input-text></p>`\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Contact',\n\t\t\t\t\tviewTemplate: `<p ng-if=\"item.formattedPhone\" ng-bind=\"item.formattedPhone\"></p>\n\t\t\t\t\t\t\t\t\t<p ng-bind=\"item._email\"></p>`,\n\t\t\t\t\teditTemplate: `<p><super-input-text placeholder=\"Phone\" model=\"item._phone\"></super-input-text></p><p><super-input-text placeholder=\"Email\" model=\"item._email\" ss-validate=\"validation.email(item._email)\"></super-input-text></p>`\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'External Id',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item._externalId\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"External ID\" model=\"item._externalId\" ss-validate=\"validation.externalId(item._externalId, 'External Id')\" required=\"true\"></super-input-text>`\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'Data Analysis',\n\t\t\t\t\tinfo: `These categories help Frontline Education aggregate data to provide tools which better serve your needs.`,\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item.selectedDataCategory\"></span>`,\n\t\t\t\t\teditTemplate: `<super-select-list model=\"item._dataCategory\"><super-select-list-item ng-repeat=\"option in config.dataOptions | orderBy: 'name'\" label=\"option.name\" value=\"option.value\"></super-select-list-item></super-select-list>`\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create && !parentVm.isReadonly || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit && !parentVm.isReadonly || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete && !parentVm.isReadonly || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_locations`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetLocations(filter) {\n\t\t\t\treturn ssLocationsApi.query(filter);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/locations/segment-locations-content) --# //\n// #-----------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigLocationsLocationsContent', () => new LocationsContent('locations-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigLocationsLocationsContentLogic', logic);\n","import {State} from 'base-state';\n// #------------------------------------------# //\n// #---- State (/general-config/positions) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.positions';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/positions',\n\ttemplateUrl: 'routes/general-config/positions/positions.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Positions';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/general-config/positions) --# //\n// #------------------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #-----------------------------------------------------------------------# //\n// #---- Segment (/general-config/positions/segment-positions-content) ----# //\n\nclass PositionsContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssAsync, ssActiveUserSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm;\n\t\tconst listType = 'position.types';\n\n\t\tparentVm.HRMSmessage = 'Position Names are editable in the HRMS application.';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigPositionsPositionsContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Position Name',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: '<span ng-bind=\"item._name\"></span>',\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"Name\" model=\"item._name\" ss-validate=\"validation.required(item._name, 'Position Name')\" required=\"true\"></super-input-text>`\n\t\t\t\t}, {\n\t\t\t\t\tlabel: 'External Id',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tviewTemplate: `<span ng-bind=\"item._externalId\"></span>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"External ID\" model=\"item._externalId\" ss-validate=\"validation.externalId(item._externalId, 'External Id')\" required=\"true\"></super-input-text>`\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create && !parentVm.isReadonly || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit && !parentVm.isReadonly || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete && !parentVm.isReadonly || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_list_${listType}`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.log && console.log('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetList(filter) {\n\t\t\t\treturn parentVm.getList(filter, listType);\n\t\t\t},\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/positions/segment-positions-content) --# //\n// #-----------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigPositionsPositionsContent', () => new PositionsContent('positions-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigPositionsPositionsContentLogic', logic);\n","import { Segment } from 'base-segment';\n// #---------------------------------------------------# //\n// #---- Segment (/general-config/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\n\t\t$scope.parentVm = routeVm;\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/segment-content) --# //\n// #---------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigContent', () => new Content('content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigContentLogic', logic);\n","import { Segment } from 'base-segment';\n// #---------------------------------------------------# //\n// #---- Segment (/general-config/segment-sidebar) ----# //\n\nclass Sidebar extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssFlagSvc, ssMultiInitiativeFeatureDetectorSvc, ssPermissionsSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigSidebarLogic'); // jshint ignore:line\n\t\t// Need to check both the FF and the permissions here\n\t\tconst showSignatureNav =  ssFlagSvc.checkState('fc-enable-signatures') && ssPermissionsSvc.isPermittedAction('signatures', 'manage')\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t\ttabs: [\n\t\t\t\t{ visibility: true, link: 'base.generalConfig.credentials', label: 'Credentials' },\n\t\t\t\t{ visibility: true, link: 'base.generalConfig.departments', label: 'Departments' },\n\t\t\t\t{ visibility: ssMultiInitiativeFeatureDetectorSvc.showEmploymentGroups(), link: 'base.generalConfig.employmentGroups', label: 'Employment Groups' },\n\t\t\t\t{ visibility: true, link: 'base.generalConfig.jobTypes', label: 'Job Types' },\n\t\t\t\t{ visibility: true, link: 'base.generalConfig.locations', label: 'Locations' },\n\t\t\t\t{ visibility: true, link: 'base.generalConfig.positions', label: 'Position Names' },\n\t\t\t\t{ visibility: showSignatureNav, link: 'base.generalConfig.signatures', label: 'Signatures'},\n\t\t\t\t{ visibility: ssMultiInitiativeFeatureDetectorSvc.showStatusReasons(), link: 'base.generalConfig.statusReasons', label: 'Status Reasons' }\n\t\t\t]\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\ttabFilter: (tab) => {\n\t\t\t\treturn logic.tabFilter(tab);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/segment-sidebar) --# //\n// #---------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigSidebar', () => new Sidebar('sidebar'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\ttabFilter(t) {\n\t\t\treturn t.visibility === true\n\t\t}\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigSidebarLogic', logic);\n","import {Segment} from 'base-segment';\n// #-------------------------------------------------------------------------# //\n// #---- Segment (/general-config/signatures/segment-signatures-content) ----# //\n\nclass SignaturesContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssAsync, FileUploader, ssActiveUserSvc, ssSignatureApi, ssEnum, ssToastHlp) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm;\n\n\t\tconst itemCache = {};\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigSignaturesSignaturesContentLogic'); // jshint ignore:line\n\t\trouteVm.onBeforeCancel = function(item) {\n\t\t\tvm.config.tempFile = [];\n\t\t}\n\n\t\trouteVm.onBeforeSave = function(item) {\n\t\t\tvar result = {}\n\t\t\tif (item._displayMethod !== ssEnum.signatureDisplayMethod.image) { \n\t\t\t\tcacheItem(item);\n\n\t\t\t\tif (item._fileId) { item._fileId = null; }\n\t\t\t\tif (item._imageUrl) { item._imageUrl = null; }\n\t\t\t\tresult.success = true;\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tif (item._displayMethod === ssEnum.signatureDisplayMethod.image){\n\t\t\t\t// No temp file and no existing file\n\t\t\t\tif (vm.config.tempFile.length == 0 && item._fileId == null){\n\t\t\t\t\tresult.success = false;\n\t\t\t\t\tresult.errorMessage = 'Please upload a file before saving.'\n\t\t\t\t// No temp file but does have existing file\n\t\t\t\t}else if (vm.config.tempFile.length == 0 && item._fileId != null) {\n\t\t\t\t\tresult.success = true;\n\t\t\t\t// Temp file available\n\t\t\t\t}else if (vm.config.tempFile[0].id){\n\t\t\t\t\titem._fileId = vm.config.tempFile[0].id;\n\t\t\t\t\tresult.success = true;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tconfig: {\n\t\t\t\ttempFile: [],\n\t\t\t\tgetFile: function(signature){\n\t\t\t\t\treturn go.getFile(signature);\n\t\t\t\t},\n\t\t\t\tcustomExtend: function(signature) {\n\t\t\t\t\treturn go.extendSignature(signature);\n\t\t\t\t},\n\t\t\t\tdisplayEnums: ssEnum.signatureDisplayMethod.getEnums(),\n\t\t\t\tfilteredFileTypes: ['jpg','jpeg','png'],\n\t\t\t\tuseUiFilter: true,\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Name',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: `<p ng-bind=\"item._name\"></p>`,\n\t\t\t\t\teditTemplate: `<super-input-text placeholder=\"Name\" aria-label=\"{{item._name}}\" model=\"item._name\" ss-validate=\"validation.required(item._name, 'Name')\" required=\"true\"></super-input-text>`\n\t\t\t\t},{\n\t\t\t\t\tlabel: 'Title',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tviewTemplate: `<p ng-bind=\"item._title\"></p>`,\n\t\t\t\t\teditTemplate: `<super-input-text model=\"item._title\" aria-label=\"{{item._name}}\" ss-validate=\"validation.required(item._title, 'Title')\" placeholder=\"Title\"></super-input-text>`\n\t\t\t\t},{\n\t\t\t\t\tlabel: 'Display Method',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tviewTemplate: `<p ng-bind=\"item.displayMethod\"></p>`,\n\t\t\t\t\teditTemplate: `<p><super-select-list model=\"item._displayMethod\" ss-validate=\"validation.required(item._displayMethod, 'Display Method')\" required=\"true\"><super-select-list-item ng-repeat=\"method in config.displayEnums\" label=\"method.name\" value=\"method.value\"></super-select-list-item></super-select-list></p>`\n\t\t\t\t},{\n\t\t\t\t\tlabel: 'Signature Preview',\n\t\t\t\t\tviewTemplate: `<a class=\"document\" ss-icon-before=\"file-photo-o\" href=\"#\" ng-if=\"item._displayMethod == 1 && !item._imageUrl\" ng-click=\"config.getFile(item)\">Preview</a>\n\t\t\t\t\t\t\t\t<img ng-if=\"item._displayMethod == 1 && item._imageUrl\" ng-src=\"{{item._imageUrl}}\" alt=\"{{item._name}}\" style=\"width: 100%\"></img>\n\t\t\t\t\t\t\t\t<div ng-if=\"item._displayMethod == 0\" class=\"signature\" ng-bind=\"item._name\"></div>`,\n\t\t\t\t\teditTemplate: `<super-file-upload prevent-multiple-uploads=\"true\" filtered-file-types=\"config.filteredFileTypes\" label=\"\" ng-if=\"item._displayMethod == 1\" model=\"config.tempFile\" ></super-file-upload>\n\t\t\t\t\t\t\t\t\t<div ng-if=\"item._displayMethod == 0\" class=\"signature\" ng-bind=\"item._name\">`\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.signatures.manage || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.signatures.manage || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.signatures.manage || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.signatures.manage || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_departments`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetSignatures(filter) {\n\t\t\t\treturn ssSignatureApi.query(filter);\n\t\t\t},\n\t\t\textendSignature(signature) {\n\t\t\t\tsignature.displayMethod = ssEnum.signatureDisplayMethod.byValue(signature._displayMethod);\n\t\t\t},\n\t\t\tgetFile(signature){\n\t\t\t\tssAsync(function*() {\n\t\t\t\t\tvar sigWithFileUrl = yield ssSignatureApi.get({ id: signature.id });\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsignature._imageUrl = sigWithFileUrl._imageUrl ? sigWithFileUrl._imageUrl : ''\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tssToastHlp.error(\"Image not found! Please upload a new image.\", 'Error', false);\n\t\t\t\t\t\tconsole && console.error && console.error('ERROR', e);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t};\n\n\t\t// cache signature row (item) in the event user cancels prior to saving\n\t\tfunction cacheItem(item) {\n\t\t\titemCache.item = item;\n\t\t}\n\t\t\n\t}\n}\n\n// #-- END Segment (/general-config/signatures/segment-signatures-content) --# //\n// #-------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigSignaturesSignaturesContent', () => new SignaturesContent('signatures-content') );\n\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigSignaturesSignaturesContentLogic', logic);\n","import { State } from 'base-state';\n// #--------------------------------------------# //\n// #---- State (/general-config/signatures) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.signatures';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/signatures',\n\ttemplateUrl: 'routes/general-config/signatures/signatures.html',\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('signatures', 'manage'),\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Employee Records - Signatures';\n\t\t}\n\t}\n};\n\n\n\n// #-- END State (/general-config/signatures) --# //\n// #--------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #---------------------------------------------------------------------------------# //\n// #---- Segment (/general-config/status-reasons/segment-status-reasons-content) ----# //\n\nclass StatusReasonsContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssActiveUserSvc, ssAsync) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\t\tconst parentVm = $scope.parentVm;\n\t\tconst listType = 'employee.statuschangereasons';\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentGeneralConfigStatusReasonsStatusReasonsContentLogic'); // jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t\tconfig: {\n\t\t\t\tgridColumns: [{\n\t\t\t\t\tlabel: 'Status Reason',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tsortBy: 'name',\n\t\t\t\t\tviewTemplate: '<span ng-bind=\"item._name\"></span>',\n\t\t\t\t\teditTemplate: '<super-input-text placeholder=\"Name\" model=\"item._name\" ss-validate=\"validation.required(item._name, \\'Status Reason\\')\" required=\"true\"></super-input-text>'\n\t\t\t\t}],\n\t\t\t\tcacheKey: ''\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tcanView: $scope.$root.isPermitted.listHeaders.view || false,\n\t\t\t\tcanCreate: $scope.$root.isPermitted.listHeaders.create && !parentVm.isHRMSEnabled || false,\n\t\t\t\tcanEdit: $scope.$root.isPermitted.listHeaders.edit && !parentVm.isHRMSEnabled || false,\n\t\t\t\tcanDelete: $scope.$root.isPermitted.listHeaders.delete && !parentVm.isHRMSEnabled || false\n\t\t\t}\n\t\t};\n\n\t\tssAsync(function*() {\n\t\t\ttry {\n\t\t\t\tconst orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\tvm.config.cacheKey = `${orgId}_list_${listType}`;\n\t\t\t} catch (e) {\n\t\t\t\tconsole && console.log && console.log('ERROR', e);\n\t\t\t}\n\t\t})();\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tgetList(filter) {\n\t\t\t\treturn parentVm.getList(filter, listType);\n\t\t\t},\n\t\t};\n\t}\n}\n\n// #-- END Segment (/general-config/status-reasons/segment-status-reasons-content) --# //\n// #---------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentGeneralConfigStatusReasonsStatusReasonsContent', () => new StatusReasonsContent('status-reasons-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentGeneralConfigStatusReasonsStatusReasonsContentLogic', logic);\n","import { State } from 'base-state';\n// #-----------------------------------------------# //\n// #---- State (/general-config/status-reasons) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'generalConfig.statusReasons';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/status-reasons',\n\ttemplateUrl: 'routes/general-config/status-reasons/status-reasons.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Status Reasons';\n\t\t},\n\t\tloader: /*@ngInject*/ (ssAsync, ssMultiInitiativeFeatureDetectorSvc, ssEventSvc) => {\n\t\t\treturn ssAsync(function*() {\n\t\t\t\tif (!ssMultiInitiativeFeatureDetectorSvc.showStatusReasons()) {\n\t\t\t\t\tssEventSvc.emit('error-404');\n\t\t\t\t}\n\t\t\t})();\n\t\t},\n\t}\n};\n\n// #-- END State (/general-config/status-reasons) --# //\n// #-----------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {State} from 'base-state';\n// #------------------------# //\n// #---- State (/index) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'index';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/',\n\tabstract: true,\n\ttemplateUrl: 'routes/index/index.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Settings';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/index) --# //\n// #------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {State} from 'base-state';\n// #----------------------------------------------# //\n// #---- State (/permissions/groups/group-all) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.groups.all';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/all',\n\ttemplateUrl: 'routes/permissions/groups/group-all/group-all.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Groups';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/groups/group-all) --# //\n// #----------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #-----------------------------------------------------------------# //\n// #---- Segment (/permissions/groups/group-all/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $state, ssAsync, ssSecurityGroupsApi, ssToastHlp, ssStorage) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm;  // eslint-disable-line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsGroupsGroupAllContentLogic'); // eslint-disable-line\n\n\t\tconst groupsVm = $scope.groupsVm;\n\n\t\tvar addGroup;\n\n\t\tconst vm = $scope.vm = {\n\t\t\tformOpened: false,\n\t\t\terrors: '',\n\t\t\t// reorderedGroups: logic.reorderGroups(groupsVm.groups),\n\t\t\tdefaultGroup: {\n\t\t\t\t_groupName: '',\n\t\t\t\t_groupDescription: '',\n\t\t\t\t_employeeIds: []\n\t\t\t},\n\t\t\tloading: false,\n\t\t\tsaving: false\n\t\t};\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\tadd() {\n\t\t\t\tif (addGroup == null) {\n\t\t\t\t\tvm.saving = true;\n\t\t\t\t\taddGroup = ssAsync(function*() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t//\tcreate the group\n\t\t\t\t\t\t\tlet group = yield ssSecurityGroupsApi.add({\n\t\t\t\t\t\t\t\t'include': 'securityScopes'\n\t\t\t\t\t\t\t}, vm.defaultGroup, false);\n\n\t\t\t\t\t\t\tif (group.id != null) {\n\t\t\t\t\t\t\t\tgroupsVm.groups.push(group);\n\t\t\t\t\t\t\t\t$state.go('base.permissions.groups.detail', {\n\t\t\t\t\t\t\t\t\tgroupId: group.id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taddGroup = null;\n\t\t\t\t\t\t\t\tvm.saving = false;\n\t\t\t\t\t\t\t\tssToastHlp.error('There was an error creating the group. Please try again later.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tssToastHlp.error('There was an error creating the group. Please try again later.');\n\t\t\t\t\t\t\taddGroup = null;\n\t\t\t\t\t\t\tvm.saving = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tclose() {\n\t\t\t\tvm.formOpened = false;\n\t\t\t\tvm.errors = '';\n\t\t\t\t$scope.$emit('ss-menu-close');\n\t\t\t}\n\n\t\t};\n\n\t\t$scope.$on('ss-menu-closed', (event, elem, ddElem) => {\n\t\t\tif (!vm.formOpened) {return;}\n\t\t\tif (ddElem.hasClass('create-form')) {\n\t\t\t\tvm.formOpened = false;\n\t\t\t\t$scope.$root.safeDigest($scope);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// #-- END Segment (/permissions/groups/group-all/segment-content) --# //\n// #-----------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsGroupsGroupAllContent', () => new Content('content') );\n","/*@ngInject*/\nfunction logic(ssArrayHlp) {\n\t// logic api\n\treturn {\n\t\t//\tReorder the dislayed groups so that the locked groups appear first\n\t\treorderGroups(_groups) {\n\t\t\tlet locked = ssArrayHlp.where([..._groups], {_locked: true});\n\t\t\tlet autoCreated = ssArrayHlp.where([..._groups], {_autoCreated: true, _locked: false});\n\t\t\tlet others = ssArrayHlp.where([..._groups], {_autoCreated: false, _locked: false});\n\t\t\treturn [...locked,...autoCreated,...others];\n\t\t}\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsGroupsGroupAllContentLogic', logic);\n","import {State} from 'base-state';\n// #-------------------------------------------------# //\n// #---- State (/permissions/groups/group-detail) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.groups.detail';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/{groupId:[0-9A-Za-z-]+}',\n\ttemplateUrl: 'routes/permissions/groups/group-detail/group-detail.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Group';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/groups/group-detail) --# //\n// #-------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst defaultRoute = '/ec-settings/permissions/groups/{groupId:[0-9A-Za-z-]{36}}/group-members';\n\tconst baseRoute = '/ec-settings/permissions/groups/{groupId:[0-9A-Za-z-]{36}}';\n\n\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {State} from 'base-state';\n// #---------------------------------------------------------------# //\n// #---- State (/permissions/groups/group-detail/group-members) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.groups.detail.groupMembers';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/group-members',\n\ttemplateUrl: 'routes/permissions/groups/group-detail/group-members/group-members.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Group Members';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/groups/group-detail/group-members) --# //\n// #---------------------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\nimport { log } from 'util';\n// #----------------------------------------------------------------------------------# //\n// #---- Segment (/permissions/groups/group-detail/group-members/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\t\tcontroller($q, $injector, $scope, $stateParams, $filter, ssListSvc, ssAsync,\n\t\t\t\t\tssEmployeeApi, ssToastHlp, ssArrayHlp){\n\t\tconst groupsVm = $scope.groupsVm; // eslint-disable-line\n\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsGroupsGroupDetailGroupMembersContentLogic');// eslint-disable-line\n\n\t\tlet group = $scope.group;\n\n\t\tlet positionTypes;\n\n\t\tconst vm = $scope.vm = {\n\t\t\tformOpened: false,\n\t\t\temployeeHolder: [],\n\t\t\tloading: false,\n\t\t\tstatusMsg: '',\n\t\t\tsearch: null,\n\t\t\temployeesInAndThereCurrentGroups: [],\n\t\t\tshowingModalUi: false,\n\t\t\tremoveEmployeeFromResult: []\n\t\t};\n\n\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\tcheckGroupsConflicts() {\n\t\t\t\tvm.employeesInAndThereCurrentGroups = logic.findEmployeesInGroups(groupsVm.groups, vm.employeeHolder);\n\t\t\t\tconst anyUserBelongsToOtherGroups = logic.anyUserBelongsToOtherGroups(vm.employeesInAndThereCurrentGroups);\n\t\t\t\tvm.showingModalUi = anyUserBelongsToOtherGroups;\n\t\t\t\tif(!anyUserBelongsToOtherGroups) {\n\t\t\t\t\tlet employees = vm.employeesInAndThereCurrentGroups.map(e => e.employee);\n\t\t\t\t\tssAsync(function*(){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tyield addMembers(employees);\n\t\t\t\t\t\t\tyield refreshData();\n\t\t\t\t\t\t}catch (e){\n\t\t\t\t\t\t\tssToastHlp.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t},\n\t\t\taddMembersToGroup(){\n\t\t\t\tvm.showingModalUi = false;\n\t\t\t\t// All Employees selected will be added to new Group\n\t\t\t\tlet allEmployeesSelected = vm.employeesInAndThereCurrentGroups.map(e => e.employee);\n\t\t\t\t// Employees that are part of other group will be removed from there old group\n\t\t\t\tlet employeesPartOfSomeGroup = vm.employeesInAndThereCurrentGroups.filter(e => e.groups.length).map(e => e.employee);\n\t\t\t\tlet groups = ssArrayHlp.unique(logic.flattenTheGroups(vm.employeesInAndThereCurrentGroups));\n\t\t\t\tssAsync(function*(){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tyield addMembers(allEmployeesSelected);\n\t\t\t\t\t\tyield removeMembersFromGroups(groups, employeesPartOfSomeGroup);\n\t\t\t\t\t\tyield refreshData();\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tssToastHlp.error(e);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\taddMembers: () => addMembers(vm.employeeHolder).then(refreshData),\n\t\t\ttoggleMenu() {\n\t\t\t\tvm.employeeHolder = [];\n\t\t\t\tvm.formOpened = !vm.formOpened;\n\t\t\t},\n\t\t\tremoveMember(emp) {\n\t\t\t\tvm.statusMsg = \"Removing user from group...\";\n\t\t\t\tvm.loading = true;\n\t\t\t\tlet index = group._employeeIds.indexOf(emp.id);\n\t\t\t\tgroup._employeeIds.splice(index, 1);\n\n\t\t\t\t// create a new reference for json api to pick up\n\t\t\t\tgroup._employeeIds = [...group._employeeIds];\n\n\t\t\t\tgroup.$save().then((success) => {\n\t\t\t\t\tlet successMsg = `${emp.fullName} has been successfully removed from ${group._groupName}`;\n\t\t\t\t\tssToastHlp.success(successMsg, null);\n\t\t\t\t\trefreshData();\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t\tvm.statusMsg = '';\n\t\t\t\t\tssToastHlp.error(`There was an error removing \"${emp._fullName}\" from ${group._groupName}`, 'Remove User', false);\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t});\n\t\t\t},\n\t\t\thaveGroups(){\treturn function(item) {\treturn item.groups.length > 0;\t}\t},\n\t\t\tshowScroll: (employeesInAndThereCurrentGroups) => employeesInAndThereCurrentGroups.filter(a => a.employee).length > 8\n\t\t};\n\n\t\tfunction loadEmployees(initialLoad) {\n\t\t\tif(initialLoad){\n\t\t\t\tvm.loading = true;\n\t\t\t};\n\t\t\tvm.statusMsg = 'Loading group members...';\n\t\t\tlet getEmps = ssAsync(function*() {\n\t\t\t\tgroup.employees = (!group._employeeIds.length) ?\n\t\t\t\t\t\t\t\t\t[] :\n\t\t\t\t\t\t\t\t\tyield ssEmployeeApi.queryByIds({ include: 'assignments,positions' }, { ids: group._employeeIds });\n\t\t\t});\n\n\t\t\treturn getEmps().then(() => {\n\t\t\t\t//\tspin through all returned employees to get their position info so we can display it\n\t\t\t\tgroup.employees.forEach(emp => {\n\t\t\t\t\tif (!emp._assignments) {return;}\n\t\t\t\t\tlet primaryAssignment = emp._assignments.find(a => a._isPrimary);\n\t\t\t\t\tif(!primaryAssignment) { return; }\n\t\t\t\t\temp.position = emp._positions.find(p => p.id === primaryAssignment._positionId);\n\t\t\t\t\t// create the user-friendly position name\n\t\t\t\t\tif (emp.position != null) {\n\t\t\t\t\t\temp.position.name = ssListSvc.mapName(emp.position._name, positionTypes);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//\tcreate a clone of the employees collection for filtering\n\t\t\t\tvm.filteredEmps = group.employees.slice();\n\t\t\t\tvm.removeEmployeeFromResult = vm.removeEmployeeFromResult.concat(vm.filteredEmps.map(e => e.id));\n\t\t\t});\n\t\t};\n\n\t\t//\tfunction to allow refresh of data after adding/removing group members. Passes in a custom message for toast\n\t\tfunction refreshData() {\n\t\t\treturn ssAsync(function*(){\n\t\t\t\ttry{\n\t\t\t\t\tyield loadEmployees();\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\tssToastHlp.error(`There was an error loading members of ${group._groupName}`, '');\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t\tfinally{\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t \tvm.statusMsg = '';\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tfunction removeMembersFromGroups(groups, employees){\n\t\t\tconst empNames = employees.map(logic.fullName).join();\n\t\t\tconst employeeIds = employees.map(e => e.id);\n\t\t\tlet promises = [];\n\t\t\tvm.statusMsg = `Removing ${empNames} from there previous groups...`;\n\t\t\tvm.loading = true;\n\t\t\tgroups.forEach(grp => {\n\t\t\t\tgrp._employeeIds = grp._employeeIds.filter(function(i) { return employeeIds.indexOf(i) < 0 });\n\t\t\t\tpromises.push(grp.$save());\n\t\t\t});\n\t\t\treturn ssAsync(function*(){\n\t\t\t\ttry{\n\t\t\t\t\tyield $q.all(promises);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tvm.statusMsg = '';\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t\tssToastHlp.error(`There was an error removing ${empNames} from there previous groups`, '', false);\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tfunction addMembers(employees){\n\t\t\tconst empNames = employees.map(logic.fullName).join();\n\t\t\tvm.statusMsg = 'Adding user(s) to group...';\n\t\t\tvm.loading = true;\n\t\t\tlet employeeIds = employees.map(e => e.id);\n\t\t\tgroup._employeeIds = [...group._employeeIds, ...employeeIds];\n\n\t\t\tgo.toggleMenu();\n\n\t\t\treturn ssAsync(function*(){\n\t\t\t\ttry{\n\t\t\t\t\tyield group.$save();\n\t\t\t\t\tlet successMsg = `${empNames} has been successfully added to ${group._groupName}`;\n\t\t\t\t\tssToastHlp.success(successMsg, null);\n\t\t\t\t}catch (e){\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t\tvm.statusMsg = '';\n\t\t\t\t\tssToastHlp.error(`There was an error adding ${empNames} to ${group._groupName}`, 'Add User', false);\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\n\n\t\t$scope.$on('$destroy', $scope.$watchCollection('vm.employeeHolder',(nv, ov) => {\n\t\t\tif(nv===ov) { return; }\n\t\t\tvm.removeEmployeeFromResult = vm.employeeHolder.map(e => e.id);\n\t\t}));\n\n\n\t\t//\tInitiate the loading of group members and create the watch for search filtering\n\t\tssAsync(function*() {\n\t\t\tpositionTypes = yield ssListSvc.getByExternalId('position.types');\n\t\t\tloadEmployees(true).then(() => {\n\t\t\t//\tcreate a watch to filter the displayed list upon search\n\t\t\t\t$scope.$on('$destroy', $scope.$watch('vm.search', (nv,ov) => {\n\t\t\t\t\tif(nv===ov) {return;};\n\t\t\t\t\tvm.filteredEmps = $filter('filter')(group.employees, (emp) => {\n\t\t\t\t\t\tlet fullName = `${emp._firstName} ${emp._lastName}`;\n\t\t\t\t\t\tlet reg = new RegExp(nv.trim(), 'i');\n\t\t\t\t\t\treturn reg.test(fullName);\n\t\t\t\t\t});\n\t\t\t\t}));\n\t\t\t}).catch((e)=> {\n\t\t\t\tssToastHlp.error(`There was an error loading members of ${group._groupName}`, '');\n\t\t\t\tconsole.error(e);\n\t\t\t}).finally(()=> {\n\t\t\t\tvm.loading = false;\n\t\t\t\tvm.statusMsg = '';\n\t\t\t});\n\t\t})();\n\n\t}\n}\n\n// #-- END Segment (/permissions/groups/group-detail/group-members/segment-content) --# //\n// #----------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsGroupsGroupDetailGroupMembersContent', () => new Content(\n\t'content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\tfunction findEmployeesInGroups(groups, employees){\n\t\tlet employeeAndGroupsItsAlreadyIn = [];\n\t\temployees.forEach(employee => {\n\t\t\tlet employeeGroups = groups.filter(grp => {\n\t\t\t\treturn grp._employeeIds.indexOf(employee.id) > -1;\n\t\t\t});\n\t\t\tlet groupNames = employeeGroups.map(x => x._groupName).join();\n\t\t\temployeeAndGroupsItsAlreadyIn.push({ employee, groupNames, groups: employeeGroups });\n\t\t})\n\t\treturn employeeAndGroupsItsAlreadyIn;\n\t}\n\n\tconst fullName = e => e.fullName;\n\tconst anyUserBelongsToOtherGroups = (employeesInGroups) => employeesInGroups.filter(g => g.groups.length).length > 0;\n\tconst flattenTheGroups = (employeesInGroups) => employeesInGroups.reduce((prev, curr) => prev.concat(curr.groups),[]);\n\n\treturn {\n\t\tfullName,\n\t\tflattenTheGroups,\n\t\tanyUserBelongsToOtherGroups,\n\t\tfindEmployeesInGroups\n\t};\n\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsGroupsGroupDetailGroupMembersContentLogic', logic);\n","import {State} from 'base-state';\n// #-------------------------------------------------------------------# //\n// #---- State (/permissions/groups/group-detail/profile-and-scope) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.groups.detail.profileAndScope';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/profile-and-scope',\n\ttemplateUrl: 'routes/permissions/groups/group-detail/profile-and-scope/profile-and-scope.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Profile And Scope';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/groups/group-detail/profile-and-scope) --# //\n// #-------------------------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #--------------------------------------------------------------------------------------# //\n// #---- Segment (/permissions/groups/group-detail/profile-and-scope/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssArrayHlp, createPermissionsHlp) {\n\t\tconst routeVm = $scope.routeVm;\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsGroupsGroupDetailProfileAndScopeContentLogic'); // eslint-disable-line\n\n\t\tlet group = $scope.group;\n\n\t\tconst vm = $scope.vm = {\n\t\t\tdim: false,\n\t\t\tdisableDim: true,\n\t\t\tpermissions: {},\n\t\t\tdisableAdd: null\n\t\t};\n\n\t\tconst go = $scope.go = {\n\n\t\t\taddScope() {\n\t\t\t\tvm.disableAdd = false;\n\t\t\t\tlet securityScope = createPermissionsHlp.securityScope();\n\t\t\t\tgroup._securityScopes.push(securityScope);\n\t\t\t},\n\n\t\t\tremoveScope(securityScope) {\n\t\t\t\tif (!securityScope.id) {\n\t\t\t\t\tlet Ind = group._securityScopes.indexOf(securityScope);\n\t\t\t\t\tgroup._securityScopes.splice(Ind, 1);\n\t\t\t\t}\n\t\t\t\t$scope.loadData();\n\t\t\t}\n\t\t};\n\n\t\t$scope.loadData = function() {\n\n\t\t\tif (group._securityScopes == null) {\n\t\t\t\tgroup._securityScopes = [];\n\t\t\t}\n\n\t\t\t// Adds a default security scope to the group if none are assigned\n\t\t\tif (!group._securityScopes.length) {\n\t\t\t\tgo.addScope();\n\t\t\t}\n\n\t\t\t// shows the 'Add' button only if there's at least one saved security group\n\t\t\tvm.disableAdd = !!group._securityScopes.filter(s => s.permissionProfile.id != null).length;\n\n\t\t\t// determine the profiles that are currently in use so that we can use that list to check against when a duplicate is selected\n\t\t\trouteVm.uniqueProfiles = getUniqueIds(group._securityScopes, 'permissionProfile');\n\n\t\t\t// If we have profiles, set up the profile table\n\t\t\tif (routeVm.uniqueProfiles.length > 0) {\n\n\t\t\t\tif (routeVm.uniqueProfiles.length > 1) {\n\t\t\t\t\tvm.disableDim = false;\n\t\t\t\t}\n\n\t\t\t\t$scope.permissionsVm.contexts.forEach(context => {\n\t\t\t\t\tvm.permissions[context.id] = [];\n\n\t\t\t\t\tlet registration = context._protectedResourceRegistration;\n\t\t\t\t\trouteVm.uniqueProfiles.forEach(profile => {\n\t\t\t\t\t\tif (profile == null) { return; }\n\n\t\t\t\t\t\tlet permissionSet = profile._permissionSets.find(s => s._protectedContextRegistrationId === context.id);\n\n\t\t\t\t\t\tif (permissionSet == null) {\n\t\t\t\t\t\t\tpermissionSet = createPermissionsHlp.permissionSet();\n\t\t\t\t\t\t\tpermissionSet._protectedContextRegistrationId = context.id;\n\t\t\t\t\t\t\tpermissionSet._permissions.resourceName = registration.resourceName;\n\n\t\t\t\t\t\t\tprofile._permissionSets.push(permissionSet);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvm.permissions[context.id].push(permissionSet._permissions);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t}\n\t\t};\n\n\t\t// filters out any temporary security scopes and returns the unique profiles among the results\n\t\tfunction getUniqueIds(collection, property) {\n\t\t\treturn ssArrayHlp.unique(collection.filter(item => item[property].id != null).map(item => {\n\t\t\t\tif (item[property] && item[property].id != null) {\n\t\t\t\t\treturn item[property];\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t$scope.loadData();\n\n\t}\n}\n\n// #-- END Segment (/permissions/groups/group-detail/profile-and-scope/segment-content) --# //\n// #--------------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsGroupsGroupDetailProfileAndScopeContent', () => new Content(\n\t'content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsGroupsGroupDetailProfileAndScopeContentLogic', logic);\n","import {Segment} from 'base-segment';\n// #--------------------------------------------------------------------# //\n// #---- Segment (/permissions/groups/group-detail/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $state, $stateParams, ssToastHlp) {\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsGroupsGroupDetailContentLogic'); // eslint-disable-line\n\n\t\tlet group = $scope.group = $scope.groupsVm.groups.find(g => g.id === $stateParams.groupId);\n\n\n\t\tconst vm = $scope.vm = {\n\t\t\teditTitle: false,\n\t\t\teditDescription: false,\n\t\t};\n\n\t\tvm.currentTitle = group._groupName;\n\t\tvm.currentDescription = group._groupDescription;\n\n\t\tconst go = $scope.go = {\n\t\t\trename() {\n\t\t\t\tgo.cancel();\n\t\t\t\tvm.editTitle = true;\n\t\t\t},\n\n\t\t\teditDescription() {\n\t\t\t\tgo.cancel();\n\t\t\t\tvm.editDescription = true;\n\t\t\t},\n\n\t\t\tcancel() {\n\t\t\t\tvm.editTitle = false;\n\t\t\t\tvm.editDescription = false;\n\n\t\t\t\tvm.currentTitle = group._groupName;\n\t\t\t\tvm.currentDescription = group._groupDescription;\n\t\t\t},\n\n\t\t\tdelete() {\n\t\t\t\tgroup.$remove().then(() => {\n\t\t\t\t\tssToastHlp.success(`${group._groupName} deleted\"`, 'Delete Group', false);\n\t\t\t\t\t$state.go('base.permissions.groups', null, {reload: true});\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tssToastHlp.error(`${group._groupName} was not successfully deleted\"`, 'Delete Group', false);\n\t\t\t\t\tconsole.log('Error deleting \"${group._groupName}\"', e);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsave() {\n\t\t\t\tgroup._groupName = vm.currentTitle;\n\t\t\t\tgroup._groupDescription = vm.currentDescription;\n\n\t\t\t\tgroup.$save().then(res => {\n\t\t\t\t\tvm.editTitle = false;\n\t\t\t\t\tvm.editDescription = false;\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\t}\n}\n\n// #-- END Segment (/permissions/groups/group-detail/segment-content) --# //\n// #--------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsGroupsGroupDetailContent', () => new Content('content') );\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsGroupsGroupDetailContentLogic', logic);\n","import {State} from 'base-state';\n// #-------------------------------------# //\n// #---- State (/permissions/groups) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.groups';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/groups',\n\ttemplateUrl: 'routes/permissions/groups/groups.html',\n\tresolve: {\n\t\tdata: /*@ngInject*/ (ssAsync, ssSecurityGroupsApi, ssPermissionProfilesApi) => {\n\t\t\treturn ssAsync(function*() {\n\t\t\t\trouteVm.groups = yield ssSecurityGroupsApi.query({\n\t\t\t\t\tinclude: 'securityScopes',\n\t\t\t\t\tlimit: 50\n\t\t\t\t});\n\t\t\t\t/*\n\t\t\t\t\tlimit: 50\n\t\t\t\t\tIs the max number of record the end point can send at a time\n\t\t\t\t\tfurther records can be retrieved iterativelty.\n\n\t\t\t\t\tWe are showing the list of Permission Profiles in the dropdown and\n\t\t\t\t\twe have to either iteratively load all the Profiles and then show them\n\t\t\t\t\tin drop down or drop downs have to support lazy loading.\n\n\t\t\t\t\tMel has mentioned in the ticket https://frontlinetechnologies.atlassian.net/browse/PLAT-4804\n\t\t\t\t\tthat she is fine with limit of 50 and expect that districts will not going\n\t\t\t\t\tto exceed the limit.\n\t\t\t\t*/\n\t\t\t\trouteVm.profiles = yield ssPermissionProfilesApi.query({\n\t\t\t\t\tinclude: 'permissionSets',\n\t\t\t\t\tlimit: 50\n\t\t\t\t});\n\n\t\t\t//\tfilter out the locked profiles\n\t\t\t\trouteVm.groups = routeVm.groups.filter(g => g._groupName !== \"MinimalAllEmployees\");\n\t\t\t\trouteVm.profiles = routeVm.profiles.filter(g => g._permissionProfileName !== \"Minimal-View-Self\");\n\n\t\t\t\trouteVm.groups.forEach(g => {\n\t\t\t\t\tg._securityScopes.forEach(s => {\n\t\t\t\t\t\ts.permissionProfile = routeVm.profiles.find(p => s._permissionProfileId === p.id);\n\n\t\t\t\t\t\tif (s.permissionProfile != null) {\n\t\t\t\t\t\t\tlet profile = s.permissionProfile;\n\t\t\t\t\t\t\tif (!angular.isArray(profile.groups)) {\n\t\t\t\t\t\t\t\tprofile.groups = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (profile.groups.indexOf(g) < 0) {\n\t\t\t\t\t\t\t\tprofile.groups.push(g);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})();\n\t\t},\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Groups';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/groups) --# //\n// #-------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst defaultRoute = '/ec-settings/permissions/groups/all';\n\tconst baseRoute = '/ec-settings/permissions/groups';\n\n\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #-------------------------------------------------------# //\n// #---- Segment (/permissions/groups/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm;\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsGroupsContentLogic');// eslint-disable-line\n\n\n\t\t$scope.groupsVm = routeVm;\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // eslint-disable-line\n\t\t\tautoCreatedGroups: [],\n\t\t\tcustomCreatedGroups: []\n\t\t};\n\n\t\t$scope.$watchCollection('routeVm.groups', () => {\n\t\t\tvm.autoCreatedGroups = routeVm.groups.filter(x => x._autoCreated);\n\t\t\tvm.customCreatedGroups = routeVm.groups.filter(x => !x._autoCreated);\n\t\t})\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t};\n\t}\n}\n\n// #-- END Segment (/permissions/groups/segment-content) --# //\n// #-------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsGroupsContent', () => new Content('content'));\n","/*@ngInject*/\nfunction logic(ssArrayHlp) {\n\t// logic api\n\treturn {\n\t//\tReorder the dislayed groups so that the locked groups appear first\n\t\treorderGroups(_groups) {\n\t\t\tlet locked = ssArrayHlp.where([..._groups], {_locked: true});\n\t\t\tlet autoCreated = ssArrayHlp.where([..._groups], {_autoCreated: true, _locked: false});\n\t\t\tlet others = ssArrayHlp.where([..._groups], {_autoCreated: false, _locked: false});\n\t\t\treturn [...locked,...autoCreated,...others];\n\t\t}\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsGroupsContentLogic', logic);\n","import {State} from 'base-state';\n// #------------------------------# //\n// #---- State (/permissions) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {\n\tcontexts: []\n};\n\nconst stateName = 'permissions';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/permissions',\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('permissionProfiles', 'edit'),\n\ttemplateUrl: 'routes/permissions/permissions.html',\n\tresolve: {\n\t\tdata: /*@ngInject*/ (ssAsync, ssProtectedContextApi) => {\n\t\t\treturn ssAsync(function*() {\n\t\t\t\trouteVm.contexts = yield ssProtectedContextApi.query({\n\t\t\t\t\tproductId: 'ec',\n\t\t\t\t\tlimit: 50\n\t\t\t\t});\n\t\t\t})();\n\t\t},\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions) --# //\n// #------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst defaultRoute = '/ec-settings/permissions/groups';\n\tconst baseRoute = '/ec-settings/permissions';\n\n\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {State} from 'base-state';\n// #--------------------------------------------------# //\n// #---- State (/permissions/profiles/profile-all) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.profiles.all';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/all',\n\ttemplateUrl: 'routes/permissions/profiles/profile-all/profile-all.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Profiles';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/profiles/profile-all) --# //\n// #--------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #---------------------------------------------------------------------# //\n// #---- Segment (/permissions/profiles/profile-all/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $state, ssAsync, ssPermissionProfilesApi, ssToastHlp) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsProfilesProfileAllContentLogic');// eslint-disable-line\n\n\t\tconst profilesVm = $scope.profilesVm;\n\n\t\tvar addProfile;\n\n\t\tconst vm = $scope.vm = {\n\t\t\tformOpened: false,\n\t\t\terrors: '',\n\t\t\tprofile: {\n\t\t\t\t_permissionProfileName: '',\n\t\t\t\t_permissionProfileDescription: '',\n\t\t\t\t_permissionSets: []\n\t\t\t},\n\t\t\tsaving: false\n\t\t};\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\tadd() {\n\t\t\t\tif (addProfile == null) {\n\t\t\t\t\tvm.saving = true;\n\t\t\t\t\taddProfile = ssAsync(function*() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet profile = yield ssPermissionProfilesApi.add({\n\t\t\t\t\t\t\t\t'include': 'permissionSets'\n\t\t\t\t\t\t\t}, vm.profile, false);\n\n\t\t\t\t\t\t\tif (profile.id != null) {\n\t\t\t\t\t\t\t\tprofilesVm.profiles.push(profile);\n\n\t\t\t\t\t\t\t\t$state.go('base.permissions.profiles.detail', {\n\t\t\t\t\t\t\t\t\tprofileId: profile.id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taddProfile = null;\n\t\t\t\t\t\t\t\tssToastHlp.error('There was an error creating the permission profile. Please try again later.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tssToastHlp.error('There was an error creating the permission profile. Please try again later.');\n\t\t\t\t\t\t\taddProfile = null;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tvm.saving = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tclose() {\n\t\t\t\tvm.formOpened = false;\n\t\t\t\tvm.errors = '';\n\t\t\t\tvm.profile = {\n\t\t\t\t\t_permissionProfileName: '',\n\t\t\t\t\t_permissionProfileDescription: '',\n\t\t\t\t\t_permissionSets: []\n\t\t\t\t};\n\t\t\t\t$scope.$emit('ss-menu-close');\n\t\t\t}\n\t\t};\n\n\t\t$scope.$on('ss-menu-closed', (e, elem, ddElem) => {\n\t\t\tif (!vm.formOpened) {return;}\n\t\t\tif (ddElem.hasClass('create-form')) {\n\t\t\t\tvm.formOpened = false;\n\t\t\t\t$scope.$root.safeDigest($scope);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// #-- END Segment (/permissions/profiles/profile-all/segment-content) --# //\n// #---------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsProfilesProfileAllContent', () => new Content('content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsProfilesProfileAllContentLogic', logic);\n","import {State} from 'base-state';\n// #------------------------------------------------------# //\n// #---- State (/permissions/profiles/profile-detail) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.profiles.detail';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/{profileId:[0-9A-Za-z-]{36}}',\n\ttemplateUrl: 'routes/permissions/profiles/profile-detail/profile-detail.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Profile';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/profiles/profile-detail) --# //\n// #------------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst defaultRoute = '/ec-settings/permissions/profiles/{profileId:[0-9A-Za-z-]{36}}/view/Employee';\n\tconst baseRoute = '/ec-settings/permissions/profiles/{profileId:[0-9A-Za-z-]{36}}';\n\n\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #------------------------------------------------------------------------# //\n// #---- Segment (/permissions/profiles/profile-detail/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $state, $stateParams, ssPermissionProfilesApi, ssToastHlp, ssEventSvc, $log) {\n\t    const routeVm = $scope.routeVm; // eslint-disable-line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsProfilesProfileDetailContentLogic'); // eslint-disable-line\n\n\t\tconst protectedOptions = ['rename', 'delete', 'description'];\n\n\t\tlet profile = null;\n\n\t\tconst vm = $scope.vm = {\n\t\t\teditTitle: false,\n\t\t\teditDescription: false,\n\t\t\tcontexts: $scope.permissionsVm.contexts,\n\t\t};\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\trename() {\n\t\t\t\tgo.cancel();\n\t\t\t\tvm.editTitle = true;\n\t\t\t},\n\n\t\t\teditDescription() {\n\t\t\t\tgo.cancel();\n\t\t\t\tvm.editDescription = true;\n\t\t\t},\n\n\t\t\tduplicate() {\n\t\t\t\tssPermissionProfilesApi.duplicate({\n\t\t\t\t\tid: profile.id\n\t\t\t\t}).then(profile => {\n\t\t\t\t\t$state.go('base.permissions.profiles.detail', {\n\t\t\t\t\t\tprofileId: profile.id\n\t\t\t\t\t}, {reload: true});\n\n\t\t\t\t\tssToastHlp.success(`${profile._permissionProfileName} copied successfully`, 'Profile Copied', false);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdelete() {\n\t\t\t\tprofile.$remove().then(() => {\n\t\t\t\t\t$state.go('base.permissions.profiles', null, {reload: true});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcancel() {\n\t\t\t\tvm.editTitle = false;\n\t\t\t\tvm.editDescription = false;\n\t\t\t\tvm.currentTitle = profile._permissionProfileName;\n\t\t\t\tvm.currentDescription = profile._permissionProfileDescription;\n\t\t\t},\n\n\t\t\tsave() {\n\t\t\t\tprofile._permissionProfileName = vm.currentTitle;\n\t\t\t\tprofile._permissionProfileDescription = vm.currentDescription;\n\t\t\t\tprofile.$save().then(res => {\n\t\t\t\t\tvm.editTitle = false;\n\t\t\t\t\tvm.editDescription = false;\n\t\t\t\t});\n\t\t\t},\n\t\t\tgetEditOptions() {\n\n\t\t\t\tlet options = [{\n\t\t\t\t\tlabel : \"Rename\",\n\t\t\t\t\tfunc : 'rename',\n\t\t\t\t\tmethod : () => { return go.rename(); }\n\t\t\t\t}, {\n\t\t\t\t\tlabel : `${profile._permissionProfileDescription ? 'Edit' : 'Add'} Description`,\n\t\t\t\t\tfunc : 'description',\n\t\t\t\t\tmethod : () => { return go.editDescription(); }\n\t\t\t\t}, {\n\t\t\t\t\tlabel : \"Duplicate Profile\",\n\t\t\t\t\tfunc : 'duplicate',\n\t\t\t\t\tmethod : () => { return go.duplicate(); }\n\t\t\t\t}, {\n\t\t\t\t\tlabel : \"Delete Profile\",\n\t\t\t\t\tfunc : 'delete',\n\t\t\t\t\tmethod : () => { return go.delete(); }\n\t\t\t\t}];\n\n\t\t\t\treturn options.filter((o) => {\n\t\t\t\t\treturn !profile._locked && !profile._autoCreated || profile._autoCreated && (!protectedOptions.includes(o.func)) || profile._permissionProfileName.includes('Copy')\n\t\t\t\t})\n\t\t\t},\n\t\t\tshouldDisabledThisTab(thisTabsContext){\n\t\t\t\treturn thisTabsContext._protectedResourceRegistration.actions.every(x => x.isPrivileged);\n\t\t\t},\n\t\t\tgetDisabledPopoverText,\n\t\t};\n\n\t\tfunction getDisabledPopoverText(thisTabsContext){\n\t\t\treturn `<div class=\"popover-for-disabled-tab\" \n\t\t\t\t\t\tss-tool-tip=\"Editing this tab is not recommended for the View-Self profile. If you would like to modify the properties for this tab, please do so from within another profile.\" \n\t\t\t\t\t\tng-if=\"${go.shouldDisabledThisTab(thisTabsContext)}\" \n\t\t\t\t\t\tng-click=\"$event.preventDefault();$event.stopImmediatePropagation();\" \n\t\t\t\t\t></div>`;\n\t\t}\n\n\t\t(function() {\n\t\t\ttry {\n\t\t\t//\tfind the current profile\n\t\t\t\tprofile = $scope.profile = $scope.profilesVm.profiles.find((p) => {\n\t\t\t\t\treturn p.id === $stateParams.profileId;\n\t\t\t\t});\n\n\t\t\t\tvm.currentTitle = profile._permissionProfileName;\n\t\t\t\tvm.currentDescription = profile._permissionProfileDescription;\n\t\t\t\tvm.editOptions = go.getEditOptions();\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\t$log.error('404');\n\t\t\t\tssEventSvc.emit('error-404');\n\t\t\t\treturn;\n\t\t\t}\n\t\t})();\n\t}\n}\n\n// #-- END Segment (/permissions/profiles/profile-detail/segment-content) --# //\n// #------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsProfilesProfileDetailContent', () => new Content(\n\t'content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsProfilesProfileDetailContentLogic', logic);\n","import { Segment } from 'base-segment';\n// #--------------------------------------------------------------------------------# //\n// #---- Segment (/permissions/profiles/profile-detail/tab/segment-tab-content) ----# //\n\nclass TabContent extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $state, $stateParams, ssAsync, createPermissionsHlp, ssObjectHlp, propertyActionLabelSvc, ssStringHlp, ssModalSvc) {\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsProfilesProfileDetailTabTabContentLogic'); // eslint-disable-line\n\n\t\tconst profilesVm = $scope.profilesVm;\n\n\t\tlet profile = $scope.profile;\n\n\t\t//\tGet the context object (Department, Employee etc.) based on the value of the 'tab' state param\n\t\tconst context = $scope.permissionsVm.contexts.find(c => c._protectedResourceRegistration.resourceName === $stateParams.tab);\n\n\t\tconst vm = $scope.vm = {\n\t\t\teditMode: $stateParams.action === 'edit',\n\t\t\tcontext,\n\t\t\tregistration: context._protectedResourceRegistration,\n\t\t\tselectedProfile: null,\n\t\t};\n\n\t\tif (!angular.isArray(profile._permissionSets)) {\n\t\t\tprofile._permissionSets = [];\n\t\t}\n\t\tlet permissionSet = profile._permissionSets.find(s => s._protectedContextRegistrationId === context.id);\n\t\tif (permissionSet == null) {\n\t\t\tpermissionSet = createPermissionsHlp.permissionSet();\n\t\t\tpermissionSet._protectedContextRegistrationId = context.id;\n\t\t\tpermissionSet._permissions.resourceName = vm.registration.resourceName;\n\t\t\tprofile._permissionSets.push(permissionSet);\n\t\t}\n\n\t\tvm.permissions = [permissionSet._permissions];\n\n\t\t$scope.$watch('vm.selectedProfile', (nv, ov) => {\n\t\t\tif (nv === ov) { return; }\n\n\t\t\tlet p = profilesVm.profiles.find(p => p.id === nv);\n\n\t\t\tlet chosenSet = p._permissionSets.find(s => s._protectedContextRegistrationId === context.id);\n\t\t\tif (chosenSet == null) {\n\t\t\t\tchosenSet = createPermissionsHlp.permissionSet();\n\t\t\t\tchosenSet._protectedContextRegistrationId = context.id;\n\t\t\t\tchosenSet._permissions.resourceName = vm.registration.resourceName;\n\t\t\t\tp._permissionSets.push(chosenSet);\n\t\t\t}\n\t\t\tvm.permissions = [permissionSet._permissions, chosenSet._permissions];\n\t\t});\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t\tedit() {\n\t\t\t\t$state.go('.', {\n\t\t\t\t\taction: 'edit'\n\t\t\t\t});\n\t\t\t},\n\t\t\tcancelTabEdit() {\n\t\t\t\tprofile.$revert();\n\t\t\t\t$state.go('.', {\n\t\t\t\t\taction: 'view'\n\t\t\t\t});\n\t\t\t},\n\t\t\tvalidateAndSaveTab() {\n\t\t\t\tconst permissionSetRefToReplace = profile._permissionSets.find(s => s._protectedContextRegistrationId === context.id);\n\t\t\t\tconst { actionObjectsThatRequireChecking, theFirstProtextPropertyToRequireHigher } = findMissingPermissionLevels(permissionSetRefToReplace);\n\t\t\t\tif (actionObjectsThatRequireChecking && actionObjectsThatRequireChecking.length && theFirstProtextPropertyToRequireHigher) {\n\t\t\t\t\tconst contentStrForModal = `Due to selecting attributes such as ${ssStringHlp.toTitleCase(theFirstProtextPropertyToRequireHigher.description) || 'a protected field'}` +\n\t\t\t\t\t\t', you are required to also select: </br>' +\n\t\t\t\t\t\tactionObjectsThatRequireChecking.map(anAction => {\n\t\t\t\t\t\t\treturn `\"Can ${ssStringHlp.toTitleCase(anAction.description)}\"</br>`;\n\t\t\t\t\t\t}).join('') +\n\t\t\t\t\t\t'Would you like to accept those additional permissions?';\n\n\t\t\t\t\tpromptForModification(contentStrForModal, () => {\n\t\t\t\t\t\tconst indexToReplace = profile._permissionSets.indexOf(permissionSetRefToReplace);\n\t\t\t\t\t\tconst objectActionStrsToSet = [];\n\t\t\t\t\t\tObject.keys(permissionSetRefToReplace._permissions).forEach(aPermKey => {\n\t\t\t\t\t\t\tif (actionObjectsThatRequireChecking.find(aRequiredAction => aRequiredAction.id === aPermKey)) {\n\t\t\t\t\t\t\t\tobjectActionStrsToSet.push(aPermKey);\n\t\t\t\t\t\t\t\tpermissionSetRefToReplace._permissions[aPermKey] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpermissionSetRefToReplace._permissions.objectActions = permissionSetRefToReplace._permissions.objectActions.concat(objectActionStrsToSet);\n\t\t\t\t\t\tprofile._permissionSets[indexToReplace] = ssObjectHlp.deepCopy(permissionSetRefToReplace);\n\t\t\t\t\t\tsaveTab();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsaveTab();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfunction promptForModification(modalBodyContentStr, doneCallback) {\n\t\t\tlet modalConfig = {\n\t\t\t\tcontent: modalBodyContentStr,\n\t\t\t\tprimaryText: 'Accept',\n\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t};\n\n\t\t\treturn ssModalSvc.showStandard(modalConfig).then(doneCallback);\n\t\t}\n\n\t\tfunction findMissingPermissionLevels(thePermProfile) {\n\t\t\tconst EDIT_ACTION = 'Edit';\n\t\t\tconst VIEW_ACTION = 'View';\n\t\t\tvar resourceActions = {\n\t\t\t\teditActionName: null,\n\t\t\t\tviewActionName: null,\n\t\t\t};\n\n\t\t\tconst protectedProperties = [];\n\t\t\tObject.keys(thePermProfile._permissions).forEach(aPermKey => {\n\t\t\t\tconst resourceActionNameTriple = aPermKey.split('_');\n\t\t\t\t// Confirm that it is a simple resource action and not some nested resource\n\t\t\t\tif (resourceActionNameTriple.length === 3) {\n\t\t\t\t\tconst [resource, permissionType, actionLevel] = resourceActionNameTriple;\n\t\t\t\t\t// Find the action that corresponds to the primary DB resource for this tab\n\t\t\t\t\tif (permissionType === 'Action' && actionLevel === EDIT_ACTION) {\n\t\t\t\t\t\tresourceActions.editActionName = aPermKey;\n\t\t\t\t\t}\n\t\t\t\t\tif (permissionType === 'Action' && actionLevel === VIEW_ACTION) {\n\t\t\t\t\t\tresourceActions.viewActionName = aPermKey;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (permissionType === 'Property') {\n\t\t\t\t\t\tprotectedProperties.push(thePermProfile._permissions[aPermKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction theySelectedThisAction(anActionString) {\n\t\t\t\treturn thePermProfile._permissions.objectActions.includes(anActionString);\n\t\t\t}\n\n\t\t\tconst propertiesThatRequireEdit = [];\n\t\t\tconst propertiesThatRequireView = [];\n\t\t\tprotectedProperties.forEach(aProtectedPropertyObj => {\n\t\t\t\t// Did they forget to click edit or view for the main resource?\n\t\t\t\tif (propertyActionLabelSvc.isAtLeastEditable(aProtectedPropertyObj.value) && !theySelectedThisAction(resourceActions.editActionName)) {\n\t\t\t\t\tpropertiesThatRequireEdit.push(aProtectedPropertyObj);\n\t\t\t\t}\n\t\t\t\tif (propertyActionLabelSvc.isAtLeastViewable(aProtectedPropertyObj.value) && !theySelectedThisAction(resourceActions.viewActionName)) {\n\t\t\t\t\tpropertiesThatRequireView.push(aProtectedPropertyObj);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet actionObjectsThatRequireChecking = [];\n\t\t\tlet theFirstProtextPropertyToRequireHigher = '';\n\t\t\tif (propertiesThatRequireEdit.length > 0) {\n\t\t\t\tactionObjectsThatRequireChecking.push(vm.registration.actions.find(anAction => anAction.actionName === EDIT_ACTION));\n\n\t\t\t}\n\t\t\tif (propertiesThatRequireView.length > 0) {\n\t\t\t\tactionObjectsThatRequireChecking.push(vm.registration.actions.find(anAction => anAction.actionName === VIEW_ACTION));\n\t\t\t}\n\n\t\t\tconst propertiesThatRequireHigherLevel = [].concat(propertiesThatRequireEdit, propertiesThatRequireView);\n\t\t\tif (propertiesThatRequireHigherLevel.length > 0) {\n\t\t\t\ttheFirstProtextPropertyToRequireHigher = vm.registration.properties.find(aProperty => aProperty.id === propertiesThatRequireHigherLevel[0].key);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttheFirstProtextPropertyToRequireHigher,\n\t\t\t\tactionObjectsThatRequireChecking,\n\t\t\t};\n\t\t}\n\n\t\tfunction saveTab() {\n\t\t\tssAsync(function*() {\n\t\t\t\tvm.saving = true;\n\t\t\t\ttry {\n\t\t\t\t\tyield profile.$save();\n\t\t\t\t\t$state.go('.', {\n\t\t\t\t\t\taction: 'view'\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole && console.error && console.error('problem saving permission profile', err);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.saving = false;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n}\n\n// #-- END Segment (/permissions/profiles/profile-detail/tab/segment-tab-content) --# //\n// #--------------------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsProfilesProfileDetailTabTabContent', () =>\n\tnew TabContent('tab-content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsProfilesProfileDetailTabTabContentLogic', logic);\n","import {State} from 'base-state';\n// #--------------------------------------------------------# //\n// #---- State (/permissions/profiles/profile-detail/tab) --# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.profiles.detail.tab';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/{action:view|edit}/{tab:[0-9A-Za-z-]+}',\n\ttemplateUrl: 'routes/permissions/profiles/profile-detail/tab/tab.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ ($stateParams) => {\n\t\t\treturn `Frontline Central - Permissions Profile - ${$stateParams.tab}`;\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/profiles/profile-detail/tab) --# //\n// #----------------------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {State} from 'base-state';\n// #---------------------------------------# //\n// #---- State (/permissions/profiles) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.profiles';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/profiles',\n\ttemplateUrl: 'routes/permissions/profiles/profiles.html',\n\tresolve: {\n\t\tdata: /*@ngInject*/ (ssAsync, ssSecurityGroupsApi, ssPermissionProfilesApi) => {\n\t\t\treturn ssAsync(function*() {\n\t\t\t\trouteVm.groups = yield ssSecurityGroupsApi.query({\n\t\t\t\t\tinclude: 'securityScopes',\n\t\t\t\t\tlimit: 50\n\t\t\t\t});\n\t\t\t\t/*\n\t\t\t\t\tlimit: 50\n\t\t\t\t\tIs the max number of record the end point can send at a time\n\t\t\t\t\tfurther records can be retrieved iteratively.\n\n\t\t\t\t\tWe are showing the list of Permission Profiles in the dropdown and\n\t\t\t\t\twe have to either iteratively load all the Profiles and then show them\n\t\t\t\t\tin drop down or drop downs have to support lazy loading.\n\n\t\t\t\t\tMel has mentioned in the ticket https://frontlinetechnologies.atlassian.net/browse/PLAT-4804\n\t\t\t\t\tthat she is fine with limit of 50 and expect that districts will not going\n\t\t\t\t\tto exceed the limit.\n\t\t\t\t*/\n\t\t\t\trouteVm.profiles = yield ssPermissionProfilesApi.query({\n\t\t\t\t\tinclude: 'permissionSets',\n\t\t\t\t\tlimit: 50\n\t\t\t\t});\n\n\t\t\t//\tfilter out any locked groups or profiles from the collection\n\t\t\t\trouteVm.groups = routeVm.groups.filter(g => g._groupName !== \"MinimalAllEmployees\");\n\t\t\t\trouteVm.profiles = routeVm.profiles.filter(g => g._permissionProfileName !== \"Minimal-View-Self\");\n\n\t\t\t\trouteVm.groups.forEach(g => {\n\t\t\t\t\tg._securityScopes.forEach(s => {\n\t\t\t\t\t\ts.permissionProfile = routeVm.profiles.find(p => s._permissionProfileId === p.id);\n\n\t\t\t\t\t\tif (s.permissionProfile != null) {\n\t\t\t\t\t\t\tlet profile = s.permissionProfile;\n\t\t\t\t\t\t\tif (!angular.isArray(profile.groups)) {\n\t\t\t\t\t\t\t\tprofile.groups = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (profile.groups.indexOf(g) < 0) {\n\t\t\t\t\t\t\t\tprofile.groups.push(g);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})();\n\t\t},\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Profiles';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/profiles) --# //\n// #---------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst defaultRoute = '/ec-settings/permissions/profiles/all';\n\tconst baseRoute = '/ec-settings/permissions/profiles';\n\n\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #---------------------------------------------------------# //\n// #---- Segment (/permissions/profiles/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope) {\n\t\tconst routeVm = $scope.routeVm;\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsProfilesContentLogic');// eslint-disable-line\n\n\t\t$scope.profilesVm = routeVm;\n\n\t\tconst vm = $scope.vm = { // eslint-disable-line\n\t\t\tautoCreatedProfiles: [],\n\t\t\tcustomCreatedProfiles: [],\n\t\t};\n\n\t\t$scope.$watchCollection('routeVm.profiles', () => {\n\t\t\tvm.autoCreatedProfiles = routeVm.profiles.filter(x => x._autoCreated);\n\t\t\tvm.customCreatedProfiles = routeVm.profiles.filter(x => !x._autoCreated);\n\t\t});\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\t\t};\n\t}\n}\n\n// #-- END Segment (/permissions/profiles/segment-content) --# //\n// #---------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsProfilesContent', () => new Content('content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsProfilesContentLogic', logic);\n","import {Segment} from 'base-segment';\n// #------------------------------------------------# //\n// #---- Segment (/permissions/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssMultiInitiativeFeatureDetectorSvc) {\n\t    const routeVm = $scope.routeVm;\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsContentLogic');// jshint ignore:line\n\n\t\t$scope.permissionsVm = routeVm;\n\t\t// filter out the contexts for subroutes here\n\t\t$scope.permissionsVm.contexts = ssMultiInitiativeFeatureDetectorSvc.filterProtectedContexts($scope.permissionsVm.contexts);\n\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t};\n\t}\n}\n\n// #-- END Segment (/permissions/segment-content) --# //\n// #------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsContent', () => new Content('content') );\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsContentLogic', logic);\n","import {Segment} from 'base-segment';\n// #-----------------------------------------------# //\n// #---- Segment (/permissions/segment-header) ----# //\n\nclass Header extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, ssModalSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsHeaderLogic');// jshint ignore:line\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = { // jshint ignore:line\n\t\t};\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tshowGraphic() {\n\t\t\t\tssModalSvc.showLarge({\n\t\t\t\t\ttitle: 'Understanding Permissions',\n\t\t\t\t\tcontent: '<cmp-infographic-svg force-load=\"true\"></cmp-infographic-svg>'\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}\n\n// #-- END Segment (/permissions/segment-header) --# //\n// #-----------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsHeader', () => new Header('header'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\t\n\t};\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsHeaderLogic', logic);\n","import {State} from 'base-state';\n// #-----------------------------------------# //\n// #---- State (/permissions/users/index) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.users.all';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/all',\n\ttemplateUrl: 'routes/permissions/users/index/index.html',\n\tresolve: {\n\t\tpromises: /*@ngInject*/ (ssSecurityGroupsApi, ssPermissionProfilesApi) => {\n\t\t\t[routeVm.securityGroupsPromise, routeVm.profilesPromise] = [\n\t\t\t\tssSecurityGroupsApi.query({\n\t\t\t\t\tinclude: 'securityScopes',\n\t\t\t\t\tlimit: 50\n\t\t\t\t}),\n\t\t\t\t/*\n\t\t\t\t\tlimit: 50\n\t\t\t\t\tIs the max number of record the end point can send at a time\n\t\t\t\t\tfurther records can be retrieved iteratively.\n\n\t\t\t\t\tWe are showing the list of Permission Profiles in the dropdown and\n\t\t\t\t\twe have to either iteratively load all the Profiles and then show them\n\t\t\t\t\tin drop down or drop downs have to support lazy loading.\n\n\t\t\t\t\tMel has mentioned in the ticket https://frontlinetechnologies.atlassian.net/browse/PLAT-4804\n\t\t\t\t\tthat she is fine with limit of 50 and expect that districts will not going\n\t\t\t\t\tto exceed the limit.\n\t\t\t\t*/\n\t\t\t\tssPermissionProfilesApi.query({\n\t\t\t\t\tinclude: 'permissionSets',\n\t\t\t\t\tlimit: 50\n\t\t\t\t})\n\t\t\t];\n\t\t},\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Users';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/users/index) --# //\n// #-----------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {Segment} from 'base-segment';\n// #------------------------------------------------------------# //\n// #---- Segment (/permissions/users/index/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $q, $filter, ssAsync, ssEmployeeApi, ssDebounce, ssToastHlp) {\n\t\tconst routeVm = $scope.routeVm;\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsUsersIndexContentLogic');// jshint ignore:line\n\t\tconst pageSize = 10000;\n\t\tconst batchSize = 20;\n\t\tlet currentPage = 0;\n\t\tvar searchString = '';\n\t\tvar emps, groups, profiles, getUsersPromise;\n\n\t\tconst vm = $scope.vm = {\n\t\t\tselectedAll: false,\n\t\t\tlimit: batchSize,\n\t\t\tloading: false,\n\t\t\tshowInfScroll: false,\n\t\t\temployeesRetrieved: [],\n\t\t\temployeesDisplayed: [],\n\t\t\tselectedEmps: [],\n\t\t\tsearch: '',\n\t\t\tloadingStatus: 'Loading users... This may take a while.'\n\t\t};\n\n\t\tconst go = $scope.go = { // jshint ignore:line\n\t\t\tselectAll(){\n\t\t\t\tif(vm.selectedAll){\n\t\t\t\t\tvm.employeesDisplayed.forEach(x => x.$selected = true)\n\t\t\t\t}else{\n\t\t\t\t\tvm.employeesDisplayed.forEach(x => x.$selected = false)\n\t\t\t\t}\n\t\t\t\tvm.selectedEmps = vm.employeesDisplayed.filter(x => x.$selected);\n\t\t\t},\n\t\t\tselectOne(emp){\n\t\t\t\tif(emp.$selected){\n\t\t\t\t\tvm.selectedEmps.push(emp);\n\t\t\t\t}else{\n\t\t\t\t\tvm.selectedEmps = vm.selectedEmps.filter(function (v) { return v !== emp; });\n\t\t\t\t}\n\t\t\t\tvm.selectedAll = vm.employeesDisplayed.every(x => x.$selected === true)\n\t\t\t},\n\t\t\taddUsersToGroup(groupId) {\n\t\t\t\tlet updatedGroup = logic.addUsersToGroup(vm.selectedEmps, groups, groupId);\n\t\t\t\tupdatedGroup.$save().then((group) => {\n\t\t\t\t\tssToastHlp.success(`${group._groupName} has been updated`, 'Add To Group', false);\n\t\t\t\t\t//reset Add To Group dropdown\n\t\t\t\t\tvm.toGroup = null;\n\t\t\t\t\tvm.selectedEmps = [];\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tgetUserGroups(emp) {\n\t\t\t\treturn logic.getUserGroups(emp, groups);\n\t\t\t},\n\t\t\tloadNext(){\n\t\t\t\tif(vm.limit <= vm.employeesDisplayed.length){\n\t\t\t\t\tvm.limit = vm.limit + batchSize;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t//\tdebounce method for filtering\n\t\tconst debounceResults = ssDebounce(() => {\n\t\t\tcurrentPage = 0;\n\t\t\tgetUsers(true);\n\t\t}, 350);\n\n\t//\twatch the filter menus and filter\n\t\t$scope.$watch('vm.selectedGroupFilter', (nv, ov) => {\n\t\t\tif (nv === ov) {return;}\n\t\t\tvm.employeesDisplayed = logic.filterUsersByGroup(vm.employeesRetrieved, groups, nv);\n\t\t});\n\n\t//\twatch the 'add to group' menu\n\t\t$scope.$watch('vm.toGroup', (nv, ov) => {\n\t\t\tif (nv != null) {\n\t\t\t\t$scope.go.addUsersToGroup(nv);\n\t\t\t}\n\t\t});\n\n\t//\twatch the search field, trim any value, reset the data & get the results\n\t\t$scope.$watch('vm.search', (nv, ov) => {\n\t\t\tif (nv === ov) { return; }\n\t\t\tif (typeof nv === 'string') {\n\t\t\t\tsearchString = nv.trim();\n\t\t\t}\n\t\t\tdebounceResults();\n\t\t});\n\n\t//\tmethod for scrolling\n\t\t// $scope.loadNext = function() {\n\t\t// \tif (vm.isScrolling) { return; }\n\t\t// \tvm.isScrolling = true;\n\t\t// \tgetUsers();\n\t\t// };\n\n\t//\tGet the Users\n\t\tfunction getUsers(reset) {\n\n\t\t//\tabort if a call is already in progress\n\t\t\tif (getUsersPromise != null) {\n\t\t\t\tgetUsersPromise.$abort();\n\t\t\t}\n\n\t\t//\tshow the initial loader only when first entering the page, otherwise we show the scrolling loader\n\t\t\tvm.loading = !vm.isScrolling;\n\n\t\t\tgetUsersPromise = ssAsync(function*() {\n\t\t\t\ttry {\n\t\t\t\t//\tincrement the current page\n\t\t\t\t\tcurrentPage++;\n\t\t\t\t//\tset the endpoint config\n\t\t\t\t\tvar config = Object.assign({}, {\n\t\t\t\t\t\tfields: 'firstname,lastname,flUser',\n\t\t\t\t\t\tinclude: 'emails',\n\t\t\t\t\t\toffset: (currentPage - 1) * pageSize,\n\t\t\t\t\t\tlimit: pageSize\n\t\t\t\t\t},\n\t\t\t\t\t\tlogic.makeSearchFilter(searchString, 'firstname'),\n\t\t\t\t\t\tlogic.makeSearchFilter(searchString, 'lastname')\n\t\t\t\t\t);\n\t\t\t\t//\tmake the endpoint call\n\t\t\t\t\temps = yield ssEmployeeApi.query(config);\n\t\t\t\t//\tget the total amount for the view\n\t\t\t\t\tvm.employeeTotal = parseInt(emps.$headers['total-results'], 10);\n\t\t\t\t//\treset the data arrays if needed (i.e. when searching)\n\t\t\t\t\tif(reset) {\n\t\t\t\t\t\tvm.employeesDisplayed = [];\n\t\t\t\t\t\tvm.employeesRetrieved = [];\n\t\t\t\t\t}\n\t\t\t\t//\tAdd the newly retrieved data to the current set\n\t\t\t\t\tvm.employeesRetrieved = [...vm.employeesRetrieved, ...emps];\n\t\t\t\t//\tcreate a copy of the data retrieved for filtering purposes\n\t\t\t\t\tvm.employeesDisplayed = vm.employeesRetrieved.slice();\n\t\t\t\t//\tdetermine whether or not to show the infinite scroll element\n\t\t\t\t\t//vm.showInfScroll = (emps.length > pageSize) || (vm.employeesDisplayed.length < vm.employeeTotal);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('Error getting employees', e);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tfunction init() {\n\t\t\tssAsync(function*() {\n\t\t\t\tvm.loading = true;\n\t\t\t\ttry {\n\t\t\t\t//\tget the groups & profiles\n\t\t\t\t\t[groups, profiles] = yield $q.all([routeVm.securityGroupsPromise, routeVm.profilesPromise]);\n\t\t\t\t//\tPerform necessary data manipulation\n\t\t\t\t//\t/* Is this necessary here? */\n\t\t\t\t\t// groups = logic.permProfiles(groups, profiles);\n\t\t\t\t//\tcreate the add to group menu options\n\t\t\t\t\tvm.addToGroupOptions = logic.makeMenuOptions(groups);\n\t\t\t\t//\tcreate the filter menu options\n\t\t\t\t\tvm.groupFilterOptions = [{\n\t\t\t\t\t\tname: 'All',\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}, ...vm.addToGroupOptions];\n\t\t\t\t//\tset the initial filter option\n\t\t\t\t\tvm.selectedGroupFilter = vm.groupFilterOptions[0].value;\n\t\t\t\t//\tget the users\n\t\t\t\t\tyield getUsers();\n\t\t\t\t} catch(e) {\n\t\t\t\t\tconsole.error('Error loading data', e);\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tinit();\n\n\t}\n}\n\n// #-- END Segment (/permissions/users/index/segment-content) --# //\n// #------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsUsersIndexContent', () => new Content('content'));\n","/*@ngInject*/\nfunction logic() {\n\n\t// logic api\n\treturn {\n\t\tmakeSearchFilter(val, type) {\n\t\t\tvar o = {};\n\t\t\tif (val != null) {\n\t\t\t\tlet joinedValue = val.split(' ').join(',');\n\t\t\t\to['filter[' + type + ']'] = joinedValue;\n\t\t\t\treturn o;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\tfilterUsersByGroup(users, groups, groupId) {\n\t\t\tif(groupId) {\n\t\t\t\tlet group = findById(groups, groupId);\n\t\t\t\treturn users.filter(u => group._employeeIds.indexOf(u.id) >= 0);\n\t\t\t} else {\n\t\t\t\treturn users;\n\t\t\t}\n\t\t},\n\n\t\taddUsersToGroup(users, groups, groupId) {\n\t\t\tlet selectedEmployeeIds = users.map(u => u.id);\n\t\t\tlet group = findById(groups, groupId);\n\t\t\tgroup._employeeIds = [...group._employeeIds, ...selectedEmployeeIds];\n\t\t\treturn group;\n\t\t},\n\n\t\tgetUserGroups(user, groups) {\n\t\t\treturn groups.filter(g => g._employeeIds.includes(user.id) || (g._appliesToAllEmployees && !g._locked));\n\t\t},\n\n\t\t/* Not sure what this was used for or if it's needed here */\n\t\t// permProfiles(groups, profiles) {\n\t\t// \tgroups.forEach(group => {\n\t\t// \t\tgroup._securityScopes.forEach(s => {\n\t\t// \t\t\ts.permissionProfile = findById(profiles, s._permissionProfileId);\n\t\t// \t\t\tif (s.permissionProfile != null) {\n\t\t// \t\t\t\tlet profile = s.permissionProfile;\n\t\t// \t\t\t\tif (!angular.isArray(profile.groups)) {\n\t\t// \t\t\t\t\tprofile.groups = [];\n\t\t// \t\t\t\t}\n\t\t// \t\t\t\tif (profile.groups.indexOf(group) < 0) {\n\t\t// \t\t\t\t\tprofile.groups.push(group);\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t});\n\t\t// \t});\n\t\t// \treturn groups;\n\t\t// },\n\n\t\tmakeMenuOptions(groups) {\n\t\t\tlet validGroups = groups.filter(g => !g._appliesToAllEmployees && !g._locked);\n\t\t\treturn validGroups.map(g => {\n\t\t\t\treturn {\n\t\t\t\t\tname: g._groupName,\n\t\t\t\t\tvalue: g.id\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t};\n\n\tfunction findById(arr, id) {\n\t\treturn arr.find(g => g.id === id);\n\t}\n\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsUsersIndexContentLogic', logic);","import {Segment} from 'base-segment';\n// #------------------------------------------------------------------# //\n// #---- Segment (/permissions/users/user-detail/segment-content) ----# //\n\nclass Content extends Segment {\n\t/*@ngInject*/\n\tcontroller($injector, $scope, $q, enumSecurityGroupScope, createPermissionsHlp, ssAsync, ssArrayHlp, ssToastHlp) {\n\t\tconst routeVm = $scope.routeVm;\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentPermissionsUsersUserDetailContentLogic');// jshint ignore:line\n\n\t\tconst vm = $scope.vm = {\n\t\t\tsecurityGroupScope: enumSecurityGroupScope,\n\t\t\tselected: false,\n\t\t\taddAdditional: false,\n\t\t\texpanded: false,\n\t\t\tpermissions: {},\n\t\t\titemsInScope: {}\n\t\t};\n\n\t\tvar groups, profiles;\n\t\tvar allGroupProfiles = [];\n\n\t\tconst go = $scope.go = { // eslint-disable-line\n\n\t\t\tremoveUserFromGroup(emp, group) {\n\t\t\t\tlet updatedGroup = logic.removeUserFromGroup(emp, group);\n\t\t\t\tif(!updatedGroup) {\n\t\t\t\t\tssToastHlp.error(`${emp.fullName} does not belong to \"${group._groupName}\"`, 'Remove User From Group', false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tupdatedGroup.$save().then(res => {\n\t\t\t\t\tvm.groups.splice(vm.groups.indexOf(group), 1);\n\t\t\t\t\tssToastHlp.success(`${emp.fullName} has been successfully removed from \"${group._groupName}\"`, 'Remove User From Group', false);\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tssToastHlp.error(`${emp.fullName} was not successfully removed from \"${group._groupName}\"`, 'Remove User From Group', false);\n\t\t\t\t\tconsole.log('Error saving \"${group._groupName}\"', e);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction createDisplayedScopes(sScope) {\n\t\t\tvm.itemsInScope[sScope.id] = Object.assign({},\n\t\t\t\tlogic.createScopeObj({type: 'Location', context: sScope._locationAdministrationContext, total: sScope._locationIds.length, emp: routeVm.emp}),\n\t\t\t\tlogic.createScopeObj({type: 'Dept', context: sScope._departmentAdministrationContext, total: sScope._departmentIds.length, emp: routeVm.emp}),\n\t\t\t\tlogic.createScopeObj({type: 'Job Types', context: sScope._jobTypeAdministrationContext, total: sScope._jobTypeIds.length, emp: routeVm.emp}),\n\t\t\t\tlogic.createScopeObj({type: 'Employees', context: sScope._employeeAdministrationContext, total: sScope._employeeIds.length, emp: routeVm.emp})\n\t\t\t\t);\n\t\t};\n\n\t\tfunction assignGroupsToProfiles(sScope, group) {\n\t\t\tsScope.permissionProfile = profiles.find(p => sScope._permissionProfileId === p.id);\n\t\t\tif (sScope.permissionProfile != null) {\n\t\t\t\tlet profile = sScope.permissionProfile;\n\t\t\t\tif (!angular.isArray(profile.groups)) {\n\t\t\t\t\tprofile.groups = [];\n\t\t\t\t}\n\t\t\t\tif (profile.groups.indexOf(group) < 0) {\n\t\t\t\t\tprofile.groups.push(group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getAllProfiles(group) {\n\t\t\tlet groupProfiles = group._securityScopes.map(s => s.permissionProfile);\n\t\t\tallGroupProfiles = [...allGroupProfiles, ...groupProfiles];\n\t\t};\n\n\t\tfunction extendGroups(groups) {\n\t\t\tgroups.forEach((group) => {\n\t\t\t\tgroup._securityScopes.forEach(sScope => {\n\t\t\t\t\tassignGroupsToProfiles(sScope, group);\n\t\t\t\t\tcreateDisplayedScopes(sScope);\n\t\t\t\t});\n\t\t\t\tgetAllProfiles(group);\n\t\t\t});\n\t\t};\n\n\t//\tinitialize the data\n\t\tfunction init() {\n\t\t\tssAsync(function*() {\n\t\t\t\tvm.loading = true;\n\t\t\t\ttry {\n\t\t\t\t//\tget the groups & profiles\n\t\t\t\t\t[groups, profiles] = yield $q.all([routeVm.securityGroupsPromise,routeVm.profilesPromise]);\n\t\t\t\t//\tfilter on groups that have this employee as a child\n\t\t\t\t\tvm.groups = groups.filter(g => g._employeeIds.find(e => e === routeVm.emp.id) || (g._appliesToAllEmployees && !g._locked));\n\t\t\t\t//\tget the item in scope\n\t\t\t\t\textendGroups(vm.groups);\n\t\t\t\t//\tfind unique profiles\n\t\t\t\t\tvm.uniqueProfiles = ssArrayHlp.unique(allGroupProfiles);\n\t\t\t\t//\tget permission sets\n\t\t\t\t\tvm.permissions = logic.getContextPermissions($scope.permissionsVm.contexts, vm.uniqueProfiles);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tconsole.error('Error initializing Data', e);\n\t\t\t\t} finally {\n\t\t\t\t\tvm.loading = false;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tinit();\n\n\t}\n}\n\n// #-- END Segment (/permissions/users/user-detail/segment-content) --# //\n// #------------------------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentPermissionsUsersUserDetailContent', () => new Content(\n\t'content'));\n","/*@ngInject*/\nfunction logic(enumSecurityGroupScope, createPermissionsHlp, ssStringHlp) {\n\n\t// logic api\n\treturn {\n\n\t\tcreateScopeObj(config) {\n\t\t\tvar obj = {};\n\t\t\tvar key = ssStringHlp.toCamelCase(config.type);\n\t\t\tobj[key] = getScopeControl(config.type, config.context, config.total, config.emp);\n\t\t\treturn obj;\n\t\t},\n\n\t\tgetContextPermissions(contexts, profiles) {\n\t\t\tlet permissions = {};\n\t\t\tcontexts.forEach(context => {\n\t\t\t\tpermissions[context.id] = [];\n\n\t\t\t\tlet registration = context._protectedResourceRegistration;\n\t\t\t\tprofiles.forEach(profile => {\n\t\t\t\t\tif (profile == null) { return; }\n\n\t\t\t\t\tlet permissionSet = profile._permissionSets.find(s => s._protectedContextRegistrationId === context.id);\n\n\t\t\t\t\tif (permissionSet == null) {\n\t\t\t\t\t\tpermissionSet = createPermissionsHlp.permissionSet();\n\t\t\t\t\t\tpermissionSet._protectedContextRegistrationId = context.id;\n\t\t\t\t\t\tpermissionSet._permissions.resourceName = registration.resourceName;\n\n\t\t\t\t\t\tprofile._permissionSets.push(permissionSet);\n\t\t\t\t\t}\n\t\t\t\t\tpermissions[context.id].push(permissionSet._permissions);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn permissions;\n\t\t},\n\n\t\tremoveUserFromGroup(emp, group) {\n\t\t\tlet eIndex = group._employeeIds.indexOf(emp.id);\n\t\t\tif (eIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgroup._employeeIds.splice(eIndex, 1);\n\t\t\t// create a new reference for json api to pick up\n\t\t\tgroup._employeeIds = [...group._employeeIds];\n\t\t\treturn group;\n\t\t}\n\t};\n\n\tfunction getScopeControl(type, context, count, emp) {\n\t\tswitch(context) {\n\t\t\tcase enumSecurityGroupScope.none:\n\t\t\t\treturn `No ${type}s`;\n\t\t\tcase enumSecurityGroupScope.self:\n\t\t\t\treturn `${emp._firstName}'s Own ${type}`;\n\t\t\tcase enumSecurityGroupScope.specific:\n\t\t\t\tlet label = count === 1 ? type : `${type}s`;\n\t\t\t\treturn `Specific: ${label}`;\n\t\t\tcase enumSecurityGroupScope.all:\n\t\t\t\treturn `Any`;\n\t\t\tcase enumSecurityGroupScope.directReports:\n\t\t\t\treturn `${count} Direct Report${count !== 1 ? 's' : ''}`;\n\t\t}\n\t}\n\n}\nangular.module('ec-settings-segment-logic').factory('segmentPermissionsUsersUserDetailContentLogic', logic);\n","import {State} from 'base-state';\n// #-----------------------------------------------# //\n// #---- State (/permissions/users/user-detail) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.users.detail';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/{userId:[0-9A-Za-z-]{36}}',\n\ttemplateUrl: 'routes/permissions/users/user-detail/user-detail.html',\n\tresolve: {\n\t\temp: /*@ngInject*/ function($stateParams, ssAsync, ssEmployeeApi) {\n\t\t\treturn ssAsync(function*() {\n\t\t\t\trouteVm.emp = yield ssEmployeeApi.get({\n\t\t\t\t\tid: $stateParams.userId,\n\t\t\t\t\tfields: 'firstName,lastName'\n\t\t\t\t});\n\t\t\t})();\n\t\t},\n\t\tpromises: /*@ngInject*/ (ssSecurityGroupsApi, ssPermissionProfilesApi) => {\n\t\t\t[routeVm.securityGroupsPromise, routeVm.profilesPromise] = [\n\t\t\t\tssSecurityGroupsApi.query({\n\t\t\t\t\tinclude: 'securityScopes',\n\t\t\t\t\tlimit: 50\n\t\t\t\t}),\n\t\t\t\t/*\n\n\t\t\t\t\tlimit: 50\n\t\t\t\t\tIs the max number of record the end point can send at a time\n\t\t\t\t\tfurther records can be retrieved iteratively.\n\n\t\t\t\t\tWe are showing the list of Permission Profiles in the dropdown and\n\t\t\t\t\twe have to either iteratively load all the Profiles and then show them\n\t\t\t\t\tin drop down or drop downs have to support lazy loading.\n\n\t\t\t\t\tMel has mentioned in the ticket https://frontlinetechnologies.atlassian.net/browse/PLAT-4804\n\t\t\t\t\tthat she is fine with limit of 50 and expect that districts will not going\n\t\t\t\t\tto exceed the limit.\n\t\t\t\t*/\n\t\t\t\tssPermissionProfilesApi.query({\n\t\t\t\t\tinclude: 'permissionSets',\n\t\t\t\t\tlimit: 50\n\t\t\t\t})\n\t\t\t];\n\t\t},\n\t\t$title: /*@ngInject*/ (emp) => {\n\t\t\tif (emp == null) {\n\t\t\t\treturn 'Frontline Central - User Detail';\n\t\t\t}\n\t\t\treturn `Frontline Central - ${emp.fullName}`;\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/users/user-detail) --# //\n// #-----------------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import {State} from 'base-state';\n// #------------------------------------# //\n// #---- State (/permissions/users) ----# //\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'permissions.users';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/users',\n\ttemplateUrl: 'routes/permissions/users/users.html',\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Permissions Users';\n\t\t}\n\t}\n};\n\n// #-- END State (/permissions/users) --# //\n// #------------------------------------# //\n\nangular.module('ec-settings').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\n\tconst defaultRoute = '/ec-settings/permissions/users/all';\n\tconst baseRoute = '/ec-settings/permissions/users';\n\n\t$urlRouterProvider.when(baseRoute, defaultRoute);\n\t$urlRouterProvider.when(`${baseRoute}/`, defaultRoute);\n\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\n","import { Segment } from 'base-segment';\n// #--------------------------------------------------# //\n// #---- Segment (/user-accounts/segment-content) ----# //\n\nclass Content extends Segment {\n\n\t/*@ngInject*/\n\tcontroller($injector, $sce, $scope, $filter, $window, $log, rAF, ssAsync, ssEmployeeApi, ssOrganizationApi, ssActiveUserSvc, ssToastHlp, ssValidationHlp, enumFlInviteStatus, ssStringHlp, ssModalSvc) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentUserAccountsContentLogic');// jshint ignore:line\n\n\t\tlet validation = $scope.validation = {\n\t\t\trequired: ssValidationHlp.required(),\n\t\t\temail: ssValidationHlp.email({ required: true })\n\t\t};\n\n\t\tconst batchSize = 50;\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tselectedAll: false,\n\t\t\tinviteStatus: enumFlInviteStatus,\n\t\t\tinitalLimit: batchSize,\n\t\t\temps: [],\n\t\t\tselectedEmps: [],\n\t\t\tfilterSelected: false,\n\t\t\tloading: false,\n\t\t\tloadingStatus: '',\n\t\t\tsearch: '',\n\t\t\tloadingCredentials: true,\n\t\t\tallSelected: []\n\t\t};\n\n\n\t\tconst pageSize = 10000;\n\n\t\tvar filtering = false;\n\n\t\t$scope.filtered = [];\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tselectAll() {\n\t\t\t\tlet dataHolder = [];\n\t\t\t\tvm.emps.filter(x => x.isVisible).forEach(x => x.$selected = vm.selectedAll);\n\t\t\t\tif (vm.selectedAll) {\n\t\t\t\t\tdataHolder = vm.selectedEmps.concat(vm.emps.filter(x => x.isVisible));\n\t\t\t\t} else {\n\t\t\t\t\tdataHolder = vm.selectedEmps.filter(function (selRow) {\n\t\t\t\t\t\treturn vm.emps.filter(function (x) { return x.isVisible && x.id === selRow.id; }).length === 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tvm.selectedEmps = dataHolder;\n\t\t\t},\n\t\t\tselectOne(emp) {\n\t\t\t\tif (emp.$selected) {\n\t\t\t\t\tvm.selectedEmps.push(emp);\n\t\t\t\t} else {\n\t\t\t\t\tvm.selectedEmps = vm.selectedEmps.filter(function (v) { return v !== emp; });\n\t\t\t\t}\n\t\t\t\tvm.selectedAll = vm.emps.every(x => x.$selected === true)\n\t\t\t},\n\t\t\tloadNext() {\n\t\t\t\tif (vm.initalLimit <= vm.emps.length) {\n\t\t\t\t\tvm.initalLimit = vm.initalLimit + batchSize;\n\t\t\t\t}\n\t\t\t},\n\t\t\teditModeOn(emp, domId) {\n\t\t\t\temp.editMode = true;\n\t\t\t\trAF(function () {\n\t\t\t\t\tconst superInputText = document.getElementById(domId);\n\t\t\t\t\tconst inputEl = superInputText.getElementsByTagName('input');\n\t\t\t\t\tif (inputEl) { inputEl[0].focus(); }\n\t\t\t\t}, $scope);\n\t\t\t},\n\n\t\t\tfilterResults(category) {\n\n\t\t\t\tgo.clearAll();\n\n\t\t\t\tif (category && category !== 'all') {\n\t\t\t\t\tcategory = ssStringHlp.toCamelCase(category);\n\t\t\t\t\tvm.categoryVal = enumFlInviteStatus[category];\n\t\t\t\t\tvm.selectedFilter = category;\n\t\t\t\t} else {\n\t\t\t\t\tvm.categoryVal = '';\n\t\t\t\t\tvm.selectedFilter = 'all';\n\t\t\t\t}\n\n\t\t\t\tfilterAndSort();\n\n\t\t\t\tvm.categoryTotal = $scope.filtered.length;\n\t\t\t},\n\n\t\t\tinvite(emps, isBulk) {\n\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Sending Invitations...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tlet invitedEmps = emps.map((e) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\temployeeId: e.id,\n\t\t\t\t\t\temail: e._flUser.invitationEmailAddress,\n\t\t\t\t\t\treturnUrl: $window.location.origin,\n\t\t\t\t\t\tfirstName: e._firstName,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield ssEmployeeApi.invite(invitedEmps);\n\n\t\t\t\t\t\tlet employees = [];\n\n\t\t\t\t\t\tvm.emps.forEach(e => {\n\t\t\t\t\t\t\tif (emps.find(iEmps => iEmps.id === e.id)) {\n\t\t\t\t\t\t\t\te._flUser.invitationSentUtc = new Date();\n\t\t\t\t\t\t\t\temployees.push(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tyield employees.map(emp => emp.$save());\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tif (isBulk) {\n\t\t\t\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\t\t\t\temps: emps,\n\t\t\t\t\t\t\t\tcontent: `<h2>You successfully sent <ng-pluralize count=\"emps.length\" when=\"{'1': 'an invitation','other': 'invitations'}\"></ng-pluralize> to <br /><ng-pluralize count=\"emps.length\" when=\"{'1': '${emps[0].fullName}','other': '{} people'}\"></ng-pluralize></span></h2>`,\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\n\t\t\t\t\t\t\t\tshowSecondary: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tssToastHlp.success(`An invitation has been successfully sent to ${emps[0].fullName}`, `Invitation Sent`, false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\trevoke(emps) {\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Revoking Access...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tssAsync(function* () {\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield emps.map(emp => ssEmployeeApi.revoke(emp.id));\n\n\t\t\t\t\t\temps.forEach(e => {\n\t\t\t\t\t\t\te._flUser.invitationSentUtc = null;\n\t\t\t\t\t\t\te.flStatus = vm.inviteStatus.noAccess;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tyield emps.map(e => e.$save());\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tssToastHlp.success(`Access has been revoked for ${emps[0].fullName}`, 'Acccess Revoked', false);\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (e.status !== 404) { } // jshint ignore:line\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\n\t\t\t\t})();\n\t\t\t},\n\t\t\tdeactivate(emps, isBulk) {\n\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Pausing Access...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tlet ids = emps.map(e => e.id);\n\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield ssEmployeeApi.deactivate(ids);\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tif (isBulk) {\n\t\t\t\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\t\t\t\temps: emps,\n\t\t\t\t\t\t\t\tcontent: `<h2>You successfully paused access for <br /><ng-pluralize count=\"emps.length\" when=\"{'1': '${emps[0].fullName}','other': '{} people'}\"></ng-pluralize></h2>`,\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\n\t\t\t\t\t\t\t\tshowSecondary: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tssToastHlp.success(`Access has been paused for ${emps[0].fullName}`, 'Access Paused', false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\n\t\t\tactivate(emps, isBulk) {\n\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Resuming Access...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tlet ids = emps.map(e => e.id);\n\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield ssEmployeeApi.activate(ids);\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tif (isBulk) {\n\t\t\t\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\t\t\t\temps: emps,\n\t\t\t\t\t\t\t\tcontent: `<h2>You successfully resumed access for <br /><ng-pluralize count=\"emps.length\" when=\"{'1': '${emps[0].fullName}','other': '{} people'}\"></ng-pluralize></h2>`,\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\n\t\t\t\t\t\t\t\tshowSecondary: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tssToastHlp.success(`Access has been resumed for ${emps[0].fullName}`, 'Access resumed', false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\n\t\t\tsaveEmail(emp) {\n\t\t\t\temp.saving = true;\n\t\t\t\temp.$save().then(res => {\n\t\t\t\t\temp.editMode = false;\n\t\t\t\t\trAF(function () {\n\t\t\t\t\t\temp.saving = false;\n\t\t\t\t\t}, $scope);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcancelEdit(emp) {\n\t\t\t\temp.saving = true;\n\t\t\t\temp.$revert();\n\n\t\t\t\tif (emp._flUser.invitationEmailAddress == null) {\n\t\t\t\t\temp._flUser.invitationEmailAddress = emp.bestContactEmail;\n\t\t\t\t}\n\n\t\t\t\trAF(function () {\n\t\t\t\t\temp.saving = false;\n\t\t\t\t}, $scope);\n\n\t\t\t\temp.editMode = false;\n\t\t\t},\n\n\t\t\tsendMultiple() {\n\t\t\t\tlet selected = vm.selectedEmps.filter(e =>\n\t\t\t\t\te._flUser.invitationEmailAddress &&\n\t\t\t\t\tvalidation.email(e._flUser.invitationEmailAddress) === true &&\n\t\t\t\t\t(e.flStatus === vm.inviteStatus.sent || e.flStatus === vm.inviteStatus.noAccess));\n\n\t\t\t\tlet modalConfig = {\n\t\t\t\t\tselected: selected,\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tprimaryText: '',\n\t\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t\t};\n\n\t\t\t\t// Determine the modal messaging\n\t\t\t\tif (selected.length === vm.selectedEmps.length) {\n\t\t\t\t\tmodalConfig.content = `<h2>You are sending <ng-pluralize count=\"selected.length\" when=\"{'1': 'an invitation','other': 'invitations'}\"></ng-pluralize> to <br />${selected.length} <ng-pluralize count=\"selected.length\" when=\"{'1': 'person.','other': 'people.'}\"></ng-pluralize></h2>`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.content = `<h2>You <ng-pluralize count=\"selected.length\" when=\"{'0': 'can not','1': 'can only', 'other': 'can only'}\"></ng-pluralize> send <ng-pluralize count=\"selected.length\" when=\"{'one': 'an invitation','other': 'invitations'}\"></ng-pluralize> to <br /><ng-pluralize count=\"selected.length\" when=\"{'0': 'any of the people selected.', 'one': '{} of the ${vm.selectedEmps.length} people selected.', 'other': '{} of the ${vm.selectedEmps.length} people selected.'}\"></ng-pluralize>\n\t\t\t\t\t</h2>`;\n\t\t\t\t}\n\n\t\t\t\t// Determine what buttons are shown and their label text\n\t\t\t\tif (selected.length < 1) {\n\t\t\t\t\tmodalConfig.showPrimary = false;\n\t\t\t\t} else if (selected.length === 1) {\n\t\t\t\t\tmodalConfig.primaryText = `Send an Invitation to 1 person`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.primaryText = `Send Invitations to ${selected.length} people`;\n\t\t\t\t}\n\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\n\t\t\t\t\tgo.invite(selected, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tactivateMultiple() {\n\t\t\t\tlet selected = vm.selectedEmps.filter(e => e.flStatus === vm.inviteStatus.inactive);\n\n\t\t\t\tlet modalConfig = {\n\t\t\t\t\tselected: selected,\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tprimaryText: '',\n\t\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t\t};\n\n\t\t\t\t// Determine the modal messaging\n\t\t\t\tif (selected.length === vm.selectedEmps.length) {\n\t\t\t\t\tmodalConfig.content = `<h2>You are resuming access for ${selected.length} <ng-pluralize count=\"selected.length\" when=\"{'1': 'person.','other': 'people.'}\"></ng-pluralize></h2>`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.content = `<h2>You <ng-pluralize count=\"selected.length\" when=\"{'0': 'can not','1': 'can only', 'other': 'can only'}\"></ng-pluralize> resume access for <br /><ng-pluralize count=\"selected.length\" when=\"{'0': 'any of the people selected.', 'one': '{} of the ${vm.selectedEmps.length} people selected.', 'other': '{} of the ${vm.selectedEmps.length} people selected.'}\"></ng-pluralize>\n\t\t\t\t\t</h2>`;\n\t\t\t\t}\n\n\t\t\t\t// Determine what buttons are shown and their label text\n\t\t\t\tif (selected.length < 1) {\n\t\t\t\t\tmodalConfig.showPrimary = false;\n\t\t\t\t} else if (selected.length === 1) {\n\t\t\t\t\tmodalConfig.primaryText = `Resume Access for 1 person`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.primaryText = `Resume Access for ${selected.length} people`;\n\t\t\t\t}\n\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\n\t\t\t\t\tgo.activate(selected, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdeactivateMultiple() {\n\t\t\t\tlet selected = vm.selectedEmps.filter(e => e.flStatus === vm.inviteStatus.active);\n\n\t\t\t\tlet modalConfig = {\n\t\t\t\t\tselected: selected,\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tprimaryText: '',\n\t\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t\t};\n\n\t\t\t\t// Determine the modal messaging\n\t\t\t\tif (selected.length === vm.selectedEmps.length) {\n\t\t\t\t\tmodalConfig.content = `<h2>You are pausing access for <ng-pluralize count=\"selected.length\" when=\"{'1': '{} person','other': '{} people'}\"></ng-pluralize></h2>`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.content = `<h2>You <ng-pluralize count=\"selected.length\" when=\"{'0': 'can not','1': 'can only', 'other': 'can only'}\"></ng-pluralize> pause access for <br /><ng-pluralize count=\"selected.length\" when=\"{'0': 'any of the people selected.', 'one': '{} of the ${vm.selectedEmps.length} people selected.', 'other': '{} of the ${vm.selectedEmps.length} people selected.'}\"></ng-pluralize>\n\t\t\t\t\t</h2>`;\n\t\t\t\t}\n\n\t\t\t\t// Determine what buttons are shown and their label text\n\t\t\t\tif (selected.length < 1) {\n\t\t\t\t\tmodalConfig.showPrimary = false;\n\t\t\t\t} else if (selected.length === 1) {\n\t\t\t\t\tmodalConfig.primaryText = `Pause Access for 1 person`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.primaryText = `Pause Access for ${selected.length} people`;\n\t\t\t\t}\n\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\n\t\t\t\t\tgo.deactivate(selected, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tshowCredentials(emp) {\n\t\t\t\tvm.loadingCredentials = true;\n\t\t\t\tvm.credentialHtml = '';\n\t\t\t\tssEmployeeApi.getUserAccountCredentials({\n\t\t\t\t\tflId: emp.flId\n\t\t\t\t}).then((creds) => {\n\t\t\t\t\tlet html = `\n\t\t\t\t\t\t<dl class=\"meta-list\">\n\t\t\t\t\t\t\t<dt class=\"meta-list-term\">Username:</dt>\n\t\t\t\t\t\t\t\t<dd class=\"meta-list-desc\">${creds._userName}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t<dt class=\"meta-list-term\">Email:</dt>\n\t\t\t\t\t\t\t\t<dd class=\"meta-list-desc\">${creds._email}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t`\n\t\t\t\t\tvm.credentialHtml = $sce.trustAsHtml(html);\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tconsole && console.error && console.error(e, 'Error fetching credentials');\n\t\t\t\t}).finally(() => { vm.loadingCredentials = false; });\n\t\t\t},\n\t\t\tshowInvitationStatus(emp) {\n\t\t\t\tvm.invitationHtml = $sce.trustAsHtml(`<h5>Invitation status:</h5>\n\t\t\t\t\t<p>\n\t\t\t\t\tsent\n\t\t\t\t\t<span ng-if=\"emp._flUser.invitationEmailAddress\">\n\t\t\t\t\t\tto ${emp._flUser.invitationEmailAddress}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"sent-date\">\n\t\t\t\t\t\ton ${$filter('date')(emp._flUser.invitationSentUtc, 'MM/dd/yy')}\n\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t`);\n\t\t\t},\n\t\t\tclearAll() {\n\t\t\t\tvm.initalLimit = batchSize;\n\t\t\t\tvm.selectedEmps = [];\n\t\t\t\tvm.allSelected = [];\n\t\t\t\tvm.search = '';\n\t\t\t\tvm.filterSelected = false;\n\t\t\t\tvm.emps.forEach(x => x.$selected = false);\n\t\t\t\tvm.selectedAll = false;\n\t\t\t}\n\t\t};\n\n\t\trefreshResults();\n\n\t\t$scope.$watch('vm.filterSelected', (nv) => {\n\t\t\tif (nv) {\n\t\t\t\tvm.search = '';\n\t\t\t}\n\t\t\tfilterAndSort();\n\t\t\tvm.selectedAll = vm.emps.filter(x => x.isVisible).every(x => x.$selected === true);\n\t\t});\n\n\t\t$scope.$watch('vm.search', (nv) => {\n\t\t\tif (nv) {\n\t\t\t\tvm.filterSelected = false;\n\t\t\t}\n\t\t\tfilterAndSort();\n\t\t\tvm.selectedAll = vm.emps.filter(x => x.isVisible).every(x => x.$selected === true);\n\t\t});\n\n\t\t$scope.$watchCollection('vm.selectedEmps', (nv, ov) => {\n\n\t\t\tif (filtering) { return; }\n\n\t\t\tconst removedRows = ov.filter(oldRow => !nv.includes(oldRow));\n\t\t\tconst addedRows = nv.filter(newRow => !ov.includes(newRow));\n\n\t\t\taddedRows.forEach((row) => {\n\t\t\t\tif (!vm.allSelected.includes(row)) {\n\t\t\t\t\tvm.allSelected.push(row);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvm.allSelected = vm.allSelected.filter((row) => {\n\t\t\t\treturn !removedRows.includes(row);\n\t\t\t});\n\n\t\t\tif (vm.allSelected.length === 0) {\n\t\t\t\tvm.filterSelected = false;\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watchCollection('filtered', (nv) => {\n\t\t\tnv.forEach((visibleRow) => {\n\t\t\t\tif (vm.allSelected.includes(visibleRow) && !vm.selectedEmps.includes(visibleRow)) {\n\t\t\t\t\tvm.selectedEmps.push(visibleRow);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t\tfunction refreshResults() {\n\t\t\tif (vm.loading) { return; }\n\n\t\t\tlet currentPage = 0;\n\n\t\t\t// set to prevent multiple calls from firing at the same time on scroll\n\t\t\tvm.loading = true;\n\n\t\t\treturn (ssAsync(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvar orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\t\tlet employeeList = [];\n\t\t\t\t\tvm.selectedEmps = [];\n\t\t\t\t\tvm.search = '';\n\t\t\t\t\tcurrentPage++;\n\t\t\t\t\tlet activeCount = 0;\n\t\t\t\t\tlet inactiveCount = 0;\n\t\t\t\t\tlet sentCount = 0;\n\t\t\t\t\tlet noAccessCount = 0;\n\t\t\t\t\tvar filter = Object.assign({}, {\n\t\t\t\t\t\tfields: 'firstname,lastname,fluser,ownerid,ownerversionnumber',\n\t\t\t\t\t\tinclude: 'emails',\n\t\t\t\t\t\toffset: (currentPage - 1) * pageSize,\n\t\t\t\t\t\tlimit: pageSize\n\t\t\t\t\t});\n\n\t\t\t\t\t//\tGet the first set of employees\n\t\t\t\t\tvm.loadingStatus = 'Loading users. This may take a while.';\n\t\t\t\t\temployeeList = yield ssEmployeeApi.getEmployeeAccess(filter);\n\t\t\t\t\tvm.totalEmployees = vm.categoryTotal = parseInt(employeeList.$headers['total-results'], 10);\n\n\t\t\t\t\t//\tGet the number of total pages, and since we've already loaded the first page,\n\t\t\t\t\t//\tsubtract it from the total\n\t\t\t\t\tlet pages = getPages(vm.totalEmployees, pageSize) - 1;\n\n\t\t\t\t\t// If there is more than 1 page, get the rest\n\t\t\t\t\tfor (var i = 0; i < pages; i++) {\n\t\t\t\t\t\tcurrentPage++;\n\t\t\t\t\t\tfilter.offset = (currentPage - 1) * pageSize;\n\t\t\t\t\t\t//vm.loadingStatus = Math.round((filter.offset / vm.totalEmployees) * 100) + '%';\n\t\t\t\t\t\t//\temployeeList no longer a json-api collection\n\t\t\t\t\t\temployeeList = [...employeeList, ...(yield ssEmployeeApi.getEmployeeAccess(filter))];\n\t\t\t\t\t}\n\n\t\t\t\t\t//\tGet all FL users and match them with EC users to determine their product access status\n\t\t\t\t\tlet flUsers = (yield ssEmployeeApi.productAccessStatus()).data\n\t\t\t\t\tlet userDictionary = flUsers.reduce(\n\t\t\t\t\t\tfunction (prev, curr) {\n\t\t\t\t\t\t\tvar user = curr.identities.find(\n\t\t\t\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\t\t\t\treturn a.type === 'employee'\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprev[user.id] = {\n\t\t\t\t\t\t\t\tflId: curr.flId,\n\t\t\t\t\t\t\t\tenabled: curr.enabled,\n\t\t\t\t\t\t\t\tproductAccess: curr\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {});\n\n\t\t\t\t\temployeeList.forEach(emp => {\n\t\t\t\t\t\t// Clear the selected flag that the grid uses to determined selected-ness\n\t\t\t\t\t\temp.$selected = false;\n\n\t\t\t\t\t\t// EC App access uses the best contact email if the FL record doesn't specify the address\n\t\t\t\t\t\tif (emp._flUser.invitationEmailAddress == null) {\n\t\t\t\t\t\t\temp._flUser.invitationEmailAddress = emp.bestContactEmail;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Pre-format the name since we're in here.\n\t\t\t\t\t\temp.displayName = `${emp._lastName}, ${emp._firstName}`;\n\n\t\t\t\t\t\t// Reset the record's edit status\n\t\t\t\t\t\temp.editMode = false;\n\t\t\t\t\t\temp.isVisible = true;\n\n\t\t\t\t\t\t// Set the employee's FLID and their enabled-ness\n\t\t\t\t\t\tlet flUser = userDictionary[emp.id];\n\t\t\t\t\t\temp.flId = null;\n\t\t\t\t\t\temp.enabled = false;\n\t\t\t\t\t\tif (flUser) {\n\t\t\t\t\t\t\temp.productAccessUser = flUser;\n\t\t\t\t\t\t\temp.flId = flUser.flId;\n\t\t\t\t\t\t\temp.enabled = flUser.enabled;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the user's status according to product access info\n\t\t\t\t\t\temp.flStatus = setFlStatus(emp);\n\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.active) { activeCount++; }\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.inactive) { inactiveCount++; }\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.sent) { sentCount++; }\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.noAccess) { noAccessCount++; }\n\t\t\t\t\t});\n\n\t\t\t\t\tvm.emps = employeeList;\n\n\t\t\t\t\tgo.filterResults();\n\n\t\t\t\t\tvm.activeCount = activeCount;\n\t\t\t\t\tvm.inactiveCount = inactiveCount;\n\t\t\t\t\tvm.sentCount = sentCount;\n\t\t\t\t\tvm.noAccessCount = noAccessCount;\n\t\t\t\t\tvm.totalCount = vm.activeCount + vm.inactiveCount + vm.sentCount + vm.noAccessCount;\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tssToastHlp.error('Error retrieving employees. Please try again later.');\n\t\t\t\t\t$log.error(e)\n\t\t\t\t} finally {\n\t\t\t\t\trAF(() => vm.loading = false, $scope);\n\t\t\t\t}\n\t\t\t})());\n\t\t}\n\n\t\tfunction filterAndSort() {\n\t\t\tfiltering = true;\n\n\t\t\tif (vm.filterSelected) {\n\t\t\t\t$scope.filtered = vm.allSelected;\n\t\t\t} else {\n\t\t\t\t$scope.filtered = $filter('filter')(vm.emps, {\n\t\t\t\t\tflStatus: vm.categoryVal,\n\t\t\t\t\tfullName: vm.search\n\t\t\t\t});\n\t\t\t}\n\t\t\tvm.emps.forEach((emp) => {\n\t\t\t\temp.isVisible = $scope.filtered.includes(emp);\n\t\t\t});\n\n\t\t\trAF.raw(() => filtering = false);\n\t\t}\n\n\t\t/**\n\t\t * Sets the product access status (for display only) of an EC User based on their FL user status\n\t\t *\n\t\t * @param {any} emp - a Frontline Central employee record with attached Product Access record attached\n\t\t * @returns enumFlInviteStatus value\n\t\t */\n\t\tfunction setFlStatus(emp) {\n\t\t\treturn logic.setFLUserStatus(emp, enumFlInviteStatus);\n\t\t}\n\n\n\t\tfunction getPages(count, size) {\n\t\t\tvar remainder = count % size;\n\t\t\tvar div = (count - remainder) / size;\n\t\t\treturn div + (remainder > 0 ? 1 : 0);\n\t\t}\n\t}\n}\n\n// #-- END Segment (/user-accounts/segment-content) --# //\n// #--------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentUserAccountsContentOld', () => new Content('content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\tsetFLUserStatus\n\t};\n\n\t/**\n\t * Sets the Frontline User's Display Status on the Applicaiont Access Page\n\t *\n\t * @emp {any} An employee record of Frontline Central\n\t * @returns enumFlInviteSstatus value for the employee/product access record\n\t */\n\tfunction setFLUserStatus(emp, enumFlInviteStatus) {\n\t\t// The default status if everything fails.\n\t\t//\tMinimum displayable status should be no access since we can't figure it out\n\t\tlet status = enumFlInviteStatus.noAccess;\n\n\t\t// It would be odd if this property wasn't there, so no access for you if it doesn't exist!\n\t\tif (emp.productAccessUser == null) {\n\t\t\treturn status;\n\t\t}\n\n\t\t/**\n\t\t * ***** DUPLICATED FROM THE SOR APPLICATION ACCESS LOGIC ******\n\t\t * Check if the user has pending invitations that are not expired\n\t\t * The expired check is done because IsPending is not changed to false immediately on expiration\n\t\t */\n\t\tlet hasPendingInvite = false;\n\t\tlet productAccess = emp.productAccessUser.productAccess || { invitations: [] }; // another safety check on invitations.\n\n\t\tif (productAccess.invitations) {\n\t\t\tproductAccess.invitations.forEach((invitation) => {\n\t\t\t\tif (invitation.isPending && !invitation.isExpired) {\n\t\t\t\t\thasPendingInvite = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/************************************************\n\t\t *END SOR LOGIC DUPLICATION\n\t\t ************************************************/\n\n\t\tif (emp.flId) {\n\t\t\tif (emp.enabled) { // => enabled is set from a corresponding ProductAccess record for that user\n\t\t\t\tstatus = enumFlInviteStatus.active;\n\t\t\t} else {\n\t\t\t\tstatus = enumFlInviteStatus.inactive;\n\t\t\t}\n\t\t}\n\n\t\tif (!emp.flId) {\n\t\t\tif (hasPendingInvite) {\n\t\t\t\tstatus = enumFlInviteStatus.sent;\n\t\t\t} else {\n\t\t\t\tstatus = enumFlInviteStatus.noAccess;\n\t\t\t}\n\t\t}\n\n\t\treturn status\n\t}\n}\nangular.module('ec-settings-segment-logic').factory('segmentUserAccountsContentLogic', logic);\n","import { Segment } from 'base-segment';\n// #--------------------------------------------------# //\n// #---- Segment (/user-accounts/segment-content) ----# //\n\nclass Content extends Segment {\n\n\t/*@ngInject*/\n\tcontroller($injector, $sce, $scope, $filter, $window, $log, rAF, ssAsync, ssEmployeeApi, ssOrganizationApi, ssActiveUserSvc, ssToastHlp, ssValidationHlp, enumFlInviteStatus, ssStringHlp, ssModalSvc, ssObjectHlp) {\n\t\t// view model that is shared by all segments on this route,\n\t\t// used for segment coordination\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\n\n\t\t// hookup segment logic\n\t\tconst logic = $injector.get('segmentUserAccountsContentLogic');// jshint ignore:line\n\n\t\tlet validation = $scope.validation = {\n\t\t\trequired: ssValidationHlp.required(),\n\t\t\temail: ssValidationHlp.email({ required: true })\n\t\t};\n\n\t\tconst batchSize = 50;\n\n\t\t// view model for tracking state\n\t\tconst vm = $scope.vm = {\n\t\t\tselectedAll: false,\n\t\t\tinviteStatus: enumFlInviteStatus,\n\t\t\tinitalLimit: batchSize,\n\t\t\temps: [],\n\t\t\tselectedEmps: [],\n\t\t\tfilterSelected: false,\n\t\t\tloading: false,\n\t\t\tloadingStatus: '',\n\t\t\tsearch: '',\n\t\t\tloadingCredentials: true,\n\t\t\tallSelected: [],\n\t\t\thasAppLevelAccess: false,\n\t\t\thasOrgLevelAccess: false\n\t\t};\n\n\t\tconst permissions = $scope.$root.isPermitted;\n\n\t\tvm.hasAppLevelAccess = ssObjectHlp.glean(permissions, _ => _.users.manageApplicationAccessEC, false);\n\t\tvm.hasOrgLevelAccess = ssObjectHlp.glean(permissions, _ => _.users.manageOrganizationAccess, false);\n\n\t\tconst pageSize = 10000;\n\n\t\tvar filtering = false;\n\n\t\t$scope.filtered = [];\n\n\t\t// behavior that needs to be bound to the view\n\t\tconst go = $scope.go = {\n\t\t\tselectAll() {\n\t\t\t\tlet dataHolder = [];\n\t\t\t\tvm.emps.filter(x => x.isVisible).forEach(x => x.$selected = vm.selectedAll);\n\t\t\t\tif (vm.selectedAll) {\n\t\t\t\t\tdataHolder = vm.selectedEmps.concat(vm.emps.filter(x => x.isVisible));\n\t\t\t\t} else {\n\t\t\t\t\tdataHolder = vm.selectedEmps.filter(function (selRow) {\n\t\t\t\t\t\treturn vm.emps.filter(function (x) { return x.isVisible && x.id === selRow.id; }).length === 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tvm.selectedEmps = dataHolder;\n\t\t\t},\n\t\t\tselectOne(emp) {\n\t\t\t\tif (emp.$selected) {\n\t\t\t\t\tvm.selectedEmps.push(emp);\n\t\t\t\t} else {\n\t\t\t\t\tvm.selectedEmps = vm.selectedEmps.filter(function (v) { return v !== emp; });\n\t\t\t\t}\n\t\t\t\tvm.selectedAll = vm.emps.every(x => x.$selected === true)\n\t\t\t},\n\t\t\tloadNext() {\n\t\t\t\tif (vm.initalLimit <= vm.emps.length) {\n\t\t\t\t\tvm.initalLimit = vm.initalLimit + batchSize;\n\t\t\t\t}\n\t\t\t},\n\t\t\teditModeOn(emp, domId) {\n\t\t\t\temp.editMode = true;\n\t\t\t\trAF(function () {\n\t\t\t\t\tconst superInputText = document.getElementById(domId);\n\t\t\t\t\tconst inputEl = superInputText.getElementsByTagName('input');\n\t\t\t\t\tif (inputEl) { inputEl[0].focus(); }\n\t\t\t\t}, $scope);\n\t\t\t},\n\n\t\t\tfilterResults(category) {\n\n\t\t\t\tgo.clearAll();\n\n\t\t\t\tif (category && category !== 'all') {\n\t\t\t\t\tcategory = ssStringHlp.toCamelCase(category);\n\t\t\t\t\tvm.categoryVal = enumFlInviteStatus[category];\n\t\t\t\t\tvm.selectedFilter = category;\n\t\t\t\t} else {\n\t\t\t\t\tvm.categoryVal = '';\n\t\t\t\t\tvm.selectedFilter = 'all';\n\t\t\t\t}\n\n\t\t\t\tfilterAndSort();\n\n\t\t\t\tvm.categoryTotal = $scope.filtered.length;\n\t\t\t},\n\n\t\t\tinvite(emps, isBulk) {\n\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Sending Invitations...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tlet invitedEmps = emps.map((e) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\temployeeId: e.id,\n\t\t\t\t\t\temail: e._flUser.invitationEmailAddress,\n\t\t\t\t\t\treturnUrl: $window.location.origin,\n\t\t\t\t\t\tfirstName: e._firstName,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield ssEmployeeApi.invite(invitedEmps);\n\n\t\t\t\t\t\tlet employees = [];\n\n\t\t\t\t\t\tvm.emps.forEach(e => {\n\t\t\t\t\t\t\tif (emps.find(iEmps => iEmps.id === e.id)) {\n\t\t\t\t\t\t\t\te._flUser.invitationSentUtc = new Date();\n\t\t\t\t\t\t\t\temployees.push(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tyield employees.map(emp => emp.$save());\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tif (isBulk) {\n\t\t\t\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\t\t\t\temps: emps,\n\t\t\t\t\t\t\t\tcontent: `<h2>You successfully sent <ng-pluralize count=\"emps.length\" when=\"{'1': 'an invitation','other': 'invitations'}\"></ng-pluralize> to <br /><ng-pluralize count=\"emps.length\" when=\"{'1': '${emps[0].fullName}','other': '{} people'}\"></ng-pluralize></span></h2>`,\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\n\t\t\t\t\t\t\t\tshowSecondary: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tssToastHlp.success(`An invitation has been successfully sent to ${emps[0].fullName}`, `Invitation Sent`, false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\trevoke(emps) {\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Revoking Access...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tssAsync(function* () {\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield emps.map(emp => ssEmployeeApi.revoke(emp.id));\n\n\t\t\t\t\t\temps.forEach(e => {\n\t\t\t\t\t\t\te._flUser.invitationSentUtc = null;\n\t\t\t\t\t\t\te.flStatus = vm.inviteStatus.noAccess;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tyield emps.map(e => e.$save());\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tssToastHlp.success(`Access has been revoked for ${emps[0].fullName}`, 'Acccess Revoked', false);\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (e.status !== 404) { } // jshint ignore:line\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\n\t\t\t\t})();\n\t\t\t},\n\t\t\tdeactivate(emps, isBulk) {\n\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Pausing Access...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tlet ids = emps.map(e => e.id);\n\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield ssEmployeeApi.deactivate(ids);\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tif (isBulk) {\n\t\t\t\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\t\t\t\temps: emps,\n\t\t\t\t\t\t\t\tcontent: `<h2>You successfully paused access for <br /><ng-pluralize count=\"emps.length\" when=\"{'1': '${emps[0].fullName}','other': '{} people'}\"></ng-pluralize></h2>`,\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\n\t\t\t\t\t\t\t\tshowSecondary: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tssToastHlp.success(`Access has been paused for ${emps[0].fullName}`, 'Access Paused', false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\n\t\t\tactivate(emps, isBulk) {\n\n\t\t\t\tif (emps == null) { return; }\n\n\t\t\t\tvm.loading = true;\n\t\t\t\tvm.loadingStatus = 'Resuming Access...';\n\n\t\t\t\tif (!angular.isArray(emps)) {\n\t\t\t\t\temps = [emps];\n\t\t\t\t}\n\n\t\t\t\tlet ids = emps.map(e => e.id);\n\n\t\t\t\tssAsync(function* () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tyield ssEmployeeApi.activate(ids);\n\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tyield refreshResults();\n\n\t\t\t\t\t\tif (isBulk) {\n\t\t\t\t\t\t\tssModalSvc.showStandard({\n\t\t\t\t\t\t\t\temps: emps,\n\t\t\t\t\t\t\t\tcontent: `<h2>You successfully resumed access for <br /><ng-pluralize count=\"emps.length\" when=\"{'1': '${emps[0].fullName}','other': '{} people'}\"></ng-pluralize></h2>`,\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\n\t\t\t\t\t\t\t\tshowSecondary: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tssToastHlp.success(`Access has been resumed for ${emps[0].fullName}`, 'Access resumed', false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tvm.loading = false;\n\t\t\t\t\t\tssToastHlp.error('There was a problem performing this action. Please try again later.', 'Error', false);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\n\t\t\tsaveEmail(emp) {\n\t\t\t\temp.saving = true;\n\t\t\t\temp.$save().then(res => {\n\t\t\t\t\temp.editMode = false;\n\t\t\t\t\trAF(function () {\n\t\t\t\t\t\temp.saving = false;\n\t\t\t\t\t}, $scope);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcancelEdit(emp) {\n\t\t\t\temp.saving = true;\n\t\t\t\temp.$revert();\n\n\t\t\t\tif (emp._flUser.invitationEmailAddress == null) {\n\t\t\t\t\temp._flUser.invitationEmailAddress = emp.bestContactEmail;\n\t\t\t\t}\n\n\t\t\t\trAF(function () {\n\t\t\t\t\temp.saving = false;\n\t\t\t\t}, $scope);\n\n\t\t\t\temp.editMode = false;\n\t\t\t},\n\n\t\t\tsendMultiple() {\n\t\t\t\tlet selected = vm.selectedEmps.filter(e =>\n\t\t\t\t\te._flUser.invitationEmailAddress &&\n\t\t\t\t\tvalidation.email(e._flUser.invitationEmailAddress) === true &&\n\t\t\t\t\t(e.flStatus === vm.inviteStatus.sent || e.flStatus === vm.inviteStatus.noAccess));\n\n\t\t\t\tlet modalConfig = {\n\t\t\t\t\tselected: selected,\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tprimaryText: '',\n\t\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t\t};\n\n\t\t\t\t// Determine the modal messaging\n\t\t\t\tif (selected.length === vm.selectedEmps.length) {\n\t\t\t\t\tmodalConfig.content = `<h2>You are sending <ng-pluralize count=\"selected.length\" when=\"{'1': 'an invitation','other': 'invitations'}\"></ng-pluralize> to <br />${selected.length} <ng-pluralize count=\"selected.length\" when=\"{'1': 'person.','other': 'people.'}\"></ng-pluralize></h2>`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.content = `<h2>You <ng-pluralize count=\"selected.length\" when=\"{'0': 'can not','1': 'can only', 'other': 'can only'}\"></ng-pluralize> send <ng-pluralize count=\"selected.length\" when=\"{'one': 'an invitation','other': 'invitations'}\"></ng-pluralize> to <br /><ng-pluralize count=\"selected.length\" when=\"{'0': 'any of the people selected.', 'one': '{} of the ${vm.selectedEmps.length} people selected.', 'other': '{} of the ${vm.selectedEmps.length} people selected.'}\"></ng-pluralize>\n\t\t\t\t\t</h2>`;\n\t\t\t\t}\n\n\t\t\t\t// Determine what buttons are shown and their label text\n\t\t\t\tif (selected.length < 1) {\n\t\t\t\t\tmodalConfig.showPrimary = false;\n\t\t\t\t} else if (selected.length === 1) {\n\t\t\t\t\tmodalConfig.primaryText = `Send an Invitation to 1 person`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.primaryText = `Send Invitations to ${selected.length} people`;\n\t\t\t\t}\n\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\n\t\t\t\t\tgo.invite(selected, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tactivateMultiple() {\n\t\t\t\tlet selected = vm.selectedEmps.filter(e => e.flStatus === vm.inviteStatus.inactive);\n\n\t\t\t\tlet modalConfig = {\n\t\t\t\t\tselected: selected,\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tprimaryText: '',\n\t\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t\t};\n\n\t\t\t\t// Determine the modal messaging\n\t\t\t\tif (selected.length === vm.selectedEmps.length) {\n\t\t\t\t\tmodalConfig.content = `<h2>You are resuming access for ${selected.length} <ng-pluralize count=\"selected.length\" when=\"{'1': 'person.','other': 'people.'}\"></ng-pluralize></h2>`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.content = `<h2>You <ng-pluralize count=\"selected.length\" when=\"{'0': 'can not','1': 'can only', 'other': 'can only'}\"></ng-pluralize> resume access for <br /><ng-pluralize count=\"selected.length\" when=\"{'0': 'any of the people selected.', 'one': '{} of the ${vm.selectedEmps.length} people selected.', 'other': '{} of the ${vm.selectedEmps.length} people selected.'}\"></ng-pluralize>\n\t\t\t\t\t</h2>`;\n\t\t\t\t}\n\n\t\t\t\t// Determine what buttons are shown and their label text\n\t\t\t\tif (selected.length < 1) {\n\t\t\t\t\tmodalConfig.showPrimary = false;\n\t\t\t\t} else if (selected.length === 1) {\n\t\t\t\t\tmodalConfig.primaryText = `Resume Access for 1 person`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.primaryText = `Resume Access for ${selected.length} people`;\n\t\t\t\t}\n\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\n\t\t\t\t\tgo.activate(selected, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdeactivateMultiple() {\n\t\t\t\tlet selected = vm.selectedEmps.filter(e => e.flStatus === vm.inviteStatus.active);\n\n\t\t\t\tlet modalConfig = {\n\t\t\t\t\tselected: selected,\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tprimaryText: '',\n\t\t\t\t\tsecondaryText: 'Cancel'\n\t\t\t\t};\n\n\t\t\t\t// Determine the modal messaging\n\t\t\t\tif (selected.length === vm.selectedEmps.length) {\n\t\t\t\t\tmodalConfig.content = `<h2>You are pausing access for <ng-pluralize count=\"selected.length\" when=\"{'1': '{} person','other': '{} people'}\"></ng-pluralize></h2>`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.content = `<h2>You <ng-pluralize count=\"selected.length\" when=\"{'0': 'can not','1': 'can only', 'other': 'can only'}\"></ng-pluralize> pause access for <br /><ng-pluralize count=\"selected.length\" when=\"{'0': 'any of the people selected.', 'one': '{} of the ${vm.selectedEmps.length} people selected.', 'other': '{} of the ${vm.selectedEmps.length} people selected.'}\"></ng-pluralize>\n\t\t\t\t\t</h2>`;\n\t\t\t\t}\n\n\t\t\t\t// Determine what buttons are shown and their label text\n\t\t\t\tif (selected.length < 1) {\n\t\t\t\t\tmodalConfig.showPrimary = false;\n\t\t\t\t} else if (selected.length === 1) {\n\t\t\t\t\tmodalConfig.primaryText = `Pause Access for 1 person`;\n\t\t\t\t} else {\n\t\t\t\t\tmodalConfig.primaryText = `Pause Access for ${selected.length} people`;\n\t\t\t\t}\n\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\n\t\t\t\t\tgo.deactivate(selected, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tshowCredentials(emp) {\n\t\t\t\tvm.loadingCredentials = true;\n\t\t\t\tvm.credentialHtml = '';\n\t\t\t\tssEmployeeApi.getUserAccountCredentials({\n\t\t\t\t\tflId: emp.flId\n\t\t\t\t}).then((creds) => {\n\t\t\t\t\tlet html = `\n\t\t\t\t\t\t<dl class=\"meta-list\">\n\t\t\t\t\t\t\t<dt class=\"meta-list-term\">Username:</dt>\n\t\t\t\t\t\t\t\t<dd class=\"meta-list-desc\">${creds._userName}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t<dt class=\"meta-list-term\">Email:</dt>\n\t\t\t\t\t\t\t\t<dd class=\"meta-list-desc\">${creds._email}\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t`\n\t\t\t\t\tvm.credentialHtml = $sce.trustAsHtml(html);\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tconsole && console.error && console.error(e, 'Error fetching credentials');\n\t\t\t\t}).finally(() => { vm.loadingCredentials = false; });\n\t\t\t},\n\t\t\tshowInvitationStatus(emp) {\n\t\t\t\tvm.invitationHtml = $sce.trustAsHtml(`<h5>Invitation status:</h5>\n\t\t\t\t\t<p>\n\t\t\t\t\tsent\n\t\t\t\t\t<span ng-if=\"emp._flUser.invitationEmailAddress\">\n\t\t\t\t\t\tto ${emp._flUser.invitationEmailAddress}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"sent-date\">\n\t\t\t\t\t\ton ${$filter('date')(emp._flUser.invitationSentUtc, 'MM/dd/yy')}\n\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t`);\n\t\t\t},\n\t\t\tclearAll() {\n\t\t\t\tvm.initalLimit = batchSize;\n\t\t\t\tvm.selectedEmps = [];\n\t\t\t\tvm.allSelected = [];\n\t\t\t\tvm.search = '';\n\t\t\t\tvm.filterSelected = false;\n\t\t\t\tvm.emps.forEach(x => x.$selected = false);\n\t\t\t\tvm.selectedAll = false;\n\t\t\t}\n\t\t};\n\n\t\trefreshResults();\n\n\t\t$scope.$watch('vm.filterSelected', (nv) => {\n\t\t\tif (nv) {\n\t\t\t\tvm.search = '';\n\t\t\t}\n\t\t\tfilterAndSort();\n\t\t\tvm.selectedAll = vm.emps.filter(x => x.isVisible).every(x => x.$selected === true);\n\t\t});\n\n\t\t$scope.$watch('vm.search', (nv) => {\n\t\t\tif (nv) {\n\t\t\t\tvm.filterSelected = false;\n\t\t\t}\n\t\t\tfilterAndSort();\n\t\t\tvm.selectedAll = vm.emps.filter(x => x.isVisible).every(x => x.$selected === true);\n\t\t});\n\n\t\t$scope.$watchCollection('vm.selectedEmps', (nv, ov) => {\n\n\t\t\tif (filtering) { return; }\n\n\t\t\tconst removedRows = ov.filter(oldRow => !nv.includes(oldRow));\n\t\t\tconst addedRows = nv.filter(newRow => !ov.includes(newRow));\n\n\t\t\taddedRows.forEach((row) => {\n\t\t\t\tif (!vm.allSelected.includes(row)) {\n\t\t\t\t\tvm.allSelected.push(row);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvm.allSelected = vm.allSelected.filter((row) => {\n\t\t\t\treturn !removedRows.includes(row);\n\t\t\t});\n\n\t\t\tif (vm.allSelected.length === 0) {\n\t\t\t\tvm.filterSelected = false;\n\t\t\t}\n\t\t});\n\n\t\t$scope.$watchCollection('filtered', (nv) => {\n\t\t\tnv.forEach((visibleRow) => {\n\t\t\t\tif (vm.allSelected.includes(visibleRow) && !vm.selectedEmps.includes(visibleRow)) {\n\t\t\t\t\tvm.selectedEmps.push(visibleRow);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t\tfunction refreshResults() {\n\t\t\tif (vm.loading) { return; }\n\n\t\t\tlet currentPage = 0;\n\n\t\t\t// set to prevent multiple calls from firing at the same time on scroll\n\t\t\tvm.loading = true;\n\n\t\t\treturn (ssAsync(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvar orgId = yield ssActiveUserSvc.getOrgId();\n\t\t\t\t\tlet employeeList = [];\n\t\t\t\t\tvm.selectedEmps = [];\n\t\t\t\t\tvm.search = '';\n\t\t\t\t\tcurrentPage++;\n\t\t\t\t\tlet activeCount = 0;\n\t\t\t\t\tlet inactiveCount = 0;\n\t\t\t\t\tlet sentCount = 0;\n\t\t\t\t\tlet noAccessCount = 0;\n\t\t\t\t\tvar filter = Object.assign({}, {\n\t\t\t\t\t\tfields: 'firstname,lastname,fluser,ownerid,ownerversionnumber',\n\t\t\t\t\t\tinclude: 'emails',\n\t\t\t\t\t\toffset: (currentPage - 1) * pageSize,\n\t\t\t\t\t\tlimit: pageSize\n\t\t\t\t\t});\n\n\t\t\t\t\t//\tGet the first set of employees\n\t\t\t\t\tvm.loadingStatus = 'Loading users. This may take a while.';\n\t\t\t\t\temployeeList = yield ssEmployeeApi.getEmployeeAccess(filter);\n\t\t\t\t\tvm.totalEmployees = vm.categoryTotal = parseInt(employeeList.$headers['total-results'], 10);\n\n\t\t\t\t\t//\tGet the number of total pages, and since we've already loaded the first page,\n\t\t\t\t\t//\tsubtract it from the total\n\t\t\t\t\tlet pages = getPages(vm.totalEmployees, pageSize) - 1;\n\n\t\t\t\t\t// If there is more than 1 page, get the rest\n\t\t\t\t\tfor (var i = 0; i < pages; i++) {\n\t\t\t\t\t\tcurrentPage++;\n\t\t\t\t\t\tfilter.offset = (currentPage - 1) * pageSize;\n\t\t\t\t\t\t//vm.loadingStatus = Math.round((filter.offset / vm.totalEmployees) * 100) + '%';\n\t\t\t\t\t\t//\temployeeList no longer a json-api collection\n\t\t\t\t\t\temployeeList = [...employeeList, ...(yield ssEmployeeApi.getEmployeeAccess(filter))];\n\t\t\t\t\t}\n\n\t\t\t\t\t//\tGet all FL users and match them with EC users to determine their product access status\n\t\t\t\t\tlet flUsers = (yield ssEmployeeApi.productAccessStatus()).data\n\t\t\t\t\tlet userDictionary = flUsers.reduce(\n\t\t\t\t\t\tfunction (prev, curr) {\n\t\t\t\t\t\t\tvar user = curr.identities.find(\n\t\t\t\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\t\t\t\treturn a.type === 'employee'\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprev[user.id] = {\n\t\t\t\t\t\t\t\tflId: curr.flId,\n\t\t\t\t\t\t\t\tenabled: curr.enabled,\n\t\t\t\t\t\t\t\tproductAccess: curr\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {});\n\n\t\t\t\t\temployeeList.forEach(emp => {\n\t\t\t\t\t\t// Clear the selected flag that the grid uses to determined selected-ness\n\t\t\t\t\t\temp.$selected = false;\n\n\t\t\t\t\t\t// EC App access uses the best contact email if the FL record doesn't specify the address\n\t\t\t\t\t\tif (emp._flUser.invitationEmailAddress == null) {\n\t\t\t\t\t\t\temp._flUser.invitationEmailAddress = emp.bestContactEmail;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Pre-format the name since we're in here.\n\t\t\t\t\t\temp.displayName = `${emp._lastName}, ${emp._firstName}`;\n\n\t\t\t\t\t\t// Reset the record's edit status\n\t\t\t\t\t\temp.editMode = false;\n\t\t\t\t\t\temp.isVisible = true;\n\n\t\t\t\t\t\t// Set the employee's FLID and their enabled-ness\n\t\t\t\t\t\tlet flUser = userDictionary[emp.id];\n\t\t\t\t\t\temp.flId = null;\n\t\t\t\t\t\temp.enabled = false;\n\t\t\t\t\t\tif (flUser) {\n\t\t\t\t\t\t\temp.productAccessUser = flUser;\n\t\t\t\t\t\t\temp.flId = flUser.flId;\n\t\t\t\t\t\t\temp.enabled = flUser.enabled;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the user's status according to product access info\n\t\t\t\t\t\temp.flStatus = setFlStatus(emp);\n\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.active) { activeCount++; }\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.inactive) { inactiveCount++; }\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.sent) { sentCount++; }\n\t\t\t\t\t\tif (emp.flStatus === vm.inviteStatus.noAccess) { noAccessCount++; }\n\t\t\t\t\t});\n\n\t\t\t\t\tvm.emps = employeeList;\n\n\t\t\t\t\tgo.filterResults();\n\n\t\t\t\t\tvm.activeCount = activeCount;\n\t\t\t\t\tvm.inactiveCount = inactiveCount;\n\t\t\t\t\tvm.sentCount = sentCount;\n\t\t\t\t\tvm.noAccessCount = noAccessCount;\n\t\t\t\t\tvm.totalCount = vm.activeCount + vm.inactiveCount + vm.sentCount + vm.noAccessCount;\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tssToastHlp.error('Error retrieving employees. Please try again later.');\n\t\t\t\t\t$log.error(e)\n\t\t\t\t} finally {\n\t\t\t\t\trAF(() => vm.loading = false, $scope);\n\t\t\t\t}\n\t\t\t})());\n\t\t}\n\n\t\tfunction filterAndSort() {\n\t\t\tfiltering = true;\n\n\t\t\tif (vm.filterSelected) {\n\t\t\t\t$scope.filtered = vm.allSelected;\n\t\t\t} else {\n\t\t\t\t$scope.filtered = $filter('filter')(vm.emps, {\n\t\t\t\t\tflStatus: vm.categoryVal,\n\t\t\t\t\tfullName: vm.search\n\t\t\t\t});\n\t\t\t}\n\t\t\tvm.emps.forEach((emp) => {\n\t\t\t\temp.isVisible = $scope.filtered.includes(emp);\n\t\t\t});\n\n\t\t\trAF.raw(() => filtering = false);\n\t\t}\n\n\t\t/**\n\t\t * Sets the product access status (for display only) of an EC User based on their FL user status\n\t\t *\n\t\t * @param {any} emp - a Frontline Central employee record with attached Product Access record attached\n\t\t * @returns enumFlInviteStatus value\n\t\t */\n\t\tfunction setFlStatus(emp) {\n\t\t\treturn logic.setFLUserStatus(emp, enumFlInviteStatus);\n\t\t}\n\n\n\t\tfunction getPages(count, size) {\n\t\t\tvar remainder = count % size;\n\t\t\tvar div = (count - remainder) / size;\n\t\t\treturn div + (remainder > 0 ? 1 : 0);\n\t\t}\n\t}\n}\n\n// #-- END Segment (/user-accounts/segment-content) --# //\n// #--------------------------------------------------# //\n\nangular.module('ec-settings-segments').directive('segmentUserAccountsContent', () => new Content('content'));\n","/*@ngInject*/\nfunction logic() {\n\t// logic api\n\treturn {\n\t\tsetFLUserStatus\n\t};\n\n\t/**\n\t * Sets the Frontline User's Display Status on the Applicaiont Access Page\n\t *\n\t * @emp {any} An employee record of Frontline Central\n\t * @returns enumFlInviteSstatus value for the employee/product access record\n\t */\n\tfunction setFLUserStatus(emp, enumFlInviteStatus) {\n\t\t// The default status if everything fails.\n\t\t//\tMinimum displayable status should be no access since we can't figure it out\n\t\tlet status = enumFlInviteStatus.noAccess;\n\n\t\t// It would be odd if this property wasn't there, so no access for you if it doesn't exist!\n\t\tif (emp.productAccessUser == null) {\n\t\t\treturn status;\n\t\t}\n\n\t\t/**\n\t\t * ***** DUPLICATED FROM THE SOR APPLICATION ACCESS LOGIC ******\n\t\t * Check if the user has pending invitations that are not expired\n\t\t * The expired check is done because IsPending is not changed to false immediately on expiration\n\t\t */\n\t\tlet hasPendingInvite = false;\n\t\tlet productAccess = emp.productAccessUser.productAccess || { invitations: [] }; // another safety check on invitations.\n\n\t\tif (productAccess.invitations) {\n\t\t\tproductAccess.invitations.forEach((invitation) => {\n\t\t\t\tif (invitation.isPending && !invitation.isExpired) {\n\t\t\t\t\thasPendingInvite = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/************************************************\n\t\t *END SOR LOGIC DUPLICATION\n\t\t ************************************************/\n\n\t\tif (emp.flId) {\n\t\t\tif (emp.enabled) { // => enabled is set from a corresponding ProductAccess record for that user\n\t\t\t\tstatus = enumFlInviteStatus.active;\n\t\t\t} else {\n\t\t\t\tstatus = enumFlInviteStatus.inactive;\n\t\t\t}\n\t\t}\n\n\t\tif (!emp.flId) {\n\t\t\tif (hasPendingInvite) {\n\t\t\t\tstatus = enumFlInviteStatus.sent;\n\t\t\t} else {\n\t\t\t\tstatus = enumFlInviteStatus.noAccess;\n\t\t\t}\n\t\t}\n\n\t\treturn status\n\t}\n}\nangular.module('ec-settings-segment-logic').factory('segmentUserAccountsContentLogic', logic);\n","import {State} from 'base-state';\n// #--------------------------------# //\n// #---- State (/user-accounts) ----# //\n\n\n// view model that is shared by all segments on this route,\n// used for segment coordination. Define initial state here.\nconst routeVm = {};\n\nconst stateName = 'userAccounts';\n\n// config object for ui-router\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\nconst stateConfig = {\n\turl: '/user-accounts',\n\ttemplateUrl: 'routes/user-accounts/user-accounts.html',\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('users', 'view') || permissionSvc.isPermittedAction('employees', 'manageAccountAccess'),\n\tresolve: {\n\t\t$title: /*@ngInject*/ () => {\n\t\t\treturn 'Frontline Central - Application Access';\n\t\t}\n\t}\n};\n\n\n// #-- END State (/user-accounts) --# //\n// #--------------------------------# //\n\nangular.module('ec-settings').config(/*@ngInject*/ ($stateProvider) => {\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\n});\nangular.module('super-suit').run(($rootScope, $animate) => {\n\t$rootScope.$on('$stateChangeStart',\n\tfunction(event, toState, toParams, fromState, fromParams, options){\n\t\tif(toState.name === 'base.userAccounts') { $animate.enabled(false); }\n\t\telse{ $animate.enabled(true); }\n\t})\n})\n","/*@ngInject*/\nfunction messagingSvc() {\n\t// #--------------------------------# //\n\t// #---- Service (messagingSvc) ----# //\n\n\tconst NOT_FOUND = 'NOT FOUND';\n\n\t// Oh yes I did.\n\tconst messages = {\n\t\tgeneral: {\n\t\t\tsave: 'Save',\n\t\t\tcancel: 'Cancel',\n\t\t\tedit: 'Edit',\n\t\t\tcontinue: 'Continue',\n\t\t\tcontinueEditing: 'Continue Editing',\n\t\t\tdelete: 'Delete'\n\t\t},\n\t\tcredentials: {\n\n\t\t},\n\t\tsettings: {\n\t\t\tperformanceWarning: 'This page may run more slowly when the number of lanes or steps exceeds 50.'\n\t\t},\n\t\tgeneric: {\n\t\t\tcredentials: {\n\t\t\t\teditConfirmationTitle: 'Edit Custom {0}',\n\t\t\t\teditConfirmationMessage: 'Are you sure you want to edit this {0}? This {0} may already be associated with user credentials.',\n\t\t\t\tdeleteConfirmationTitle: 'Delete Custom {0}',\n\t\t\t\tdeleteConfirmationMessage: 'Are you sure you want to delete this {0}? This {0} may already be associated with users\\' credentials.  Deleting this item will prevent users from using this item across Frontline Central.',\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getMessage(area, key) {\n\t\tlet ret = messages[area][key];\n\t\tif (ret == null) {\n\t\t\tconsole.info(`Could not find message from area '${area}' and key '${key}'.`);\n\t\t\tret = NOT_FOUND;\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Gets a generic message and fills the placeholders with additional strings\n\t * @param {string} area The area type of the message string (General, Credentials, etc)\n\t * @param {string} key The key of the string to fetch\n\t * @param {array} args an array of strings that will be used in the placeholder message\n\t * @todo Not sure how to properly backfill this in JS right now.\n\t */\n\tfunction getPlaceholderMessage(area, key, args) {\n\t\tlet ret = NOT_FOUND;\n\t\ttry {\n\t\t\tret = messages.generic[area][key];\n\t\t}\n\t\tfinally {\n\t\t\tif (ret == null || ret == 'NOT FOUND') {\n\t\t\t\tconsole.info(`Could not find message from area '${area}' and key '${key}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn sFormat(ret, args);\n\t}\n\n\t/**\n\t * A basic C# string.Format()-like method used to do string replacements on strings with ordered placeholders\n\t * @param {string} input The input string to have its placeholders replaced\n\t * @param {array} args The string array of strings to use to replace the input string's placeholders in order 0-N\n\t * @example: input: 'The {0} has {1}'\n\t * \t\t\t\t\t\targs: ['sky','clouds'] => \"The sky has clouds\"\n\t * \t\t\t\t\t input: 'The {0} has {0}'\n\t * \t\t\t\t\t\targs: ['sky','clouds'] => \"The sky has sky\"\n\t */\n\tfunction sFormat(input, args) {\n\t\tif (input == null) { throw new Error(`Invalid argument exception: provided input was: '${input}'`); }\n\t\tif (typeof args !== typeof []) { throw new Error('Expected array of replacement values'); }\n\t\tlet place = input; // the text with the inputs to replace\n\n\t\targs.forEach((element, idx) => {\n\t\t\tlet r = new RegExp(`\\\\{${idx}\\}`, 'gim'); // dynamically build the regex for replacing ordered elements\n\t\t\tplace = place.replace(r, element);\n\t\t});\n\n\t\treturn place;\n\t}\n\t// External service API\n\treturn {\n\t\tgetMessage,\n\t\tgetPlaceholderMessage\n\t};\n\n\t// #-- END Service (messagingSvc) --# //\n\t// #--------------------------------# //\n}\n\nangular.module('ec-settings-services').factory('messagingSvc', messagingSvc);\n","/*@ngInject*/\nfunction propertyActionLabelSvc() {\n// #------------------------------------------# //\n// #---- Service (propertyActionLabelSvc) ----# //\n\n\t// External service API\n\tconst numberToValueDictionary = {\n\t\t0: 'Not Visible',\n\t\t1: 'Can View',\n\t\t3: 'Can Edit',\n\t\t4: 'Visible but redacted (numbers as ****)',\n\t\t5: 'Visible, redacted w/ option to view',\n\t\t7: 'Redacted but editable'\n\t};\n\n\tfunction getNumberToValueDictionary(){\n\t\treturn Object.assign({}, numberToValueDictionary);\n\t}\n\n\tfunction isAtLeastViewable(levelNumber){\n\t\t// I know that this code basically uses  magic-numbers; However, there are unit tests that ensure that the code doesn't regress\n\t\t//     ... so please do not xdescribe them! :)\n\t\tif(levelNumber >= 1){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isAtLeastEditable(levelNumber){\n\t\t// I know that this code basically uses  magic-numbers; However, there are unit tests that ensure that the code doesn't regress\n\t\t//     ... so please do not xdescribe them! :)\n\t\tif(levelNumber === 3 || levelNumber === 7){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\treturn {\n\t\tgetNumberToValueDictionary,\n\t\tisAtLeastViewable,\n\t\tisAtLeastEditable,\n\t}\n\n// #-- END Service (propertyActionLabelSvc) --# //\n// #------------------------------------------# //\n}\n\nangular.module('ec-settings-services').factory('propertyActionLabelSvc', propertyActionLabelSvc);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}